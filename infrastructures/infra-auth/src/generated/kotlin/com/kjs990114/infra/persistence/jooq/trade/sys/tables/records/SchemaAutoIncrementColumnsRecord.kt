/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.sys.tables.records


import com.kjs990114.infra.persistence.jooq.trade.sys.tables.SchemaAutoIncrementColumns

import java.math.BigDecimal

import org.jooq.Field
import org.jooq.Record10
import org.jooq.Row10
import org.jooq.impl.TableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class SchemaAutoIncrementColumnsRecord() : TableRecordImpl<SchemaAutoIncrementColumnsRecord>(SchemaAutoIncrementColumns.SCHEMA_AUTO_INCREMENT_COLUMNS), Record10<String?, String?, String?, String?, String?, Int?, Int?, ULong?, ULong?, BigDecimal?> {

    open var tableSchema: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var tableName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var columnName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var dataType: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var columnType: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsSigned")
    open var isSigned: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsUnsigned")
    open var isUnsigned: Int?
        set(value): Unit = set(6, value)
        get(): Int? = get(6) as Int?

    open var maxValue: ULong?
        set(value): Unit = set(7, value)
        get(): ULong? = get(7) as ULong?

    open var autoIncrement: ULong?
        set(value): Unit = set(8, value)
        get(): ULong? = get(8) as ULong?

    open var autoIncrementRatio: BigDecimal?
        set(value): Unit = set(9, value)
        get(): BigDecimal? = get(9) as BigDecimal?

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row10<String?, String?, String?, String?, String?, Int?, Int?, ULong?, ULong?, BigDecimal?> = super.fieldsRow() as Row10<String?, String?, String?, String?, String?, Int?, Int?, ULong?, ULong?, BigDecimal?>
    override fun valuesRow(): Row10<String?, String?, String?, String?, String?, Int?, Int?, ULong?, ULong?, BigDecimal?> = super.valuesRow() as Row10<String?, String?, String?, String?, String?, Int?, Int?, ULong?, ULong?, BigDecimal?>
    override fun field1(): Field<String?> = SchemaAutoIncrementColumns.SCHEMA_AUTO_INCREMENT_COLUMNS.TABLE_SCHEMA
    override fun field2(): Field<String?> = SchemaAutoIncrementColumns.SCHEMA_AUTO_INCREMENT_COLUMNS.TABLE_NAME
    override fun field3(): Field<String?> = SchemaAutoIncrementColumns.SCHEMA_AUTO_INCREMENT_COLUMNS.COLUMN_NAME
    override fun field4(): Field<String?> = SchemaAutoIncrementColumns.SCHEMA_AUTO_INCREMENT_COLUMNS.DATA_TYPE
    override fun field5(): Field<String?> = SchemaAutoIncrementColumns.SCHEMA_AUTO_INCREMENT_COLUMNS.COLUMN_TYPE
    override fun field6(): Field<Int?> = SchemaAutoIncrementColumns.SCHEMA_AUTO_INCREMENT_COLUMNS.IS_SIGNED
    override fun field7(): Field<Int?> = SchemaAutoIncrementColumns.SCHEMA_AUTO_INCREMENT_COLUMNS.IS_UNSIGNED
    override fun field8(): Field<ULong?> = SchemaAutoIncrementColumns.SCHEMA_AUTO_INCREMENT_COLUMNS.MAX_VALUE
    override fun field9(): Field<ULong?> = SchemaAutoIncrementColumns.SCHEMA_AUTO_INCREMENT_COLUMNS.AUTO_INCREMENT
    override fun field10(): Field<BigDecimal?> = SchemaAutoIncrementColumns.SCHEMA_AUTO_INCREMENT_COLUMNS.AUTO_INCREMENT_RATIO
    override fun component1(): String? = tableSchema
    override fun component2(): String? = tableName
    override fun component3(): String? = columnName
    override fun component4(): String? = dataType
    override fun component5(): String? = columnType
    override fun component6(): Int? = isSigned
    override fun component7(): Int? = isUnsigned
    override fun component8(): ULong? = maxValue
    override fun component9(): ULong? = autoIncrement
    override fun component10(): BigDecimal? = autoIncrementRatio
    override fun value1(): String? = tableSchema
    override fun value2(): String? = tableName
    override fun value3(): String? = columnName
    override fun value4(): String? = dataType
    override fun value5(): String? = columnType
    override fun value6(): Int? = isSigned
    override fun value7(): Int? = isUnsigned
    override fun value8(): ULong? = maxValue
    override fun value9(): ULong? = autoIncrement
    override fun value10(): BigDecimal? = autoIncrementRatio

    override fun value1(value: String?): SchemaAutoIncrementColumnsRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): SchemaAutoIncrementColumnsRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): SchemaAutoIncrementColumnsRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): SchemaAutoIncrementColumnsRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): SchemaAutoIncrementColumnsRecord {
        set(4, value)
        return this
    }

    override fun value6(value: Int?): SchemaAutoIncrementColumnsRecord {
        set(5, value)
        return this
    }

    override fun value7(value: Int?): SchemaAutoIncrementColumnsRecord {
        set(6, value)
        return this
    }

    override fun value8(value: ULong?): SchemaAutoIncrementColumnsRecord {
        set(7, value)
        return this
    }

    override fun value9(value: ULong?): SchemaAutoIncrementColumnsRecord {
        set(8, value)
        return this
    }

    override fun value10(value: BigDecimal?): SchemaAutoIncrementColumnsRecord {
        set(9, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: String?, value5: String?, value6: Int?, value7: Int?, value8: ULong?, value9: ULong?, value10: BigDecimal?): SchemaAutoIncrementColumnsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        return this
    }

    /**
     * Create a detached, initialised SchemaAutoIncrementColumnsRecord
     */
    constructor(tableSchema: String? = null, tableName: String? = null, columnName: String? = null, dataType: String? = null, columnType: String? = null, isSigned: Int? = null, isUnsigned: Int? = null, maxValue: ULong? = null, autoIncrement: ULong? = null, autoIncrementRatio: BigDecimal? = null): this() {
        this.tableSchema = tableSchema
        this.tableName = tableName
        this.columnName = columnName
        this.dataType = dataType
        this.columnType = columnType
        this.isSigned = isSigned
        this.isUnsigned = isUnsigned
        this.maxValue = maxValue
        this.autoIncrement = autoIncrement
        this.autoIncrementRatio = autoIncrementRatio
        resetChangedOnNotNull()
    }
}
