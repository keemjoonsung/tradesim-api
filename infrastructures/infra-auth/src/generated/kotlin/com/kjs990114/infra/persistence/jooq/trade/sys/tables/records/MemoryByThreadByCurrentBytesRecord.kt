/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.sys.tables.records


import com.kjs990114.infra.persistence.jooq.trade.sys.tables.MemoryByThreadByCurrentBytes

import java.math.BigInteger

import org.jooq.Field
import org.jooq.Record7
import org.jooq.Row7
import org.jooq.impl.TableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class MemoryByThreadByCurrentBytesRecord() : TableRecordImpl<MemoryByThreadByCurrentBytesRecord>(MemoryByThreadByCurrentBytes.MEMORY_BY_THREAD_BY_CURRENT_BYTES), Record7<ULong?, String?, BigInteger?, String?, String?, String?, String?> {

    open var threadId: ULong?
        set(value): Unit = set(0, value)
        get(): ULong? = get(0) as ULong?

    open var user: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var currentCountUsed: BigInteger?
        set(value): Unit = set(2, value)
        get(): BigInteger? = get(2) as BigInteger?

    open var currentAllocated: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var currentAvgAlloc: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var currentMaxAlloc: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var totalAllocated: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row7<ULong?, String?, BigInteger?, String?, String?, String?, String?> = super.fieldsRow() as Row7<ULong?, String?, BigInteger?, String?, String?, String?, String?>
    override fun valuesRow(): Row7<ULong?, String?, BigInteger?, String?, String?, String?, String?> = super.valuesRow() as Row7<ULong?, String?, BigInteger?, String?, String?, String?, String?>
    override fun field1(): Field<ULong?> = MemoryByThreadByCurrentBytes.MEMORY_BY_THREAD_BY_CURRENT_BYTES.THREAD_ID
    override fun field2(): Field<String?> = MemoryByThreadByCurrentBytes.MEMORY_BY_THREAD_BY_CURRENT_BYTES.USER
    override fun field3(): Field<BigInteger?> = MemoryByThreadByCurrentBytes.MEMORY_BY_THREAD_BY_CURRENT_BYTES.CURRENT_COUNT_USED
    override fun field4(): Field<String?> = MemoryByThreadByCurrentBytes.MEMORY_BY_THREAD_BY_CURRENT_BYTES.CURRENT_ALLOCATED
    override fun field5(): Field<String?> = MemoryByThreadByCurrentBytes.MEMORY_BY_THREAD_BY_CURRENT_BYTES.CURRENT_AVG_ALLOC
    override fun field6(): Field<String?> = MemoryByThreadByCurrentBytes.MEMORY_BY_THREAD_BY_CURRENT_BYTES.CURRENT_MAX_ALLOC
    override fun field7(): Field<String?> = MemoryByThreadByCurrentBytes.MEMORY_BY_THREAD_BY_CURRENT_BYTES.TOTAL_ALLOCATED
    override fun component1(): ULong? = threadId
    override fun component2(): String? = user
    override fun component3(): BigInteger? = currentCountUsed
    override fun component4(): String? = currentAllocated
    override fun component5(): String? = currentAvgAlloc
    override fun component6(): String? = currentMaxAlloc
    override fun component7(): String? = totalAllocated
    override fun value1(): ULong? = threadId
    override fun value2(): String? = user
    override fun value3(): BigInteger? = currentCountUsed
    override fun value4(): String? = currentAllocated
    override fun value5(): String? = currentAvgAlloc
    override fun value6(): String? = currentMaxAlloc
    override fun value7(): String? = totalAllocated

    override fun value1(value: ULong?): MemoryByThreadByCurrentBytesRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): MemoryByThreadByCurrentBytesRecord {
        set(1, value)
        return this
    }

    override fun value3(value: BigInteger?): MemoryByThreadByCurrentBytesRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): MemoryByThreadByCurrentBytesRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): MemoryByThreadByCurrentBytesRecord {
        set(4, value)
        return this
    }

    override fun value6(value: String?): MemoryByThreadByCurrentBytesRecord {
        set(5, value)
        return this
    }

    override fun value7(value: String?): MemoryByThreadByCurrentBytesRecord {
        set(6, value)
        return this
    }

    override fun values(value1: ULong?, value2: String?, value3: BigInteger?, value4: String?, value5: String?, value6: String?, value7: String?): MemoryByThreadByCurrentBytesRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        return this
    }

    /**
     * Create a detached, initialised MemoryByThreadByCurrentBytesRecord
     */
    constructor(threadId: ULong? = null, user: String? = null, currentCountUsed: BigInteger? = null, currentAllocated: String? = null, currentAvgAlloc: String? = null, currentMaxAlloc: String? = null, totalAllocated: String? = null): this() {
        this.threadId = threadId
        this.user = user
        this.currentCountUsed = currentCountUsed
        this.currentAllocated = currentAllocated
        this.currentAvgAlloc = currentAvgAlloc
        this.currentMaxAlloc = currentMaxAlloc
        this.totalAllocated = totalAllocated
        resetChangedOnNotNull()
    }
}
