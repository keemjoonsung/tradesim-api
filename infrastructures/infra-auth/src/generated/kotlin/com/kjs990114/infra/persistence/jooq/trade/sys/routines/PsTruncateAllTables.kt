/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.sys.routines


import com.kjs990114.infra.persistence.jooq.trade.sys.Sys

import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * 
 * Description
 * -----------
 * 
 * Truncates all summary tables within Performance Schema, 
 * resetting all aggregated instrumentation as a snapshot.
 * 
 * Parameters
 * -----------
 * 
 * in_verbose (BOOLEAN):
 *   Whether to print each TRUNCATE statement before running
 * 
 * Example
 * -----------
 * 
 * mysql&gt; CALL sys.ps_truncate_all_tables(false);
 * +---------------------+
 * | summary             |
 * +---------------------+
 * | Truncated 44 tables |
 * +---------------------+
 * 1 row in set (0.10 sec)
 * 
 * Query OK, 0 rows affected (0.10 sec)

 */
@Suppress("UNCHECKED_CAST")
open class PsTruncateAllTables : AbstractRoutine<java.lang.Void>("ps_truncate_all_tables", Sys.SYS) {
    companion object {

        /**
         * The parameter <code>sys.ps_truncate_all_tables.in_verbose</code>.
         */
        val IN_VERBOSE: Parameter<Byte?> = Internal.createParameter("in_verbose", SQLDataType.TINYINT, false, false)
    }

    init {
        addInParameter(PsTruncateAllTables.IN_VERBOSE)
    }

    /**
     * Set the <code>in_verbose</code> parameter IN value to the routine
     */
    fun setInVerbose(value: Byte?): Unit = setValue(PsTruncateAllTables.IN_VERBOSE, value)
}
