/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.sys.routines


import com.kjs990114.infra.persistence.jooq.trade.sys.Sys

import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * 
 * Description
 * -----------
 * 
 * Disables consumers within Performance Schema 
 * matching the input pattern.
 * 
 * Parameters
 * -----------
 * 
 * consumer (VARCHAR(128)):
 *   A LIKE pattern match (using "%consumer%") of consumers to disable
 * 
 * Example
 * -----------
 * 
 * To disable all consumers:
 * 
 * mysql&gt; CALL sys.ps_setup_disable_consumer('');
 * +--------------------------+
 * | summary                  |
 * +--------------------------+
 * | Disabled 15 consumers    |
 * +--------------------------+
 * 1 row in set (0.02 sec)
 * 
 * To disable just the event_stage consumers:
 * 
 * mysql&gt; CALL sys.ps_setup_disable_comsumers('stage');
 * +------------------------+
 * | summary                |
 * +------------------------+
 * | Disabled 3 consumers   |
 * +------------------------+
 * 1 row in set (0.00 sec)

 */
@Suppress("UNCHECKED_CAST")
open class PsSetupDisableConsumer : AbstractRoutine<java.lang.Void>("ps_setup_disable_consumer", Sys.SYS) {
    companion object {

        /**
         * The parameter <code>sys.ps_setup_disable_consumer.consumer</code>.
         */
        val CONSUMER: Parameter<String?> = Internal.createParameter("consumer", SQLDataType.VARCHAR(128), false, false)
    }

    init {
        addInParameter(PsSetupDisableConsumer.CONSUMER)
    }

    /**
     * Set the <code>consumer</code> parameter IN value to the routine
     */
    fun setConsumer(value: String?): Unit = setValue(PsSetupDisableConsumer.CONSUMER, value)
}
