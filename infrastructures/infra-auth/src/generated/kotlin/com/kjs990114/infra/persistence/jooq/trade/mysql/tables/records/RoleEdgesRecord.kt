/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.mysql.tables.records


import com.kjs990114.infra.persistence.jooq.trade.mysql.enums.RoleEdgesWithAdminOption
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.RoleEdges

import org.jooq.Field
import org.jooq.Record4
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.UpdatableRecordImpl


/**
 * Role hierarchy and role grants
 */
@Suppress("UNCHECKED_CAST")
open class RoleEdgesRecord() : UpdatableRecordImpl<RoleEdgesRecord>(RoleEdges.ROLE_EDGES), Record5<String?, String?, String?, String?, RoleEdgesWithAdminOption?> {

    open var fromHost: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var fromUser: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var toHost: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var toUser: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var withAdminOption: RoleEdgesWithAdminOption?
        set(value): Unit = set(4, value)
        get(): RoleEdgesWithAdminOption? = get(4) as RoleEdgesWithAdminOption?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record4<String?, String?, String?, String?> = super.key() as Record4<String?, String?, String?, String?>

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row5<String?, String?, String?, String?, RoleEdgesWithAdminOption?> = super.fieldsRow() as Row5<String?, String?, String?, String?, RoleEdgesWithAdminOption?>
    override fun valuesRow(): Row5<String?, String?, String?, String?, RoleEdgesWithAdminOption?> = super.valuesRow() as Row5<String?, String?, String?, String?, RoleEdgesWithAdminOption?>
    override fun field1(): Field<String?> = RoleEdges.ROLE_EDGES.FROM_HOST
    override fun field2(): Field<String?> = RoleEdges.ROLE_EDGES.FROM_USER
    override fun field3(): Field<String?> = RoleEdges.ROLE_EDGES.TO_HOST
    override fun field4(): Field<String?> = RoleEdges.ROLE_EDGES.TO_USER
    override fun field5(): Field<RoleEdgesWithAdminOption?> = RoleEdges.ROLE_EDGES.WITH_ADMIN_OPTION
    override fun component1(): String? = fromHost
    override fun component2(): String? = fromUser
    override fun component3(): String? = toHost
    override fun component4(): String? = toUser
    override fun component5(): RoleEdgesWithAdminOption? = withAdminOption
    override fun value1(): String? = fromHost
    override fun value2(): String? = fromUser
    override fun value3(): String? = toHost
    override fun value4(): String? = toUser
    override fun value5(): RoleEdgesWithAdminOption? = withAdminOption

    override fun value1(value: String?): RoleEdgesRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): RoleEdgesRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): RoleEdgesRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): RoleEdgesRecord {
        set(3, value)
        return this
    }

    override fun value5(value: RoleEdgesWithAdminOption?): RoleEdgesRecord {
        set(4, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: String?, value5: RoleEdgesWithAdminOption?): RoleEdgesRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        return this
    }

    /**
     * Create a detached, initialised RoleEdgesRecord
     */
    constructor(fromHost: String? = null, fromUser: String? = null, toHost: String? = null, toUser: String? = null, withAdminOption: RoleEdgesWithAdminOption? = null): this() {
        this.fromHost = fromHost
        this.fromUser = fromUser
        this.toHost = toHost
        this.toUser = toUser
        this.withAdminOption = withAdminOption
        resetChangedOnNotNull()
    }
}
