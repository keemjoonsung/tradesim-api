/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.sys.tables.records


import com.kjs990114.infra.persistence.jooq.trade.sys.tables.MemoryGlobalByCurrentBytes

import org.jooq.Field
import org.jooq.Record7
import org.jooq.Row7
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class MemoryGlobalByCurrentBytesRecord() : TableRecordImpl<MemoryGlobalByCurrentBytesRecord>(MemoryGlobalByCurrentBytes.MEMORY_GLOBAL_BY_CURRENT_BYTES), Record7<String?, Long?, String?, String?, Long?, String?, String?> {

    open var eventName: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var currentCount: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var currentAlloc: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var currentAvgAlloc: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var highCount: Long?
        set(value): Unit = set(4, value)
        get(): Long? = get(4) as Long?

    open var highAlloc: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var highAvgAlloc: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row7<String?, Long?, String?, String?, Long?, String?, String?> = super.fieldsRow() as Row7<String?, Long?, String?, String?, Long?, String?, String?>
    override fun valuesRow(): Row7<String?, Long?, String?, String?, Long?, String?, String?> = super.valuesRow() as Row7<String?, Long?, String?, String?, Long?, String?, String?>
    override fun field1(): Field<String?> = MemoryGlobalByCurrentBytes.MEMORY_GLOBAL_BY_CURRENT_BYTES.EVENT_NAME
    override fun field2(): Field<Long?> = MemoryGlobalByCurrentBytes.MEMORY_GLOBAL_BY_CURRENT_BYTES.CURRENT_COUNT
    override fun field3(): Field<String?> = MemoryGlobalByCurrentBytes.MEMORY_GLOBAL_BY_CURRENT_BYTES.CURRENT_ALLOC
    override fun field4(): Field<String?> = MemoryGlobalByCurrentBytes.MEMORY_GLOBAL_BY_CURRENT_BYTES.CURRENT_AVG_ALLOC
    override fun field5(): Field<Long?> = MemoryGlobalByCurrentBytes.MEMORY_GLOBAL_BY_CURRENT_BYTES.HIGH_COUNT
    override fun field6(): Field<String?> = MemoryGlobalByCurrentBytes.MEMORY_GLOBAL_BY_CURRENT_BYTES.HIGH_ALLOC
    override fun field7(): Field<String?> = MemoryGlobalByCurrentBytes.MEMORY_GLOBAL_BY_CURRENT_BYTES.HIGH_AVG_ALLOC
    override fun component1(): String? = eventName
    override fun component2(): Long? = currentCount
    override fun component3(): String? = currentAlloc
    override fun component4(): String? = currentAvgAlloc
    override fun component5(): Long? = highCount
    override fun component6(): String? = highAlloc
    override fun component7(): String? = highAvgAlloc
    override fun value1(): String? = eventName
    override fun value2(): Long? = currentCount
    override fun value3(): String? = currentAlloc
    override fun value4(): String? = currentAvgAlloc
    override fun value5(): Long? = highCount
    override fun value6(): String? = highAlloc
    override fun value7(): String? = highAvgAlloc

    override fun value1(value: String?): MemoryGlobalByCurrentBytesRecord {
        set(0, value)
        return this
    }

    override fun value2(value: Long?): MemoryGlobalByCurrentBytesRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): MemoryGlobalByCurrentBytesRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): MemoryGlobalByCurrentBytesRecord {
        set(3, value)
        return this
    }

    override fun value5(value: Long?): MemoryGlobalByCurrentBytesRecord {
        set(4, value)
        return this
    }

    override fun value6(value: String?): MemoryGlobalByCurrentBytesRecord {
        set(5, value)
        return this
    }

    override fun value7(value: String?): MemoryGlobalByCurrentBytesRecord {
        set(6, value)
        return this
    }

    override fun values(value1: String?, value2: Long?, value3: String?, value4: String?, value5: Long?, value6: String?, value7: String?): MemoryGlobalByCurrentBytesRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        return this
    }

    /**
     * Create a detached, initialised MemoryGlobalByCurrentBytesRecord
     */
    constructor(eventName: String? = null, currentCount: Long? = null, currentAlloc: String? = null, currentAvgAlloc: String? = null, highCount: Long? = null, highAlloc: String? = null, highAvgAlloc: String? = null): this() {
        this.eventName = eventName
        this.currentCount = currentCount
        this.currentAlloc = currentAlloc
        this.currentAvgAlloc = currentAvgAlloc
        this.highCount = highCount
        this.highAlloc = highAlloc
        this.highAvgAlloc = highAvgAlloc
        resetChangedOnNotNull()
    }
}
