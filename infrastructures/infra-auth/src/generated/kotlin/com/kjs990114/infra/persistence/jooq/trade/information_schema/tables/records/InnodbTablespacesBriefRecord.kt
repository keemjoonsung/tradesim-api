/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.InnodbTablespacesBrief

import org.jooq.Field
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class InnodbTablespacesBriefRecord() : TableRecordImpl<InnodbTablespacesBriefRecord>(InnodbTablespacesBrief.INNODB_TABLESPACES_BRIEF), Record5<ByteArray?, String?, String?, ByteArray?, String?> {

    open var space: ByteArray?
        set(value): Unit = set(0, value)
        get(): ByteArray? = get(0) as ByteArray?

    open var name: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var path: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var flag: ByteArray?
        set(value): Unit = set(3, value)
        get(): ByteArray? = get(3) as ByteArray?

    open var spaceType: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row5<ByteArray?, String?, String?, ByteArray?, String?> = super.fieldsRow() as Row5<ByteArray?, String?, String?, ByteArray?, String?>
    override fun valuesRow(): Row5<ByteArray?, String?, String?, ByteArray?, String?> = super.valuesRow() as Row5<ByteArray?, String?, String?, ByteArray?, String?>
    override fun field1(): Field<ByteArray?> = InnodbTablespacesBrief.INNODB_TABLESPACES_BRIEF.SPACE
    override fun field2(): Field<String?> = InnodbTablespacesBrief.INNODB_TABLESPACES_BRIEF.NAME
    override fun field3(): Field<String?> = InnodbTablespacesBrief.INNODB_TABLESPACES_BRIEF.PATH
    override fun field4(): Field<ByteArray?> = InnodbTablespacesBrief.INNODB_TABLESPACES_BRIEF.FLAG
    override fun field5(): Field<String?> = InnodbTablespacesBrief.INNODB_TABLESPACES_BRIEF.SPACE_TYPE
    override fun component1(): ByteArray? = space
    override fun component2(): String? = name
    override fun component3(): String? = path
    override fun component4(): ByteArray? = flag
    override fun component5(): String? = spaceType
    override fun value1(): ByteArray? = space
    override fun value2(): String? = name
    override fun value3(): String? = path
    override fun value4(): ByteArray? = flag
    override fun value5(): String? = spaceType

    override fun value1(value: ByteArray?): InnodbTablespacesBriefRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): InnodbTablespacesBriefRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): InnodbTablespacesBriefRecord {
        set(2, value)
        return this
    }

    override fun value4(value: ByteArray?): InnodbTablespacesBriefRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): InnodbTablespacesBriefRecord {
        set(4, value)
        return this
    }

    override fun values(value1: ByteArray?, value2: String?, value3: String?, value4: ByteArray?, value5: String?): InnodbTablespacesBriefRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        return this
    }

    /**
     * Create a detached, initialised InnodbTablespacesBriefRecord
     */
    constructor(space: ByteArray? = null, name: String? = null, path: String? = null, flag: ByteArray? = null, spaceType: String? = null): this() {
        this.space = space
        this.name = name
        this.path = path
        this.flag = flag
        this.spaceType = spaceType
        resetChangedOnNotNull()
    }
}
