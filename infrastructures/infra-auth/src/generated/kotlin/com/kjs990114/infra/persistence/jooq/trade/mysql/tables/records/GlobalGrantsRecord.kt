/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.mysql.tables.records


import com.kjs990114.infra.persistence.jooq.trade.mysql.enums.GlobalGrantsWithGrantOption
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.GlobalGrants

import org.jooq.Field
import org.jooq.Record3
import org.jooq.Record4
import org.jooq.Row4
import org.jooq.impl.UpdatableRecordImpl


/**
 * Extended global grants
 */
@Suppress("UNCHECKED_CAST")
open class GlobalGrantsRecord() : UpdatableRecordImpl<GlobalGrantsRecord>(GlobalGrants.GLOBAL_GRANTS), Record4<String?, String?, String?, GlobalGrantsWithGrantOption?> {

    open var user: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var host: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var priv: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var withGrantOption: GlobalGrantsWithGrantOption?
        set(value): Unit = set(3, value)
        get(): GlobalGrantsWithGrantOption? = get(3) as GlobalGrantsWithGrantOption?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record3<String?, String?, String?> = super.key() as Record3<String?, String?, String?>

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row4<String?, String?, String?, GlobalGrantsWithGrantOption?> = super.fieldsRow() as Row4<String?, String?, String?, GlobalGrantsWithGrantOption?>
    override fun valuesRow(): Row4<String?, String?, String?, GlobalGrantsWithGrantOption?> = super.valuesRow() as Row4<String?, String?, String?, GlobalGrantsWithGrantOption?>
    override fun field1(): Field<String?> = GlobalGrants.GLOBAL_GRANTS.USER
    override fun field2(): Field<String?> = GlobalGrants.GLOBAL_GRANTS.HOST
    override fun field3(): Field<String?> = GlobalGrants.GLOBAL_GRANTS.PRIV
    override fun field4(): Field<GlobalGrantsWithGrantOption?> = GlobalGrants.GLOBAL_GRANTS.WITH_GRANT_OPTION
    override fun component1(): String? = user
    override fun component2(): String? = host
    override fun component3(): String? = priv
    override fun component4(): GlobalGrantsWithGrantOption? = withGrantOption
    override fun value1(): String? = user
    override fun value2(): String? = host
    override fun value3(): String? = priv
    override fun value4(): GlobalGrantsWithGrantOption? = withGrantOption

    override fun value1(value: String?): GlobalGrantsRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): GlobalGrantsRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): GlobalGrantsRecord {
        set(2, value)
        return this
    }

    override fun value4(value: GlobalGrantsWithGrantOption?): GlobalGrantsRecord {
        set(3, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: GlobalGrantsWithGrantOption?): GlobalGrantsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        return this
    }

    /**
     * Create a detached, initialised GlobalGrantsRecord
     */
    constructor(user: String? = null, host: String? = null, priv: String? = null, withGrantOption: GlobalGrantsWithGrantOption? = null): this() {
        this.user = user
        this.host = host
        this.priv = priv
        this.withGrantOption = withGrantOption
        resetChangedOnNotNull()
    }
}
