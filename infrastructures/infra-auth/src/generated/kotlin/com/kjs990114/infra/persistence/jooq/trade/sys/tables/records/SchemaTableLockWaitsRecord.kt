/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.sys.tables.records


import com.kjs990114.infra.persistence.jooq.trade.sys.tables.SchemaTableLockWaits

import org.jooq.Field
import org.jooq.Record18
import org.jooq.Row18
import org.jooq.impl.TableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class SchemaTableLockWaitsRecord() : TableRecordImpl<SchemaTableLockWaitsRecord>(SchemaTableLockWaits.SCHEMA_TABLE_LOCK_WAITS), Record18<String?, String?, ULong?, ULong?, String?, String?, String?, String?, Long?, ULong?, ULong?, ULong?, ULong?, String?, String?, String?, String?, String?> {

    open var objectSchema: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var objectName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var waitingThreadId: ULong?
        set(value): Unit = set(2, value)
        get(): ULong? = get(2) as ULong?

    open var waitingPid: ULong?
        set(value): Unit = set(3, value)
        get(): ULong? = get(3) as ULong?

    open var waitingAccount: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var waitingLockType: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var waitingLockDuration: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var waitingQuery: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var waitingQuerySecs: Long?
        set(value): Unit = set(8, value)
        get(): Long? = get(8) as Long?

    open var waitingQueryRowsAffected: ULong?
        set(value): Unit = set(9, value)
        get(): ULong? = get(9) as ULong?

    open var waitingQueryRowsExamined: ULong?
        set(value): Unit = set(10, value)
        get(): ULong? = get(10) as ULong?

    open var blockingThreadId: ULong?
        set(value): Unit = set(11, value)
        get(): ULong? = get(11) as ULong?

    open var blockingPid: ULong?
        set(value): Unit = set(12, value)
        get(): ULong? = get(12) as ULong?

    open var blockingAccount: String?
        set(value): Unit = set(13, value)
        get(): String? = get(13) as String?

    open var blockingLockType: String?
        set(value): Unit = set(14, value)
        get(): String? = get(14) as String?

    open var blockingLockDuration: String?
        set(value): Unit = set(15, value)
        get(): String? = get(15) as String?

    open var sqlKillBlockingQuery: String?
        set(value): Unit = set(16, value)
        get(): String? = get(16) as String?

    open var sqlKillBlockingConnection: String?
        set(value): Unit = set(17, value)
        get(): String? = get(17) as String?

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row18<String?, String?, ULong?, ULong?, String?, String?, String?, String?, Long?, ULong?, ULong?, ULong?, ULong?, String?, String?, String?, String?, String?> = super.fieldsRow() as Row18<String?, String?, ULong?, ULong?, String?, String?, String?, String?, Long?, ULong?, ULong?, ULong?, ULong?, String?, String?, String?, String?, String?>
    override fun valuesRow(): Row18<String?, String?, ULong?, ULong?, String?, String?, String?, String?, Long?, ULong?, ULong?, ULong?, ULong?, String?, String?, String?, String?, String?> = super.valuesRow() as Row18<String?, String?, ULong?, ULong?, String?, String?, String?, String?, Long?, ULong?, ULong?, ULong?, ULong?, String?, String?, String?, String?, String?>
    override fun field1(): Field<String?> = SchemaTableLockWaits.SCHEMA_TABLE_LOCK_WAITS.OBJECT_SCHEMA
    override fun field2(): Field<String?> = SchemaTableLockWaits.SCHEMA_TABLE_LOCK_WAITS.OBJECT_NAME
    override fun field3(): Field<ULong?> = SchemaTableLockWaits.SCHEMA_TABLE_LOCK_WAITS.WAITING_THREAD_ID
    override fun field4(): Field<ULong?> = SchemaTableLockWaits.SCHEMA_TABLE_LOCK_WAITS.WAITING_PID
    override fun field5(): Field<String?> = SchemaTableLockWaits.SCHEMA_TABLE_LOCK_WAITS.WAITING_ACCOUNT
    override fun field6(): Field<String?> = SchemaTableLockWaits.SCHEMA_TABLE_LOCK_WAITS.WAITING_LOCK_TYPE
    override fun field7(): Field<String?> = SchemaTableLockWaits.SCHEMA_TABLE_LOCK_WAITS.WAITING_LOCK_DURATION
    override fun field8(): Field<String?> = SchemaTableLockWaits.SCHEMA_TABLE_LOCK_WAITS.WAITING_QUERY
    override fun field9(): Field<Long?> = SchemaTableLockWaits.SCHEMA_TABLE_LOCK_WAITS.WAITING_QUERY_SECS
    override fun field10(): Field<ULong?> = SchemaTableLockWaits.SCHEMA_TABLE_LOCK_WAITS.WAITING_QUERY_ROWS_AFFECTED
    override fun field11(): Field<ULong?> = SchemaTableLockWaits.SCHEMA_TABLE_LOCK_WAITS.WAITING_QUERY_ROWS_EXAMINED
    override fun field12(): Field<ULong?> = SchemaTableLockWaits.SCHEMA_TABLE_LOCK_WAITS.BLOCKING_THREAD_ID
    override fun field13(): Field<ULong?> = SchemaTableLockWaits.SCHEMA_TABLE_LOCK_WAITS.BLOCKING_PID
    override fun field14(): Field<String?> = SchemaTableLockWaits.SCHEMA_TABLE_LOCK_WAITS.BLOCKING_ACCOUNT
    override fun field15(): Field<String?> = SchemaTableLockWaits.SCHEMA_TABLE_LOCK_WAITS.BLOCKING_LOCK_TYPE
    override fun field16(): Field<String?> = SchemaTableLockWaits.SCHEMA_TABLE_LOCK_WAITS.BLOCKING_LOCK_DURATION
    override fun field17(): Field<String?> = SchemaTableLockWaits.SCHEMA_TABLE_LOCK_WAITS.SQL_KILL_BLOCKING_QUERY
    override fun field18(): Field<String?> = SchemaTableLockWaits.SCHEMA_TABLE_LOCK_WAITS.SQL_KILL_BLOCKING_CONNECTION
    override fun component1(): String? = objectSchema
    override fun component2(): String? = objectName
    override fun component3(): ULong? = waitingThreadId
    override fun component4(): ULong? = waitingPid
    override fun component5(): String? = waitingAccount
    override fun component6(): String? = waitingLockType
    override fun component7(): String? = waitingLockDuration
    override fun component8(): String? = waitingQuery
    override fun component9(): Long? = waitingQuerySecs
    override fun component10(): ULong? = waitingQueryRowsAffected
    override fun component11(): ULong? = waitingQueryRowsExamined
    override fun component12(): ULong? = blockingThreadId
    override fun component13(): ULong? = blockingPid
    override fun component14(): String? = blockingAccount
    override fun component15(): String? = blockingLockType
    override fun component16(): String? = blockingLockDuration
    override fun component17(): String? = sqlKillBlockingQuery
    override fun component18(): String? = sqlKillBlockingConnection
    override fun value1(): String? = objectSchema
    override fun value2(): String? = objectName
    override fun value3(): ULong? = waitingThreadId
    override fun value4(): ULong? = waitingPid
    override fun value5(): String? = waitingAccount
    override fun value6(): String? = waitingLockType
    override fun value7(): String? = waitingLockDuration
    override fun value8(): String? = waitingQuery
    override fun value9(): Long? = waitingQuerySecs
    override fun value10(): ULong? = waitingQueryRowsAffected
    override fun value11(): ULong? = waitingQueryRowsExamined
    override fun value12(): ULong? = blockingThreadId
    override fun value13(): ULong? = blockingPid
    override fun value14(): String? = blockingAccount
    override fun value15(): String? = blockingLockType
    override fun value16(): String? = blockingLockDuration
    override fun value17(): String? = sqlKillBlockingQuery
    override fun value18(): String? = sqlKillBlockingConnection

    override fun value1(value: String?): SchemaTableLockWaitsRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): SchemaTableLockWaitsRecord {
        set(1, value)
        return this
    }

    override fun value3(value: ULong?): SchemaTableLockWaitsRecord {
        set(2, value)
        return this
    }

    override fun value4(value: ULong?): SchemaTableLockWaitsRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): SchemaTableLockWaitsRecord {
        set(4, value)
        return this
    }

    override fun value6(value: String?): SchemaTableLockWaitsRecord {
        set(5, value)
        return this
    }

    override fun value7(value: String?): SchemaTableLockWaitsRecord {
        set(6, value)
        return this
    }

    override fun value8(value: String?): SchemaTableLockWaitsRecord {
        set(7, value)
        return this
    }

    override fun value9(value: Long?): SchemaTableLockWaitsRecord {
        set(8, value)
        return this
    }

    override fun value10(value: ULong?): SchemaTableLockWaitsRecord {
        set(9, value)
        return this
    }

    override fun value11(value: ULong?): SchemaTableLockWaitsRecord {
        set(10, value)
        return this
    }

    override fun value12(value: ULong?): SchemaTableLockWaitsRecord {
        set(11, value)
        return this
    }

    override fun value13(value: ULong?): SchemaTableLockWaitsRecord {
        set(12, value)
        return this
    }

    override fun value14(value: String?): SchemaTableLockWaitsRecord {
        set(13, value)
        return this
    }

    override fun value15(value: String?): SchemaTableLockWaitsRecord {
        set(14, value)
        return this
    }

    override fun value16(value: String?): SchemaTableLockWaitsRecord {
        set(15, value)
        return this
    }

    override fun value17(value: String?): SchemaTableLockWaitsRecord {
        set(16, value)
        return this
    }

    override fun value18(value: String?): SchemaTableLockWaitsRecord {
        set(17, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: ULong?, value4: ULong?, value5: String?, value6: String?, value7: String?, value8: String?, value9: Long?, value10: ULong?, value11: ULong?, value12: ULong?, value13: ULong?, value14: String?, value15: String?, value16: String?, value17: String?, value18: String?): SchemaTableLockWaitsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        this.value14(value14)
        this.value15(value15)
        this.value16(value16)
        this.value17(value17)
        this.value18(value18)
        return this
    }

    /**
     * Create a detached, initialised SchemaTableLockWaitsRecord
     */
    constructor(objectSchema: String? = null, objectName: String? = null, waitingThreadId: ULong? = null, waitingPid: ULong? = null, waitingAccount: String? = null, waitingLockType: String? = null, waitingLockDuration: String? = null, waitingQuery: String? = null, waitingQuerySecs: Long? = null, waitingQueryRowsAffected: ULong? = null, waitingQueryRowsExamined: ULong? = null, blockingThreadId: ULong? = null, blockingPid: ULong? = null, blockingAccount: String? = null, blockingLockType: String? = null, blockingLockDuration: String? = null, sqlKillBlockingQuery: String? = null, sqlKillBlockingConnection: String? = null): this() {
        this.objectSchema = objectSchema
        this.objectName = objectName
        this.waitingThreadId = waitingThreadId
        this.waitingPid = waitingPid
        this.waitingAccount = waitingAccount
        this.waitingLockType = waitingLockType
        this.waitingLockDuration = waitingLockDuration
        this.waitingQuery = waitingQuery
        this.waitingQuerySecs = waitingQuerySecs
        this.waitingQueryRowsAffected = waitingQueryRowsAffected
        this.waitingQueryRowsExamined = waitingQueryRowsExamined
        this.blockingThreadId = blockingThreadId
        this.blockingPid = blockingPid
        this.blockingAccount = blockingAccount
        this.blockingLockType = blockingLockType
        this.blockingLockDuration = blockingLockDuration
        this.sqlKillBlockingQuery = sqlKillBlockingQuery
        this.sqlKillBlockingConnection = sqlKillBlockingConnection
        resetChangedOnNotNull()
    }
}
