/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.InnodbFtDeleted

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Row1
import org.jooq.impl.TableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class InnodbFtDeletedRecord() : TableRecordImpl<InnodbFtDeletedRecord>(InnodbFtDeleted.INNODB_FT_DELETED), Record1<ULong?> {

    open var docId: ULong?
        set(value): Unit = set(0, value)
        get(): ULong? = get(0) as ULong?

    // -------------------------------------------------------------------------
    // Record1 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row1<ULong?> = super.fieldsRow() as Row1<ULong?>
    override fun valuesRow(): Row1<ULong?> = super.valuesRow() as Row1<ULong?>
    override fun field1(): Field<ULong?> = InnodbFtDeleted.INNODB_FT_DELETED.DOC_ID
    override fun component1(): ULong? = docId
    override fun value1(): ULong? = docId

    override fun value1(value: ULong?): InnodbFtDeletedRecord {
        set(0, value)
        return this
    }

    override fun values(value1: ULong?): InnodbFtDeletedRecord {
        this.value1(value1)
        return this
    }

    /**
     * Create a detached, initialised InnodbFtDeletedRecord
     */
    constructor(docId: ULong? = null): this() {
        this.docId = docId
        resetChangedOnNotNull()
    }
}
