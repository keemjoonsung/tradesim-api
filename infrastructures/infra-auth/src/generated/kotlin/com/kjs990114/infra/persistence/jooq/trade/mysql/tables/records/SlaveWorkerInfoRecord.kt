/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.mysql.tables.records


import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.SlaveWorkerInfo

import org.jooq.Field
import org.jooq.Record13
import org.jooq.Record2
import org.jooq.Row13
import org.jooq.impl.UpdatableRecordImpl
import org.jooq.types.UInteger
import org.jooq.types.ULong


/**
 * Worker Information
 */
@Suppress("UNCHECKED_CAST")
open class SlaveWorkerInfoRecord() : UpdatableRecordImpl<SlaveWorkerInfoRecord>(SlaveWorkerInfo.SLAVE_WORKER_INFO), Record13<UInteger?, String?, ULong?, String?, ULong?, String?, ULong?, String?, ULong?, UInteger?, UInteger?, ByteArray?, String?> {

    open var id: UInteger?
        set(value): Unit = set(0, value)
        get(): UInteger? = get(0) as UInteger?

    open var relayLogName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var relayLogPos: ULong?
        set(value): Unit = set(2, value)
        get(): ULong? = get(2) as ULong?

    open var masterLogName: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var masterLogPos: ULong?
        set(value): Unit = set(4, value)
        get(): ULong? = get(4) as ULong?

    open var checkpointRelayLogName: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var checkpointRelayLogPos: ULong?
        set(value): Unit = set(6, value)
        get(): ULong? = get(6) as ULong?

    open var checkpointMasterLogName: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var checkpointMasterLogPos: ULong?
        set(value): Unit = set(8, value)
        get(): ULong? = get(8) as ULong?

    open var checkpointSeqno: UInteger?
        set(value): Unit = set(9, value)
        get(): UInteger? = get(9) as UInteger?

    open var checkpointGroupSize: UInteger?
        set(value): Unit = set(10, value)
        get(): UInteger? = get(10) as UInteger?

    open var checkpointGroupBitmap: ByteArray?
        set(value): Unit = set(11, value)
        get(): ByteArray? = get(11) as ByteArray?

    open var channelName: String?
        set(value): Unit = set(12, value)
        get(): String? = get(12) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record2<String?, UInteger?> = super.key() as Record2<String?, UInteger?>

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row13<UInteger?, String?, ULong?, String?, ULong?, String?, ULong?, String?, ULong?, UInteger?, UInteger?, ByteArray?, String?> = super.fieldsRow() as Row13<UInteger?, String?, ULong?, String?, ULong?, String?, ULong?, String?, ULong?, UInteger?, UInteger?, ByteArray?, String?>
    override fun valuesRow(): Row13<UInteger?, String?, ULong?, String?, ULong?, String?, ULong?, String?, ULong?, UInteger?, UInteger?, ByteArray?, String?> = super.valuesRow() as Row13<UInteger?, String?, ULong?, String?, ULong?, String?, ULong?, String?, ULong?, UInteger?, UInteger?, ByteArray?, String?>
    override fun field1(): Field<UInteger?> = SlaveWorkerInfo.SLAVE_WORKER_INFO.ID
    override fun field2(): Field<String?> = SlaveWorkerInfo.SLAVE_WORKER_INFO.RELAY_LOG_NAME
    override fun field3(): Field<ULong?> = SlaveWorkerInfo.SLAVE_WORKER_INFO.RELAY_LOG_POS
    override fun field4(): Field<String?> = SlaveWorkerInfo.SLAVE_WORKER_INFO.MASTER_LOG_NAME
    override fun field5(): Field<ULong?> = SlaveWorkerInfo.SLAVE_WORKER_INFO.MASTER_LOG_POS
    override fun field6(): Field<String?> = SlaveWorkerInfo.SLAVE_WORKER_INFO.CHECKPOINT_RELAY_LOG_NAME
    override fun field7(): Field<ULong?> = SlaveWorkerInfo.SLAVE_WORKER_INFO.CHECKPOINT_RELAY_LOG_POS
    override fun field8(): Field<String?> = SlaveWorkerInfo.SLAVE_WORKER_INFO.CHECKPOINT_MASTER_LOG_NAME
    override fun field9(): Field<ULong?> = SlaveWorkerInfo.SLAVE_WORKER_INFO.CHECKPOINT_MASTER_LOG_POS
    override fun field10(): Field<UInteger?> = SlaveWorkerInfo.SLAVE_WORKER_INFO.CHECKPOINT_SEQNO
    override fun field11(): Field<UInteger?> = SlaveWorkerInfo.SLAVE_WORKER_INFO.CHECKPOINT_GROUP_SIZE
    override fun field12(): Field<ByteArray?> = SlaveWorkerInfo.SLAVE_WORKER_INFO.CHECKPOINT_GROUP_BITMAP
    override fun field13(): Field<String?> = SlaveWorkerInfo.SLAVE_WORKER_INFO.CHANNEL_NAME
    override fun component1(): UInteger? = id
    override fun component2(): String? = relayLogName
    override fun component3(): ULong? = relayLogPos
    override fun component4(): String? = masterLogName
    override fun component5(): ULong? = masterLogPos
    override fun component6(): String? = checkpointRelayLogName
    override fun component7(): ULong? = checkpointRelayLogPos
    override fun component8(): String? = checkpointMasterLogName
    override fun component9(): ULong? = checkpointMasterLogPos
    override fun component10(): UInteger? = checkpointSeqno
    override fun component11(): UInteger? = checkpointGroupSize
    override fun component12(): ByteArray? = checkpointGroupBitmap
    override fun component13(): String? = channelName
    override fun value1(): UInteger? = id
    override fun value2(): String? = relayLogName
    override fun value3(): ULong? = relayLogPos
    override fun value4(): String? = masterLogName
    override fun value5(): ULong? = masterLogPos
    override fun value6(): String? = checkpointRelayLogName
    override fun value7(): ULong? = checkpointRelayLogPos
    override fun value8(): String? = checkpointMasterLogName
    override fun value9(): ULong? = checkpointMasterLogPos
    override fun value10(): UInteger? = checkpointSeqno
    override fun value11(): UInteger? = checkpointGroupSize
    override fun value12(): ByteArray? = checkpointGroupBitmap
    override fun value13(): String? = channelName

    override fun value1(value: UInteger?): SlaveWorkerInfoRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): SlaveWorkerInfoRecord {
        set(1, value)
        return this
    }

    override fun value3(value: ULong?): SlaveWorkerInfoRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): SlaveWorkerInfoRecord {
        set(3, value)
        return this
    }

    override fun value5(value: ULong?): SlaveWorkerInfoRecord {
        set(4, value)
        return this
    }

    override fun value6(value: String?): SlaveWorkerInfoRecord {
        set(5, value)
        return this
    }

    override fun value7(value: ULong?): SlaveWorkerInfoRecord {
        set(6, value)
        return this
    }

    override fun value8(value: String?): SlaveWorkerInfoRecord {
        set(7, value)
        return this
    }

    override fun value9(value: ULong?): SlaveWorkerInfoRecord {
        set(8, value)
        return this
    }

    override fun value10(value: UInteger?): SlaveWorkerInfoRecord {
        set(9, value)
        return this
    }

    override fun value11(value: UInteger?): SlaveWorkerInfoRecord {
        set(10, value)
        return this
    }

    override fun value12(value: ByteArray?): SlaveWorkerInfoRecord {
        set(11, value)
        return this
    }

    override fun value13(value: String?): SlaveWorkerInfoRecord {
        set(12, value)
        return this
    }

    override fun values(value1: UInteger?, value2: String?, value3: ULong?, value4: String?, value5: ULong?, value6: String?, value7: ULong?, value8: String?, value9: ULong?, value10: UInteger?, value11: UInteger?, value12: ByteArray?, value13: String?): SlaveWorkerInfoRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        return this
    }

    /**
     * Create a detached, initialised SlaveWorkerInfoRecord
     */
    constructor(id: UInteger? = null, relayLogName: String? = null, relayLogPos: ULong? = null, masterLogName: String? = null, masterLogPos: ULong? = null, checkpointRelayLogName: String? = null, checkpointRelayLogPos: ULong? = null, checkpointMasterLogName: String? = null, checkpointMasterLogPos: ULong? = null, checkpointSeqno: UInteger? = null, checkpointGroupSize: UInteger? = null, checkpointGroupBitmap: ByteArray? = null, channelName: String? = null): this() {
        this.id = id
        this.relayLogName = relayLogName
        this.relayLogPos = relayLogPos
        this.masterLogName = masterLogName
        this.masterLogPos = masterLogPos
        this.checkpointRelayLogName = checkpointRelayLogName
        this.checkpointRelayLogPos = checkpointRelayLogPos
        this.checkpointMasterLogName = checkpointMasterLogName
        this.checkpointMasterLogPos = checkpointMasterLogPos
        this.checkpointSeqno = checkpointSeqno
        this.checkpointGroupSize = checkpointGroupSize
        this.checkpointGroupBitmap = checkpointGroupBitmap
        this.channelName = channelName
        resetChangedOnNotNull()
    }
}
