/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.sys.tables.records


import com.kjs990114.infra.persistence.jooq.trade.sys.tables.StatementsWithRuntimesIn_95thPercentile

import java.math.BigInteger
import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record16
import org.jooq.Row16
import org.jooq.impl.TableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class StatementsWithRuntimesIn_95thPercentileRecord() : TableRecordImpl<StatementsWithRuntimesIn_95thPercentileRecord>(StatementsWithRuntimesIn_95thPercentile.STATEMENTS_WITH_RUNTIMES_IN_95TH_PERCENTILE), Record16<String?, String?, String?, ULong?, ULong?, ULong?, String?, String?, String?, ULong?, BigInteger?, ULong?, BigInteger?, LocalDateTime?, LocalDateTime?, String?> {

    open var query: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var db: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var fullScan: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var execCount: ULong?
        set(value): Unit = set(3, value)
        get(): ULong? = get(3) as ULong?

    open var errCount: ULong?
        set(value): Unit = set(4, value)
        get(): ULong? = get(4) as ULong?

    open var warnCount: ULong?
        set(value): Unit = set(5, value)
        get(): ULong? = get(5) as ULong?

    open var totalLatency: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var maxLatency: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var avgLatency: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var rowsSent: ULong?
        set(value): Unit = set(9, value)
        get(): ULong? = get(9) as ULong?

    open var rowsSentAvg: BigInteger?
        set(value): Unit = set(10, value)
        get(): BigInteger? = get(10) as BigInteger?

    open var rowsExamined: ULong?
        set(value): Unit = set(11, value)
        get(): ULong? = get(11) as ULong?

    open var rowsExaminedAvg: BigInteger?
        set(value): Unit = set(12, value)
        get(): BigInteger? = get(12) as BigInteger?

    open var firstSeen: LocalDateTime?
        set(value): Unit = set(13, value)
        get(): LocalDateTime? = get(13) as LocalDateTime?

    open var lastSeen: LocalDateTime?
        set(value): Unit = set(14, value)
        get(): LocalDateTime? = get(14) as LocalDateTime?

    open var digest: String?
        set(value): Unit = set(15, value)
        get(): String? = get(15) as String?

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row16<String?, String?, String?, ULong?, ULong?, ULong?, String?, String?, String?, ULong?, BigInteger?, ULong?, BigInteger?, LocalDateTime?, LocalDateTime?, String?> = super.fieldsRow() as Row16<String?, String?, String?, ULong?, ULong?, ULong?, String?, String?, String?, ULong?, BigInteger?, ULong?, BigInteger?, LocalDateTime?, LocalDateTime?, String?>
    override fun valuesRow(): Row16<String?, String?, String?, ULong?, ULong?, ULong?, String?, String?, String?, ULong?, BigInteger?, ULong?, BigInteger?, LocalDateTime?, LocalDateTime?, String?> = super.valuesRow() as Row16<String?, String?, String?, ULong?, ULong?, ULong?, String?, String?, String?, ULong?, BigInteger?, ULong?, BigInteger?, LocalDateTime?, LocalDateTime?, String?>
    override fun field1(): Field<String?> = StatementsWithRuntimesIn_95thPercentile.STATEMENTS_WITH_RUNTIMES_IN_95TH_PERCENTILE.QUERY
    override fun field2(): Field<String?> = StatementsWithRuntimesIn_95thPercentile.STATEMENTS_WITH_RUNTIMES_IN_95TH_PERCENTILE.DB
    override fun field3(): Field<String?> = StatementsWithRuntimesIn_95thPercentile.STATEMENTS_WITH_RUNTIMES_IN_95TH_PERCENTILE.FULL_SCAN
    override fun field4(): Field<ULong?> = StatementsWithRuntimesIn_95thPercentile.STATEMENTS_WITH_RUNTIMES_IN_95TH_PERCENTILE.EXEC_COUNT
    override fun field5(): Field<ULong?> = StatementsWithRuntimesIn_95thPercentile.STATEMENTS_WITH_RUNTIMES_IN_95TH_PERCENTILE.ERR_COUNT
    override fun field6(): Field<ULong?> = StatementsWithRuntimesIn_95thPercentile.STATEMENTS_WITH_RUNTIMES_IN_95TH_PERCENTILE.WARN_COUNT
    override fun field7(): Field<String?> = StatementsWithRuntimesIn_95thPercentile.STATEMENTS_WITH_RUNTIMES_IN_95TH_PERCENTILE.TOTAL_LATENCY
    override fun field8(): Field<String?> = StatementsWithRuntimesIn_95thPercentile.STATEMENTS_WITH_RUNTIMES_IN_95TH_PERCENTILE.MAX_LATENCY
    override fun field9(): Field<String?> = StatementsWithRuntimesIn_95thPercentile.STATEMENTS_WITH_RUNTIMES_IN_95TH_PERCENTILE.AVG_LATENCY
    override fun field10(): Field<ULong?> = StatementsWithRuntimesIn_95thPercentile.STATEMENTS_WITH_RUNTIMES_IN_95TH_PERCENTILE.ROWS_SENT
    override fun field11(): Field<BigInteger?> = StatementsWithRuntimesIn_95thPercentile.STATEMENTS_WITH_RUNTIMES_IN_95TH_PERCENTILE.ROWS_SENT_AVG
    override fun field12(): Field<ULong?> = StatementsWithRuntimesIn_95thPercentile.STATEMENTS_WITH_RUNTIMES_IN_95TH_PERCENTILE.ROWS_EXAMINED
    override fun field13(): Field<BigInteger?> = StatementsWithRuntimesIn_95thPercentile.STATEMENTS_WITH_RUNTIMES_IN_95TH_PERCENTILE.ROWS_EXAMINED_AVG
    override fun field14(): Field<LocalDateTime?> = StatementsWithRuntimesIn_95thPercentile.STATEMENTS_WITH_RUNTIMES_IN_95TH_PERCENTILE.FIRST_SEEN
    override fun field15(): Field<LocalDateTime?> = StatementsWithRuntimesIn_95thPercentile.STATEMENTS_WITH_RUNTIMES_IN_95TH_PERCENTILE.LAST_SEEN
    override fun field16(): Field<String?> = StatementsWithRuntimesIn_95thPercentile.STATEMENTS_WITH_RUNTIMES_IN_95TH_PERCENTILE.DIGEST
    override fun component1(): String? = query
    override fun component2(): String? = db
    override fun component3(): String? = fullScan
    override fun component4(): ULong? = execCount
    override fun component5(): ULong? = errCount
    override fun component6(): ULong? = warnCount
    override fun component7(): String? = totalLatency
    override fun component8(): String? = maxLatency
    override fun component9(): String? = avgLatency
    override fun component10(): ULong? = rowsSent
    override fun component11(): BigInteger? = rowsSentAvg
    override fun component12(): ULong? = rowsExamined
    override fun component13(): BigInteger? = rowsExaminedAvg
    override fun component14(): LocalDateTime? = firstSeen
    override fun component15(): LocalDateTime? = lastSeen
    override fun component16(): String? = digest
    override fun value1(): String? = query
    override fun value2(): String? = db
    override fun value3(): String? = fullScan
    override fun value4(): ULong? = execCount
    override fun value5(): ULong? = errCount
    override fun value6(): ULong? = warnCount
    override fun value7(): String? = totalLatency
    override fun value8(): String? = maxLatency
    override fun value9(): String? = avgLatency
    override fun value10(): ULong? = rowsSent
    override fun value11(): BigInteger? = rowsSentAvg
    override fun value12(): ULong? = rowsExamined
    override fun value13(): BigInteger? = rowsExaminedAvg
    override fun value14(): LocalDateTime? = firstSeen
    override fun value15(): LocalDateTime? = lastSeen
    override fun value16(): String? = digest

    override fun value1(value: String?): StatementsWithRuntimesIn_95thPercentileRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): StatementsWithRuntimesIn_95thPercentileRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): StatementsWithRuntimesIn_95thPercentileRecord {
        set(2, value)
        return this
    }

    override fun value4(value: ULong?): StatementsWithRuntimesIn_95thPercentileRecord {
        set(3, value)
        return this
    }

    override fun value5(value: ULong?): StatementsWithRuntimesIn_95thPercentileRecord {
        set(4, value)
        return this
    }

    override fun value6(value: ULong?): StatementsWithRuntimesIn_95thPercentileRecord {
        set(5, value)
        return this
    }

    override fun value7(value: String?): StatementsWithRuntimesIn_95thPercentileRecord {
        set(6, value)
        return this
    }

    override fun value8(value: String?): StatementsWithRuntimesIn_95thPercentileRecord {
        set(7, value)
        return this
    }

    override fun value9(value: String?): StatementsWithRuntimesIn_95thPercentileRecord {
        set(8, value)
        return this
    }

    override fun value10(value: ULong?): StatementsWithRuntimesIn_95thPercentileRecord {
        set(9, value)
        return this
    }

    override fun value11(value: BigInteger?): StatementsWithRuntimesIn_95thPercentileRecord {
        set(10, value)
        return this
    }

    override fun value12(value: ULong?): StatementsWithRuntimesIn_95thPercentileRecord {
        set(11, value)
        return this
    }

    override fun value13(value: BigInteger?): StatementsWithRuntimesIn_95thPercentileRecord {
        set(12, value)
        return this
    }

    override fun value14(value: LocalDateTime?): StatementsWithRuntimesIn_95thPercentileRecord {
        set(13, value)
        return this
    }

    override fun value15(value: LocalDateTime?): StatementsWithRuntimesIn_95thPercentileRecord {
        set(14, value)
        return this
    }

    override fun value16(value: String?): StatementsWithRuntimesIn_95thPercentileRecord {
        set(15, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: ULong?, value5: ULong?, value6: ULong?, value7: String?, value8: String?, value9: String?, value10: ULong?, value11: BigInteger?, value12: ULong?, value13: BigInteger?, value14: LocalDateTime?, value15: LocalDateTime?, value16: String?): StatementsWithRuntimesIn_95thPercentileRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        this.value14(value14)
        this.value15(value15)
        this.value16(value16)
        return this
    }

    /**
     * Create a detached, initialised
     * StatementsWithRuntimesIn_95thPercentileRecord
     */
    constructor(query: String? = null, db: String? = null, fullScan: String? = null, execCount: ULong? = null, errCount: ULong? = null, warnCount: ULong? = null, totalLatency: String? = null, maxLatency: String? = null, avgLatency: String? = null, rowsSent: ULong? = null, rowsSentAvg: BigInteger? = null, rowsExamined: ULong? = null, rowsExaminedAvg: BigInteger? = null, firstSeen: LocalDateTime? = null, lastSeen: LocalDateTime? = null, digest: String? = null): this() {
        this.query = query
        this.db = db
        this.fullScan = fullScan
        this.execCount = execCount
        this.errCount = errCount
        this.warnCount = warnCount
        this.totalLatency = totalLatency
        this.maxLatency = maxLatency
        this.avgLatency = avgLatency
        this.rowsSent = rowsSent
        this.rowsSentAvg = rowsSentAvg
        this.rowsExamined = rowsExamined
        this.rowsExaminedAvg = rowsExaminedAvg
        this.firstSeen = firstSeen
        this.lastSeen = lastSeen
        this.digest = digest
        resetChangedOnNotNull()
    }
}
