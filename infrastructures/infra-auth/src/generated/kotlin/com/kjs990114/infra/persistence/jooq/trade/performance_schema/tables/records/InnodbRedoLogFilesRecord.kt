/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.InnodbRedoLogFiles

import org.jooq.Field
import org.jooq.Record7
import org.jooq.Row7
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class InnodbRedoLogFilesRecord() : TableRecordImpl<InnodbRedoLogFilesRecord>(InnodbRedoLogFiles.INNODB_REDO_LOG_FILES), Record7<Long?, String?, Long?, Long?, Long?, Byte?, Int?> {

    open var fileId: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var fileName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var startLsn: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var endLsn: Long?
        set(value): Unit = set(3, value)
        get(): Long? = get(3) as Long?

    open var sizeInBytes: Long?
        set(value): Unit = set(4, value)
        get(): Long? = get(4) as Long?

    @Suppress("INAPPLICABLE_JVM_NAME")
    @set:JvmName("setIsFull")
    open var isFull: Byte?
        set(value): Unit = set(5, value)
        get(): Byte? = get(5) as Byte?

    open var consumerLevel: Int?
        set(value): Unit = set(6, value)
        get(): Int? = get(6) as Int?

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row7<Long?, String?, Long?, Long?, Long?, Byte?, Int?> = super.fieldsRow() as Row7<Long?, String?, Long?, Long?, Long?, Byte?, Int?>
    override fun valuesRow(): Row7<Long?, String?, Long?, Long?, Long?, Byte?, Int?> = super.valuesRow() as Row7<Long?, String?, Long?, Long?, Long?, Byte?, Int?>
    override fun field1(): Field<Long?> = InnodbRedoLogFiles.INNODB_REDO_LOG_FILES.FILE_ID
    override fun field2(): Field<String?> = InnodbRedoLogFiles.INNODB_REDO_LOG_FILES.FILE_NAME
    override fun field3(): Field<Long?> = InnodbRedoLogFiles.INNODB_REDO_LOG_FILES.START_LSN
    override fun field4(): Field<Long?> = InnodbRedoLogFiles.INNODB_REDO_LOG_FILES.END_LSN
    override fun field5(): Field<Long?> = InnodbRedoLogFiles.INNODB_REDO_LOG_FILES.SIZE_IN_BYTES
    override fun field6(): Field<Byte?> = InnodbRedoLogFiles.INNODB_REDO_LOG_FILES.IS_FULL
    override fun field7(): Field<Int?> = InnodbRedoLogFiles.INNODB_REDO_LOG_FILES.CONSUMER_LEVEL
    override fun component1(): Long? = fileId
    override fun component2(): String? = fileName
    override fun component3(): Long? = startLsn
    override fun component4(): Long? = endLsn
    override fun component5(): Long? = sizeInBytes
    override fun component6(): Byte? = isFull
    override fun component7(): Int? = consumerLevel
    override fun value1(): Long? = fileId
    override fun value2(): String? = fileName
    override fun value3(): Long? = startLsn
    override fun value4(): Long? = endLsn
    override fun value5(): Long? = sizeInBytes
    override fun value6(): Byte? = isFull
    override fun value7(): Int? = consumerLevel

    override fun value1(value: Long?): InnodbRedoLogFilesRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): InnodbRedoLogFilesRecord {
        set(1, value)
        return this
    }

    override fun value3(value: Long?): InnodbRedoLogFilesRecord {
        set(2, value)
        return this
    }

    override fun value4(value: Long?): InnodbRedoLogFilesRecord {
        set(3, value)
        return this
    }

    override fun value5(value: Long?): InnodbRedoLogFilesRecord {
        set(4, value)
        return this
    }

    override fun value6(value: Byte?): InnodbRedoLogFilesRecord {
        set(5, value)
        return this
    }

    override fun value7(value: Int?): InnodbRedoLogFilesRecord {
        set(6, value)
        return this
    }

    override fun values(value1: Long?, value2: String?, value3: Long?, value4: Long?, value5: Long?, value6: Byte?, value7: Int?): InnodbRedoLogFilesRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        return this
    }

    /**
     * Create a detached, initialised InnodbRedoLogFilesRecord
     */
    constructor(fileId: Long? = null, fileName: String? = null, startLsn: Long? = null, endLsn: Long? = null, sizeInBytes: Long? = null, isFull: Byte? = null, consumerLevel: Int? = null): this() {
        this.fileId = fileId
        this.fileName = fileName
        this.startLsn = startLsn
        this.endLsn = endLsn
        this.sizeInBytes = sizeInBytes
        this.isFull = isFull
        this.consumerLevel = consumerLevel
        resetChangedOnNotNull()
    }
}
