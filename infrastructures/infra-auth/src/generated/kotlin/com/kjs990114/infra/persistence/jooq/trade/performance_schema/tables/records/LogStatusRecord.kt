/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.LogStatus

import org.jooq.Field
import org.jooq.JSON
import org.jooq.Record4
import org.jooq.Row4
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class LogStatusRecord() : TableRecordImpl<LogStatusRecord>(LogStatus.LOG_STATUS), Record4<String?, JSON?, JSON?, JSON?> {

    open var serverUuid: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var local: JSON?
        set(value): Unit = set(1, value)
        get(): JSON? = get(1) as JSON?

    open var replication: JSON?
        set(value): Unit = set(2, value)
        get(): JSON? = get(2) as JSON?

    open var storageEngines: JSON?
        set(value): Unit = set(3, value)
        get(): JSON? = get(3) as JSON?

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row4<String?, JSON?, JSON?, JSON?> = super.fieldsRow() as Row4<String?, JSON?, JSON?, JSON?>
    override fun valuesRow(): Row4<String?, JSON?, JSON?, JSON?> = super.valuesRow() as Row4<String?, JSON?, JSON?, JSON?>
    override fun field1(): Field<String?> = LogStatus.LOG_STATUS.SERVER_UUID
    override fun field2(): Field<JSON?> = LogStatus.LOG_STATUS.LOCAL
    override fun field3(): Field<JSON?> = LogStatus.LOG_STATUS.REPLICATION
    override fun field4(): Field<JSON?> = LogStatus.LOG_STATUS.STORAGE_ENGINES
    override fun component1(): String? = serverUuid
    override fun component2(): JSON? = local
    override fun component3(): JSON? = replication
    override fun component4(): JSON? = storageEngines
    override fun value1(): String? = serverUuid
    override fun value2(): JSON? = local
    override fun value3(): JSON? = replication
    override fun value4(): JSON? = storageEngines

    override fun value1(value: String?): LogStatusRecord {
        set(0, value)
        return this
    }

    override fun value2(value: JSON?): LogStatusRecord {
        set(1, value)
        return this
    }

    override fun value3(value: JSON?): LogStatusRecord {
        set(2, value)
        return this
    }

    override fun value4(value: JSON?): LogStatusRecord {
        set(3, value)
        return this
    }

    override fun values(value1: String?, value2: JSON?, value3: JSON?, value4: JSON?): LogStatusRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        return this
    }

    /**
     * Create a detached, initialised LogStatusRecord
     */
    constructor(serverUuid: String? = null, local: JSON? = null, replication: JSON? = null, storageEngines: JSON? = null): this() {
        this.serverUuid = serverUuid
        this.local = local
        this.replication = replication
        this.storageEngines = storageEngines
        resetChangedOnNotNull()
    }
}
