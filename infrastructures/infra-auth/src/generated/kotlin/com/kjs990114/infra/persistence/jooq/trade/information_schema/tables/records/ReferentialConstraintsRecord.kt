/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.information_schema.enums.ReferentialConstraintsDeleteRule
import com.kjs990114.infra.persistence.jooq.trade.information_schema.enums.ReferentialConstraintsMatchOption
import com.kjs990114.infra.persistence.jooq.trade.information_schema.enums.ReferentialConstraintsUpdateRule
import com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.ReferentialConstraints

import org.jooq.Field
import org.jooq.Record11
import org.jooq.Row11
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ReferentialConstraintsRecord() : TableRecordImpl<ReferentialConstraintsRecord>(ReferentialConstraints.REFERENTIAL_CONSTRAINTS), Record11<String?, String?, String?, String?, String?, String?, ReferentialConstraintsMatchOption?, ReferentialConstraintsUpdateRule?, ReferentialConstraintsDeleteRule?, String?, String?> {

    open var constraintCatalog: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var constraintSchema: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var constraintName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var uniqueConstraintCatalog: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var uniqueConstraintSchema: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var uniqueConstraintName: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var matchOption: ReferentialConstraintsMatchOption?
        set(value): Unit = set(6, value)
        get(): ReferentialConstraintsMatchOption? = get(6) as ReferentialConstraintsMatchOption?

    open var updateRule: ReferentialConstraintsUpdateRule?
        set(value): Unit = set(7, value)
        get(): ReferentialConstraintsUpdateRule? = get(7) as ReferentialConstraintsUpdateRule?

    open var deleteRule: ReferentialConstraintsDeleteRule?
        set(value): Unit = set(8, value)
        get(): ReferentialConstraintsDeleteRule? = get(8) as ReferentialConstraintsDeleteRule?

    open var tableName: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var referencedTableName: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row11<String?, String?, String?, String?, String?, String?, ReferentialConstraintsMatchOption?, ReferentialConstraintsUpdateRule?, ReferentialConstraintsDeleteRule?, String?, String?> = super.fieldsRow() as Row11<String?, String?, String?, String?, String?, String?, ReferentialConstraintsMatchOption?, ReferentialConstraintsUpdateRule?, ReferentialConstraintsDeleteRule?, String?, String?>
    override fun valuesRow(): Row11<String?, String?, String?, String?, String?, String?, ReferentialConstraintsMatchOption?, ReferentialConstraintsUpdateRule?, ReferentialConstraintsDeleteRule?, String?, String?> = super.valuesRow() as Row11<String?, String?, String?, String?, String?, String?, ReferentialConstraintsMatchOption?, ReferentialConstraintsUpdateRule?, ReferentialConstraintsDeleteRule?, String?, String?>
    override fun field1(): Field<String?> = ReferentialConstraints.REFERENTIAL_CONSTRAINTS.CONSTRAINT_CATALOG
    override fun field2(): Field<String?> = ReferentialConstraints.REFERENTIAL_CONSTRAINTS.CONSTRAINT_SCHEMA
    override fun field3(): Field<String?> = ReferentialConstraints.REFERENTIAL_CONSTRAINTS.CONSTRAINT_NAME
    override fun field4(): Field<String?> = ReferentialConstraints.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_CATALOG
    override fun field5(): Field<String?> = ReferentialConstraints.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_SCHEMA
    override fun field6(): Field<String?> = ReferentialConstraints.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_NAME
    override fun field7(): Field<ReferentialConstraintsMatchOption?> = ReferentialConstraints.REFERENTIAL_CONSTRAINTS.MATCH_OPTION
    override fun field8(): Field<ReferentialConstraintsUpdateRule?> = ReferentialConstraints.REFERENTIAL_CONSTRAINTS.UPDATE_RULE
    override fun field9(): Field<ReferentialConstraintsDeleteRule?> = ReferentialConstraints.REFERENTIAL_CONSTRAINTS.DELETE_RULE
    override fun field10(): Field<String?> = ReferentialConstraints.REFERENTIAL_CONSTRAINTS.TABLE_NAME
    override fun field11(): Field<String?> = ReferentialConstraints.REFERENTIAL_CONSTRAINTS.REFERENCED_TABLE_NAME
    override fun component1(): String? = constraintCatalog
    override fun component2(): String? = constraintSchema
    override fun component3(): String? = constraintName
    override fun component4(): String? = uniqueConstraintCatalog
    override fun component5(): String? = uniqueConstraintSchema
    override fun component6(): String? = uniqueConstraintName
    override fun component7(): ReferentialConstraintsMatchOption? = matchOption
    override fun component8(): ReferentialConstraintsUpdateRule? = updateRule
    override fun component9(): ReferentialConstraintsDeleteRule? = deleteRule
    override fun component10(): String? = tableName
    override fun component11(): String? = referencedTableName
    override fun value1(): String? = constraintCatalog
    override fun value2(): String? = constraintSchema
    override fun value3(): String? = constraintName
    override fun value4(): String? = uniqueConstraintCatalog
    override fun value5(): String? = uniqueConstraintSchema
    override fun value6(): String? = uniqueConstraintName
    override fun value7(): ReferentialConstraintsMatchOption? = matchOption
    override fun value8(): ReferentialConstraintsUpdateRule? = updateRule
    override fun value9(): ReferentialConstraintsDeleteRule? = deleteRule
    override fun value10(): String? = tableName
    override fun value11(): String? = referencedTableName

    override fun value1(value: String?): ReferentialConstraintsRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): ReferentialConstraintsRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): ReferentialConstraintsRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): ReferentialConstraintsRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): ReferentialConstraintsRecord {
        set(4, value)
        return this
    }

    override fun value6(value: String?): ReferentialConstraintsRecord {
        set(5, value)
        return this
    }

    override fun value7(value: ReferentialConstraintsMatchOption?): ReferentialConstraintsRecord {
        set(6, value)
        return this
    }

    override fun value8(value: ReferentialConstraintsUpdateRule?): ReferentialConstraintsRecord {
        set(7, value)
        return this
    }

    override fun value9(value: ReferentialConstraintsDeleteRule?): ReferentialConstraintsRecord {
        set(8, value)
        return this
    }

    override fun value10(value: String?): ReferentialConstraintsRecord {
        set(9, value)
        return this
    }

    override fun value11(value: String?): ReferentialConstraintsRecord {
        set(10, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: String?, value5: String?, value6: String?, value7: ReferentialConstraintsMatchOption?, value8: ReferentialConstraintsUpdateRule?, value9: ReferentialConstraintsDeleteRule?, value10: String?, value11: String?): ReferentialConstraintsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        return this
    }

    /**
     * Create a detached, initialised ReferentialConstraintsRecord
     */
    constructor(constraintCatalog: String? = null, constraintSchema: String? = null, constraintName: String? = null, uniqueConstraintCatalog: String? = null, uniqueConstraintSchema: String? = null, uniqueConstraintName: String? = null, matchOption: ReferentialConstraintsMatchOption? = null, updateRule: ReferentialConstraintsUpdateRule? = null, deleteRule: ReferentialConstraintsDeleteRule? = null, tableName: String? = null, referencedTableName: String? = null): this() {
        this.constraintCatalog = constraintCatalog
        this.constraintSchema = constraintSchema
        this.constraintName = constraintName
        this.uniqueConstraintCatalog = uniqueConstraintCatalog
        this.uniqueConstraintSchema = uniqueConstraintSchema
        this.uniqueConstraintName = uniqueConstraintName
        this.matchOption = matchOption
        this.updateRule = updateRule
        this.deleteRule = deleteRule
        this.tableName = tableName
        this.referencedTableName = referencedTableName
        resetChangedOnNotNull()
    }
}
