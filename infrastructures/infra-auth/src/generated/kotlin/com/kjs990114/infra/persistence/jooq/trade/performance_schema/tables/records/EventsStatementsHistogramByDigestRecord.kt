/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStatementsHistogramByDigest

import org.jooq.Field
import org.jooq.Record8
import org.jooq.Row8
import org.jooq.impl.TableRecordImpl
import org.jooq.types.UInteger
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class EventsStatementsHistogramByDigestRecord() : TableRecordImpl<EventsStatementsHistogramByDigestRecord>(EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST), Record8<String?, String?, UInteger?, ULong?, ULong?, ULong?, ULong?, Double?> {

    open var schemaName: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var digest: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var bucketNumber: UInteger?
        set(value): Unit = set(2, value)
        get(): UInteger? = get(2) as UInteger?

    open var bucketTimerLow: ULong?
        set(value): Unit = set(3, value)
        get(): ULong? = get(3) as ULong?

    open var bucketTimerHigh: ULong?
        set(value): Unit = set(4, value)
        get(): ULong? = get(4) as ULong?

    open var countBucket: ULong?
        set(value): Unit = set(5, value)
        get(): ULong? = get(5) as ULong?

    open var countBucketAndLower: ULong?
        set(value): Unit = set(6, value)
        get(): ULong? = get(6) as ULong?

    open var bucketQuantile: Double?
        set(value): Unit = set(7, value)
        get(): Double? = get(7) as Double?

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row8<String?, String?, UInteger?, ULong?, ULong?, ULong?, ULong?, Double?> = super.fieldsRow() as Row8<String?, String?, UInteger?, ULong?, ULong?, ULong?, ULong?, Double?>
    override fun valuesRow(): Row8<String?, String?, UInteger?, ULong?, ULong?, ULong?, ULong?, Double?> = super.valuesRow() as Row8<String?, String?, UInteger?, ULong?, ULong?, ULong?, ULong?, Double?>
    override fun field1(): Field<String?> = EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST.SCHEMA_NAME
    override fun field2(): Field<String?> = EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST.DIGEST
    override fun field3(): Field<UInteger?> = EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST.BUCKET_NUMBER
    override fun field4(): Field<ULong?> = EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST.BUCKET_TIMER_LOW
    override fun field5(): Field<ULong?> = EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST.BUCKET_TIMER_HIGH
    override fun field6(): Field<ULong?> = EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST.COUNT_BUCKET
    override fun field7(): Field<ULong?> = EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST.COUNT_BUCKET_AND_LOWER
    override fun field8(): Field<Double?> = EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST.BUCKET_QUANTILE
    override fun component1(): String? = schemaName
    override fun component2(): String? = digest
    override fun component3(): UInteger? = bucketNumber
    override fun component4(): ULong? = bucketTimerLow
    override fun component5(): ULong? = bucketTimerHigh
    override fun component6(): ULong? = countBucket
    override fun component7(): ULong? = countBucketAndLower
    override fun component8(): Double? = bucketQuantile
    override fun value1(): String? = schemaName
    override fun value2(): String? = digest
    override fun value3(): UInteger? = bucketNumber
    override fun value4(): ULong? = bucketTimerLow
    override fun value5(): ULong? = bucketTimerHigh
    override fun value6(): ULong? = countBucket
    override fun value7(): ULong? = countBucketAndLower
    override fun value8(): Double? = bucketQuantile

    override fun value1(value: String?): EventsStatementsHistogramByDigestRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): EventsStatementsHistogramByDigestRecord {
        set(1, value)
        return this
    }

    override fun value3(value: UInteger?): EventsStatementsHistogramByDigestRecord {
        set(2, value)
        return this
    }

    override fun value4(value: ULong?): EventsStatementsHistogramByDigestRecord {
        set(3, value)
        return this
    }

    override fun value5(value: ULong?): EventsStatementsHistogramByDigestRecord {
        set(4, value)
        return this
    }

    override fun value6(value: ULong?): EventsStatementsHistogramByDigestRecord {
        set(5, value)
        return this
    }

    override fun value7(value: ULong?): EventsStatementsHistogramByDigestRecord {
        set(6, value)
        return this
    }

    override fun value8(value: Double?): EventsStatementsHistogramByDigestRecord {
        set(7, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: UInteger?, value4: ULong?, value5: ULong?, value6: ULong?, value7: ULong?, value8: Double?): EventsStatementsHistogramByDigestRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        return this
    }

    /**
     * Create a detached, initialised EventsStatementsHistogramByDigestRecord
     */
    constructor(schemaName: String? = null, digest: String? = null, bucketNumber: UInteger? = null, bucketTimerLow: ULong? = null, bucketTimerHigh: ULong? = null, countBucket: ULong? = null, countBucketAndLower: ULong? = null, bucketQuantile: Double? = null): this() {
        this.schemaName = schemaName
        this.digest = digest
        this.bucketNumber = bucketNumber
        this.bucketTimerLow = bucketTimerLow
        this.bucketTimerHigh = bucketTimerHigh
        this.countBucket = countBucket
        this.countBucketAndLower = countBucketAndLower
        this.bucketQuantile = bucketQuantile
        resetChangedOnNotNull()
    }
}
