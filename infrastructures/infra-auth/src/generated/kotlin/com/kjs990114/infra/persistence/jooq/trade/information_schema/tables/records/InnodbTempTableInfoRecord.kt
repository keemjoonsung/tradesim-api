/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.InnodbTempTableInfo

import org.jooq.Field
import org.jooq.Record4
import org.jooq.Row4
import org.jooq.impl.TableRecordImpl
import org.jooq.types.UInteger
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class InnodbTempTableInfoRecord() : TableRecordImpl<InnodbTempTableInfoRecord>(InnodbTempTableInfo.INNODB_TEMP_TABLE_INFO), Record4<ULong?, String?, UInteger?, UInteger?> {

    open var tableId: ULong?
        set(value): Unit = set(0, value)
        get(): ULong? = get(0) as ULong?

    open var name: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var nCols: UInteger?
        set(value): Unit = set(2, value)
        get(): UInteger? = get(2) as UInteger?

    open var space: UInteger?
        set(value): Unit = set(3, value)
        get(): UInteger? = get(3) as UInteger?

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row4<ULong?, String?, UInteger?, UInteger?> = super.fieldsRow() as Row4<ULong?, String?, UInteger?, UInteger?>
    override fun valuesRow(): Row4<ULong?, String?, UInteger?, UInteger?> = super.valuesRow() as Row4<ULong?, String?, UInteger?, UInteger?>
    override fun field1(): Field<ULong?> = InnodbTempTableInfo.INNODB_TEMP_TABLE_INFO.TABLE_ID
    override fun field2(): Field<String?> = InnodbTempTableInfo.INNODB_TEMP_TABLE_INFO.NAME
    override fun field3(): Field<UInteger?> = InnodbTempTableInfo.INNODB_TEMP_TABLE_INFO.N_COLS
    override fun field4(): Field<UInteger?> = InnodbTempTableInfo.INNODB_TEMP_TABLE_INFO.SPACE
    override fun component1(): ULong? = tableId
    override fun component2(): String? = name
    override fun component3(): UInteger? = nCols
    override fun component4(): UInteger? = space
    override fun value1(): ULong? = tableId
    override fun value2(): String? = name
    override fun value3(): UInteger? = nCols
    override fun value4(): UInteger? = space

    override fun value1(value: ULong?): InnodbTempTableInfoRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): InnodbTempTableInfoRecord {
        set(1, value)
        return this
    }

    override fun value3(value: UInteger?): InnodbTempTableInfoRecord {
        set(2, value)
        return this
    }

    override fun value4(value: UInteger?): InnodbTempTableInfoRecord {
        set(3, value)
        return this
    }

    override fun values(value1: ULong?, value2: String?, value3: UInteger?, value4: UInteger?): InnodbTempTableInfoRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        return this
    }

    /**
     * Create a detached, initialised InnodbTempTableInfoRecord
     */
    constructor(tableId: ULong? = null, name: String? = null, nCols: UInteger? = null, space: UInteger? = null): this() {
        this.tableId = tableId
        this.name = name
        this.nCols = nCols
        this.space = space
        resetChangedOnNotNull()
    }
}
