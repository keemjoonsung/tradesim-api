/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.performance_schema.enums.BinaryLogTransactionCompressionStatsLogType
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.BinaryLogTransactionCompressionStats

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record14
import org.jooq.Row14
import org.jooq.impl.TableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class BinaryLogTransactionCompressionStatsRecord() : TableRecordImpl<BinaryLogTransactionCompressionStatsRecord>(BinaryLogTransactionCompressionStats.BINARY_LOG_TRANSACTION_COMPRESSION_STATS), Record14<BinaryLogTransactionCompressionStatsLogType?, String?, ULong?, ULong?, ULong?, Short?, String?, ULong?, ULong?, LocalDateTime?, String?, ULong?, ULong?, LocalDateTime?> {

    open var logType: BinaryLogTransactionCompressionStatsLogType?
        set(value): Unit = set(0, value)
        get(): BinaryLogTransactionCompressionStatsLogType? = get(0) as BinaryLogTransactionCompressionStatsLogType?

    open var compressionType: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var transactionCounter: ULong?
        set(value): Unit = set(2, value)
        get(): ULong? = get(2) as ULong?

    open var compressedBytesCounter: ULong?
        set(value): Unit = set(3, value)
        get(): ULong? = get(3) as ULong?

    open var uncompressedBytesCounter: ULong?
        set(value): Unit = set(4, value)
        get(): ULong? = get(4) as ULong?

    open var compressionPercentage: Short?
        set(value): Unit = set(5, value)
        get(): Short? = get(5) as Short?

    open var firstTransactionId: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var firstTransactionCompressedBytes: ULong?
        set(value): Unit = set(7, value)
        get(): ULong? = get(7) as ULong?

    open var firstTransactionUncompressedBytes: ULong?
        set(value): Unit = set(8, value)
        get(): ULong? = get(8) as ULong?

    open var firstTransactionTimestamp: LocalDateTime?
        set(value): Unit = set(9, value)
        get(): LocalDateTime? = get(9) as LocalDateTime?

    open var lastTransactionId: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var lastTransactionCompressedBytes: ULong?
        set(value): Unit = set(11, value)
        get(): ULong? = get(11) as ULong?

    open var lastTransactionUncompressedBytes: ULong?
        set(value): Unit = set(12, value)
        get(): ULong? = get(12) as ULong?

    open var lastTransactionTimestamp: LocalDateTime?
        set(value): Unit = set(13, value)
        get(): LocalDateTime? = get(13) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row14<BinaryLogTransactionCompressionStatsLogType?, String?, ULong?, ULong?, ULong?, Short?, String?, ULong?, ULong?, LocalDateTime?, String?, ULong?, ULong?, LocalDateTime?> = super.fieldsRow() as Row14<BinaryLogTransactionCompressionStatsLogType?, String?, ULong?, ULong?, ULong?, Short?, String?, ULong?, ULong?, LocalDateTime?, String?, ULong?, ULong?, LocalDateTime?>
    override fun valuesRow(): Row14<BinaryLogTransactionCompressionStatsLogType?, String?, ULong?, ULong?, ULong?, Short?, String?, ULong?, ULong?, LocalDateTime?, String?, ULong?, ULong?, LocalDateTime?> = super.valuesRow() as Row14<BinaryLogTransactionCompressionStatsLogType?, String?, ULong?, ULong?, ULong?, Short?, String?, ULong?, ULong?, LocalDateTime?, String?, ULong?, ULong?, LocalDateTime?>
    override fun field1(): Field<BinaryLogTransactionCompressionStatsLogType?> = BinaryLogTransactionCompressionStats.BINARY_LOG_TRANSACTION_COMPRESSION_STATS.LOG_TYPE
    override fun field2(): Field<String?> = BinaryLogTransactionCompressionStats.BINARY_LOG_TRANSACTION_COMPRESSION_STATS.COMPRESSION_TYPE
    override fun field3(): Field<ULong?> = BinaryLogTransactionCompressionStats.BINARY_LOG_TRANSACTION_COMPRESSION_STATS.TRANSACTION_COUNTER
    override fun field4(): Field<ULong?> = BinaryLogTransactionCompressionStats.BINARY_LOG_TRANSACTION_COMPRESSION_STATS.COMPRESSED_BYTES_COUNTER
    override fun field5(): Field<ULong?> = BinaryLogTransactionCompressionStats.BINARY_LOG_TRANSACTION_COMPRESSION_STATS.UNCOMPRESSED_BYTES_COUNTER
    override fun field6(): Field<Short?> = BinaryLogTransactionCompressionStats.BINARY_LOG_TRANSACTION_COMPRESSION_STATS.COMPRESSION_PERCENTAGE
    override fun field7(): Field<String?> = BinaryLogTransactionCompressionStats.BINARY_LOG_TRANSACTION_COMPRESSION_STATS.FIRST_TRANSACTION_ID
    override fun field8(): Field<ULong?> = BinaryLogTransactionCompressionStats.BINARY_LOG_TRANSACTION_COMPRESSION_STATS.FIRST_TRANSACTION_COMPRESSED_BYTES
    override fun field9(): Field<ULong?> = BinaryLogTransactionCompressionStats.BINARY_LOG_TRANSACTION_COMPRESSION_STATS.FIRST_TRANSACTION_UNCOMPRESSED_BYTES
    override fun field10(): Field<LocalDateTime?> = BinaryLogTransactionCompressionStats.BINARY_LOG_TRANSACTION_COMPRESSION_STATS.FIRST_TRANSACTION_TIMESTAMP
    override fun field11(): Field<String?> = BinaryLogTransactionCompressionStats.BINARY_LOG_TRANSACTION_COMPRESSION_STATS.LAST_TRANSACTION_ID
    override fun field12(): Field<ULong?> = BinaryLogTransactionCompressionStats.BINARY_LOG_TRANSACTION_COMPRESSION_STATS.LAST_TRANSACTION_COMPRESSED_BYTES
    override fun field13(): Field<ULong?> = BinaryLogTransactionCompressionStats.BINARY_LOG_TRANSACTION_COMPRESSION_STATS.LAST_TRANSACTION_UNCOMPRESSED_BYTES
    override fun field14(): Field<LocalDateTime?> = BinaryLogTransactionCompressionStats.BINARY_LOG_TRANSACTION_COMPRESSION_STATS.LAST_TRANSACTION_TIMESTAMP
    override fun component1(): BinaryLogTransactionCompressionStatsLogType? = logType
    override fun component2(): String? = compressionType
    override fun component3(): ULong? = transactionCounter
    override fun component4(): ULong? = compressedBytesCounter
    override fun component5(): ULong? = uncompressedBytesCounter
    override fun component6(): Short? = compressionPercentage
    override fun component7(): String? = firstTransactionId
    override fun component8(): ULong? = firstTransactionCompressedBytes
    override fun component9(): ULong? = firstTransactionUncompressedBytes
    override fun component10(): LocalDateTime? = firstTransactionTimestamp
    override fun component11(): String? = lastTransactionId
    override fun component12(): ULong? = lastTransactionCompressedBytes
    override fun component13(): ULong? = lastTransactionUncompressedBytes
    override fun component14(): LocalDateTime? = lastTransactionTimestamp
    override fun value1(): BinaryLogTransactionCompressionStatsLogType? = logType
    override fun value2(): String? = compressionType
    override fun value3(): ULong? = transactionCounter
    override fun value4(): ULong? = compressedBytesCounter
    override fun value5(): ULong? = uncompressedBytesCounter
    override fun value6(): Short? = compressionPercentage
    override fun value7(): String? = firstTransactionId
    override fun value8(): ULong? = firstTransactionCompressedBytes
    override fun value9(): ULong? = firstTransactionUncompressedBytes
    override fun value10(): LocalDateTime? = firstTransactionTimestamp
    override fun value11(): String? = lastTransactionId
    override fun value12(): ULong? = lastTransactionCompressedBytes
    override fun value13(): ULong? = lastTransactionUncompressedBytes
    override fun value14(): LocalDateTime? = lastTransactionTimestamp

    override fun value1(value: BinaryLogTransactionCompressionStatsLogType?): BinaryLogTransactionCompressionStatsRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): BinaryLogTransactionCompressionStatsRecord {
        set(1, value)
        return this
    }

    override fun value3(value: ULong?): BinaryLogTransactionCompressionStatsRecord {
        set(2, value)
        return this
    }

    override fun value4(value: ULong?): BinaryLogTransactionCompressionStatsRecord {
        set(3, value)
        return this
    }

    override fun value5(value: ULong?): BinaryLogTransactionCompressionStatsRecord {
        set(4, value)
        return this
    }

    override fun value6(value: Short?): BinaryLogTransactionCompressionStatsRecord {
        set(5, value)
        return this
    }

    override fun value7(value: String?): BinaryLogTransactionCompressionStatsRecord {
        set(6, value)
        return this
    }

    override fun value8(value: ULong?): BinaryLogTransactionCompressionStatsRecord {
        set(7, value)
        return this
    }

    override fun value9(value: ULong?): BinaryLogTransactionCompressionStatsRecord {
        set(8, value)
        return this
    }

    override fun value10(value: LocalDateTime?): BinaryLogTransactionCompressionStatsRecord {
        set(9, value)
        return this
    }

    override fun value11(value: String?): BinaryLogTransactionCompressionStatsRecord {
        set(10, value)
        return this
    }

    override fun value12(value: ULong?): BinaryLogTransactionCompressionStatsRecord {
        set(11, value)
        return this
    }

    override fun value13(value: ULong?): BinaryLogTransactionCompressionStatsRecord {
        set(12, value)
        return this
    }

    override fun value14(value: LocalDateTime?): BinaryLogTransactionCompressionStatsRecord {
        set(13, value)
        return this
    }

    override fun values(value1: BinaryLogTransactionCompressionStatsLogType?, value2: String?, value3: ULong?, value4: ULong?, value5: ULong?, value6: Short?, value7: String?, value8: ULong?, value9: ULong?, value10: LocalDateTime?, value11: String?, value12: ULong?, value13: ULong?, value14: LocalDateTime?): BinaryLogTransactionCompressionStatsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        this.value14(value14)
        return this
    }

    /**
     * Create a detached, initialised BinaryLogTransactionCompressionStatsRecord
     */
    constructor(logType: BinaryLogTransactionCompressionStatsLogType? = null, compressionType: String? = null, transactionCounter: ULong? = null, compressedBytesCounter: ULong? = null, uncompressedBytesCounter: ULong? = null, compressionPercentage: Short? = null, firstTransactionId: String? = null, firstTransactionCompressedBytes: ULong? = null, firstTransactionUncompressedBytes: ULong? = null, firstTransactionTimestamp: LocalDateTime? = null, lastTransactionId: String? = null, lastTransactionCompressedBytes: ULong? = null, lastTransactionUncompressedBytes: ULong? = null, lastTransactionTimestamp: LocalDateTime? = null): this() {
        this.logType = logType
        this.compressionType = compressionType
        this.transactionCounter = transactionCounter
        this.compressedBytesCounter = compressedBytesCounter
        this.uncompressedBytesCounter = uncompressedBytesCounter
        this.compressionPercentage = compressionPercentage
        this.firstTransactionId = firstTransactionId
        this.firstTransactionCompressedBytes = firstTransactionCompressedBytes
        this.firstTransactionUncompressedBytes = firstTransactionUncompressedBytes
        this.firstTransactionTimestamp = firstTransactionTimestamp
        this.lastTransactionId = lastTransactionId
        this.lastTransactionCompressedBytes = lastTransactionCompressedBytes
        this.lastTransactionUncompressedBytes = lastTransactionUncompressedBytes
        this.lastTransactionTimestamp = lastTransactionTimestamp
        resetChangedOnNotNull()
    }
}
