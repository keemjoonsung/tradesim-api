/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.sys.tables.records


import com.kjs990114.infra.persistence.jooq.trade.sys.tables.UserSummaryByStages

import org.jooq.Field
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.TableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UserSummaryByStagesRecord() : TableRecordImpl<UserSummaryByStagesRecord>(UserSummaryByStages.USER_SUMMARY_BY_STAGES), Record5<String?, String?, ULong?, String?, String?> {

    open var user: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var eventName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var total: ULong?
        set(value): Unit = set(2, value)
        get(): ULong? = get(2) as ULong?

    open var totalLatency: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var avgLatency: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row5<String?, String?, ULong?, String?, String?> = super.fieldsRow() as Row5<String?, String?, ULong?, String?, String?>
    override fun valuesRow(): Row5<String?, String?, ULong?, String?, String?> = super.valuesRow() as Row5<String?, String?, ULong?, String?, String?>
    override fun field1(): Field<String?> = UserSummaryByStages.USER_SUMMARY_BY_STAGES.USER
    override fun field2(): Field<String?> = UserSummaryByStages.USER_SUMMARY_BY_STAGES.EVENT_NAME
    override fun field3(): Field<ULong?> = UserSummaryByStages.USER_SUMMARY_BY_STAGES.TOTAL
    override fun field4(): Field<String?> = UserSummaryByStages.USER_SUMMARY_BY_STAGES.TOTAL_LATENCY
    override fun field5(): Field<String?> = UserSummaryByStages.USER_SUMMARY_BY_STAGES.AVG_LATENCY
    override fun component1(): String? = user
    override fun component2(): String? = eventName
    override fun component3(): ULong? = total
    override fun component4(): String? = totalLatency
    override fun component5(): String? = avgLatency
    override fun value1(): String? = user
    override fun value2(): String? = eventName
    override fun value3(): ULong? = total
    override fun value4(): String? = totalLatency
    override fun value5(): String? = avgLatency

    override fun value1(value: String?): UserSummaryByStagesRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): UserSummaryByStagesRecord {
        set(1, value)
        return this
    }

    override fun value3(value: ULong?): UserSummaryByStagesRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): UserSummaryByStagesRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): UserSummaryByStagesRecord {
        set(4, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: ULong?, value4: String?, value5: String?): UserSummaryByStagesRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        return this
    }

    /**
     * Create a detached, initialised UserSummaryByStagesRecord
     */
    constructor(user: String? = null, eventName: String? = null, total: ULong? = null, totalLatency: String? = null, avgLatency: String? = null): this() {
        this.user = user
        this.eventName = eventName
        this.total = total
        this.totalLatency = totalLatency
        this.avgLatency = avgLatency
        resetChangedOnNotNull()
    }
}
