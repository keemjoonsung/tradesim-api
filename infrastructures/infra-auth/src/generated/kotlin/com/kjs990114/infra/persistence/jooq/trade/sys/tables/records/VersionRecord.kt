/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.sys.tables.records


import com.kjs990114.infra.persistence.jooq.trade.sys.tables.Version

import org.jooq.Field
import org.jooq.Record2
import org.jooq.Row2
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class VersionRecord() : TableRecordImpl<VersionRecord>(Version.VERSION), Record2<String?, String?> {

    open var sysVersion: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var mysqlVersion: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row2<String?, String?> = super.fieldsRow() as Row2<String?, String?>
    override fun valuesRow(): Row2<String?, String?> = super.valuesRow() as Row2<String?, String?>
    override fun field1(): Field<String?> = Version.VERSION.SYS_VERSION
    override fun field2(): Field<String?> = Version.VERSION.MYSQL_VERSION
    override fun component1(): String? = sysVersion
    override fun component2(): String? = mysqlVersion
    override fun value1(): String? = sysVersion
    override fun value2(): String? = mysqlVersion

    override fun value1(value: String?): VersionRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): VersionRecord {
        set(1, value)
        return this
    }

    override fun values(value1: String?, value2: String?): VersionRecord {
        this.value1(value1)
        this.value2(value2)
        return this
    }

    /**
     * Create a detached, initialised VersionRecord
     */
    constructor(sysVersion: String? = null, mysqlVersion: String? = null): this() {
        this.sysVersion = sysVersion
        this.mysqlVersion = mysqlVersion
        resetChangedOnNotNull()
    }
}
