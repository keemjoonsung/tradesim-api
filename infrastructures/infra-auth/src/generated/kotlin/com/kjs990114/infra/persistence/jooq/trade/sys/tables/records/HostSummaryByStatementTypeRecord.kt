/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.sys.tables.records


import com.kjs990114.infra.persistence.jooq.trade.sys.tables.HostSummaryByStatementType

import org.jooq.Field
import org.jooq.Record11
import org.jooq.Row11
import org.jooq.impl.TableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class HostSummaryByStatementTypeRecord() : TableRecordImpl<HostSummaryByStatementTypeRecord>(HostSummaryByStatementType.HOST_SUMMARY_BY_STATEMENT_TYPE), Record11<String?, String?, ULong?, String?, String?, String?, String?, ULong?, ULong?, ULong?, ULong?> {

    open var host: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var statement: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var total: ULong?
        set(value): Unit = set(2, value)
        get(): ULong? = get(2) as ULong?

    open var totalLatency: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var maxLatency: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var lockLatency: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var cpuLatency: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var rowsSent: ULong?
        set(value): Unit = set(7, value)
        get(): ULong? = get(7) as ULong?

    open var rowsExamined: ULong?
        set(value): Unit = set(8, value)
        get(): ULong? = get(8) as ULong?

    open var rowsAffected: ULong?
        set(value): Unit = set(9, value)
        get(): ULong? = get(9) as ULong?

    open var fullScans: ULong?
        set(value): Unit = set(10, value)
        get(): ULong? = get(10) as ULong?

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row11<String?, String?, ULong?, String?, String?, String?, String?, ULong?, ULong?, ULong?, ULong?> = super.fieldsRow() as Row11<String?, String?, ULong?, String?, String?, String?, String?, ULong?, ULong?, ULong?, ULong?>
    override fun valuesRow(): Row11<String?, String?, ULong?, String?, String?, String?, String?, ULong?, ULong?, ULong?, ULong?> = super.valuesRow() as Row11<String?, String?, ULong?, String?, String?, String?, String?, ULong?, ULong?, ULong?, ULong?>
    override fun field1(): Field<String?> = HostSummaryByStatementType.HOST_SUMMARY_BY_STATEMENT_TYPE.HOST
    override fun field2(): Field<String?> = HostSummaryByStatementType.HOST_SUMMARY_BY_STATEMENT_TYPE.STATEMENT
    override fun field3(): Field<ULong?> = HostSummaryByStatementType.HOST_SUMMARY_BY_STATEMENT_TYPE.TOTAL
    override fun field4(): Field<String?> = HostSummaryByStatementType.HOST_SUMMARY_BY_STATEMENT_TYPE.TOTAL_LATENCY
    override fun field5(): Field<String?> = HostSummaryByStatementType.HOST_SUMMARY_BY_STATEMENT_TYPE.MAX_LATENCY
    override fun field6(): Field<String?> = HostSummaryByStatementType.HOST_SUMMARY_BY_STATEMENT_TYPE.LOCK_LATENCY
    override fun field7(): Field<String?> = HostSummaryByStatementType.HOST_SUMMARY_BY_STATEMENT_TYPE.CPU_LATENCY
    override fun field8(): Field<ULong?> = HostSummaryByStatementType.HOST_SUMMARY_BY_STATEMENT_TYPE.ROWS_SENT
    override fun field9(): Field<ULong?> = HostSummaryByStatementType.HOST_SUMMARY_BY_STATEMENT_TYPE.ROWS_EXAMINED
    override fun field10(): Field<ULong?> = HostSummaryByStatementType.HOST_SUMMARY_BY_STATEMENT_TYPE.ROWS_AFFECTED
    override fun field11(): Field<ULong?> = HostSummaryByStatementType.HOST_SUMMARY_BY_STATEMENT_TYPE.FULL_SCANS
    override fun component1(): String? = host
    override fun component2(): String? = statement
    override fun component3(): ULong? = total
    override fun component4(): String? = totalLatency
    override fun component5(): String? = maxLatency
    override fun component6(): String? = lockLatency
    override fun component7(): String? = cpuLatency
    override fun component8(): ULong? = rowsSent
    override fun component9(): ULong? = rowsExamined
    override fun component10(): ULong? = rowsAffected
    override fun component11(): ULong? = fullScans
    override fun value1(): String? = host
    override fun value2(): String? = statement
    override fun value3(): ULong? = total
    override fun value4(): String? = totalLatency
    override fun value5(): String? = maxLatency
    override fun value6(): String? = lockLatency
    override fun value7(): String? = cpuLatency
    override fun value8(): ULong? = rowsSent
    override fun value9(): ULong? = rowsExamined
    override fun value10(): ULong? = rowsAffected
    override fun value11(): ULong? = fullScans

    override fun value1(value: String?): HostSummaryByStatementTypeRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): HostSummaryByStatementTypeRecord {
        set(1, value)
        return this
    }

    override fun value3(value: ULong?): HostSummaryByStatementTypeRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): HostSummaryByStatementTypeRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): HostSummaryByStatementTypeRecord {
        set(4, value)
        return this
    }

    override fun value6(value: String?): HostSummaryByStatementTypeRecord {
        set(5, value)
        return this
    }

    override fun value7(value: String?): HostSummaryByStatementTypeRecord {
        set(6, value)
        return this
    }

    override fun value8(value: ULong?): HostSummaryByStatementTypeRecord {
        set(7, value)
        return this
    }

    override fun value9(value: ULong?): HostSummaryByStatementTypeRecord {
        set(8, value)
        return this
    }

    override fun value10(value: ULong?): HostSummaryByStatementTypeRecord {
        set(9, value)
        return this
    }

    override fun value11(value: ULong?): HostSummaryByStatementTypeRecord {
        set(10, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: ULong?, value4: String?, value5: String?, value6: String?, value7: String?, value8: ULong?, value9: ULong?, value10: ULong?, value11: ULong?): HostSummaryByStatementTypeRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        return this
    }

    /**
     * Create a detached, initialised HostSummaryByStatementTypeRecord
     */
    constructor(host: String? = null, statement: String? = null, total: ULong? = null, totalLatency: String? = null, maxLatency: String? = null, lockLatency: String? = null, cpuLatency: String? = null, rowsSent: ULong? = null, rowsExamined: ULong? = null, rowsAffected: ULong? = null, fullScans: ULong? = null): this() {
        this.host = host
        this.statement = statement
        this.total = total
        this.totalLatency = totalLatency
        this.maxLatency = maxLatency
        this.lockLatency = lockLatency
        this.cpuLatency = cpuLatency
        this.rowsSent = rowsSent
        this.rowsExamined = rowsExamined
        this.rowsAffected = rowsAffected
        this.fullScans = fullScans
        resetChangedOnNotNull()
    }
}
