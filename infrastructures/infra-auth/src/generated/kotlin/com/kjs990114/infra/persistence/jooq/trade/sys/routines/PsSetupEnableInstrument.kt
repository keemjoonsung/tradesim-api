/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.sys.routines


import com.kjs990114.infra.persistence.jooq.trade.sys.Sys

import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * 
 * Description
 * -----------
 * 
 * Enables instruments within Performance Schema 
 * matching the input pattern.
 * 
 * Parameters
 * -----------
 * 
 * in_pattern (VARCHAR(128)):
 *   A LIKE pattern match (using "%in_pattern%") of events to enable
 * 
 * Example
 * -----------
 * 
 * To enable all mutex instruments:
 * 
 * mysql&gt; CALL sys.ps_setup_enable_instrument('wait/synch/mutex');
 * +-------------------------+
 * | summary                 |
 * +-------------------------+
 * | Enabled 155 instruments |
 * +-------------------------+
 * 1 row in set (0.02 sec)
 * 
 * Query OK, 0 rows affected (0.02 sec)
 * 
 * To enable just a specific TCP/IP based network IO instrument:
 * 
 * mysql&gt; CALL
 * sys.ps_setup_enable_instrument('wait/io/socket/sql/server_tcpip_socket');
 * +-----------------------+
 * | summary               |
 * +-----------------------+
 * | Enabled 1 instruments |
 * +-----------------------+
 * 1 row in set (0.00 sec)
 * 
 * Query OK, 0 rows affected (0.00 sec)
 * 
 * To enable all instruments:
 * 
 * mysql&gt; CALL sys.ps_setup_enable_instrument('');
 * +-------------------------+
 * | summary                 |
 * +-------------------------+
 * | Enabled 547 instruments |
 * +-------------------------+
 * 1 row in set (0.01 sec)
 * 
 * Query OK, 0 rows affected (0.01 sec)

 */
@Suppress("UNCHECKED_CAST")
open class PsSetupEnableInstrument : AbstractRoutine<java.lang.Void>("ps_setup_enable_instrument", Sys.SYS) {
    companion object {

        /**
         * The parameter <code>sys.ps_setup_enable_instrument.in_pattern</code>.
         */
        val IN_PATTERN: Parameter<String?> = Internal.createParameter("in_pattern", SQLDataType.VARCHAR(128), false, false)
    }

    init {
        addInParameter(PsSetupEnableInstrument.IN_PATTERN)
    }

    /**
     * Set the <code>in_pattern</code> parameter IN value to the routine
     */
    fun setInPattern(value: String?): Unit = setValue(PsSetupEnableInstrument.IN_PATTERN, value)
}
