/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.MemorySummaryGlobalByEventName

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record11
import org.jooq.Row11
import org.jooq.impl.UpdatableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class MemorySummaryGlobalByEventNameRecord() : UpdatableRecordImpl<MemorySummaryGlobalByEventNameRecord>(MemorySummaryGlobalByEventName.MEMORY_SUMMARY_GLOBAL_BY_EVENT_NAME), Record11<String?, ULong?, ULong?, ULong?, ULong?, Long?, Long?, Long?, Long?, Long?, Long?> {

    open var eventName: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var countAlloc: ULong?
        set(value): Unit = set(1, value)
        get(): ULong? = get(1) as ULong?

    open var countFree: ULong?
        set(value): Unit = set(2, value)
        get(): ULong? = get(2) as ULong?

    open var sumNumberOfBytesAlloc: ULong?
        set(value): Unit = set(3, value)
        get(): ULong? = get(3) as ULong?

    open var sumNumberOfBytesFree: ULong?
        set(value): Unit = set(4, value)
        get(): ULong? = get(4) as ULong?

    open var lowCountUsed: Long?
        set(value): Unit = set(5, value)
        get(): Long? = get(5) as Long?

    open var currentCountUsed: Long?
        set(value): Unit = set(6, value)
        get(): Long? = get(6) as Long?

    open var highCountUsed: Long?
        set(value): Unit = set(7, value)
        get(): Long? = get(7) as Long?

    open var lowNumberOfBytesUsed: Long?
        set(value): Unit = set(8, value)
        get(): Long? = get(8) as Long?

    open var currentNumberOfBytesUsed: Long?
        set(value): Unit = set(9, value)
        get(): Long? = get(9) as Long?

    open var highNumberOfBytesUsed: Long?
        set(value): Unit = set(10, value)
        get(): Long? = get(10) as Long?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row11<String?, ULong?, ULong?, ULong?, ULong?, Long?, Long?, Long?, Long?, Long?, Long?> = super.fieldsRow() as Row11<String?, ULong?, ULong?, ULong?, ULong?, Long?, Long?, Long?, Long?, Long?, Long?>
    override fun valuesRow(): Row11<String?, ULong?, ULong?, ULong?, ULong?, Long?, Long?, Long?, Long?, Long?, Long?> = super.valuesRow() as Row11<String?, ULong?, ULong?, ULong?, ULong?, Long?, Long?, Long?, Long?, Long?, Long?>
    override fun field1(): Field<String?> = MemorySummaryGlobalByEventName.MEMORY_SUMMARY_GLOBAL_BY_EVENT_NAME.EVENT_NAME
    override fun field2(): Field<ULong?> = MemorySummaryGlobalByEventName.MEMORY_SUMMARY_GLOBAL_BY_EVENT_NAME.COUNT_ALLOC
    override fun field3(): Field<ULong?> = MemorySummaryGlobalByEventName.MEMORY_SUMMARY_GLOBAL_BY_EVENT_NAME.COUNT_FREE
    override fun field4(): Field<ULong?> = MemorySummaryGlobalByEventName.MEMORY_SUMMARY_GLOBAL_BY_EVENT_NAME.SUM_NUMBER_OF_BYTES_ALLOC
    override fun field5(): Field<ULong?> = MemorySummaryGlobalByEventName.MEMORY_SUMMARY_GLOBAL_BY_EVENT_NAME.SUM_NUMBER_OF_BYTES_FREE
    override fun field6(): Field<Long?> = MemorySummaryGlobalByEventName.MEMORY_SUMMARY_GLOBAL_BY_EVENT_NAME.LOW_COUNT_USED
    override fun field7(): Field<Long?> = MemorySummaryGlobalByEventName.MEMORY_SUMMARY_GLOBAL_BY_EVENT_NAME.CURRENT_COUNT_USED
    override fun field8(): Field<Long?> = MemorySummaryGlobalByEventName.MEMORY_SUMMARY_GLOBAL_BY_EVENT_NAME.HIGH_COUNT_USED
    override fun field9(): Field<Long?> = MemorySummaryGlobalByEventName.MEMORY_SUMMARY_GLOBAL_BY_EVENT_NAME.LOW_NUMBER_OF_BYTES_USED
    override fun field10(): Field<Long?> = MemorySummaryGlobalByEventName.MEMORY_SUMMARY_GLOBAL_BY_EVENT_NAME.CURRENT_NUMBER_OF_BYTES_USED
    override fun field11(): Field<Long?> = MemorySummaryGlobalByEventName.MEMORY_SUMMARY_GLOBAL_BY_EVENT_NAME.HIGH_NUMBER_OF_BYTES_USED
    override fun component1(): String? = eventName
    override fun component2(): ULong? = countAlloc
    override fun component3(): ULong? = countFree
    override fun component4(): ULong? = sumNumberOfBytesAlloc
    override fun component5(): ULong? = sumNumberOfBytesFree
    override fun component6(): Long? = lowCountUsed
    override fun component7(): Long? = currentCountUsed
    override fun component8(): Long? = highCountUsed
    override fun component9(): Long? = lowNumberOfBytesUsed
    override fun component10(): Long? = currentNumberOfBytesUsed
    override fun component11(): Long? = highNumberOfBytesUsed
    override fun value1(): String? = eventName
    override fun value2(): ULong? = countAlloc
    override fun value3(): ULong? = countFree
    override fun value4(): ULong? = sumNumberOfBytesAlloc
    override fun value5(): ULong? = sumNumberOfBytesFree
    override fun value6(): Long? = lowCountUsed
    override fun value7(): Long? = currentCountUsed
    override fun value8(): Long? = highCountUsed
    override fun value9(): Long? = lowNumberOfBytesUsed
    override fun value10(): Long? = currentNumberOfBytesUsed
    override fun value11(): Long? = highNumberOfBytesUsed

    override fun value1(value: String?): MemorySummaryGlobalByEventNameRecord {
        set(0, value)
        return this
    }

    override fun value2(value: ULong?): MemorySummaryGlobalByEventNameRecord {
        set(1, value)
        return this
    }

    override fun value3(value: ULong?): MemorySummaryGlobalByEventNameRecord {
        set(2, value)
        return this
    }

    override fun value4(value: ULong?): MemorySummaryGlobalByEventNameRecord {
        set(3, value)
        return this
    }

    override fun value5(value: ULong?): MemorySummaryGlobalByEventNameRecord {
        set(4, value)
        return this
    }

    override fun value6(value: Long?): MemorySummaryGlobalByEventNameRecord {
        set(5, value)
        return this
    }

    override fun value7(value: Long?): MemorySummaryGlobalByEventNameRecord {
        set(6, value)
        return this
    }

    override fun value8(value: Long?): MemorySummaryGlobalByEventNameRecord {
        set(7, value)
        return this
    }

    override fun value9(value: Long?): MemorySummaryGlobalByEventNameRecord {
        set(8, value)
        return this
    }

    override fun value10(value: Long?): MemorySummaryGlobalByEventNameRecord {
        set(9, value)
        return this
    }

    override fun value11(value: Long?): MemorySummaryGlobalByEventNameRecord {
        set(10, value)
        return this
    }

    override fun values(value1: String?, value2: ULong?, value3: ULong?, value4: ULong?, value5: ULong?, value6: Long?, value7: Long?, value8: Long?, value9: Long?, value10: Long?, value11: Long?): MemorySummaryGlobalByEventNameRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        return this
    }

    /**
     * Create a detached, initialised MemorySummaryGlobalByEventNameRecord
     */
    constructor(eventName: String? = null, countAlloc: ULong? = null, countFree: ULong? = null, sumNumberOfBytesAlloc: ULong? = null, sumNumberOfBytesFree: ULong? = null, lowCountUsed: Long? = null, currentCountUsed: Long? = null, highCountUsed: Long? = null, lowNumberOfBytesUsed: Long? = null, currentNumberOfBytesUsed: Long? = null, highNumberOfBytesUsed: Long? = null): this() {
        this.eventName = eventName
        this.countAlloc = countAlloc
        this.countFree = countFree
        this.sumNumberOfBytesAlloc = sumNumberOfBytesAlloc
        this.sumNumberOfBytesFree = sumNumberOfBytesFree
        this.lowCountUsed = lowCountUsed
        this.currentCountUsed = currentCountUsed
        this.highCountUsed = highCountUsed
        this.lowNumberOfBytesUsed = lowNumberOfBytesUsed
        this.currentNumberOfBytesUsed = currentNumberOfBytesUsed
        this.highNumberOfBytesUsed = highNumberOfBytesUsed
        resetChangedOnNotNull()
    }
}
