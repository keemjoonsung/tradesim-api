/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.information_schema.enums.TriggersActionTiming
import com.kjs990114.infra.persistence.jooq.trade.information_schema.enums.TriggersEventManipulation
import com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.Triggers

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record22
import org.jooq.Row22
import org.jooq.impl.TableRecordImpl
import org.jooq.types.UInteger


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class TriggersRecord() : TableRecordImpl<TriggersRecord>(Triggers.TRIGGERS), Record22<String?, String?, String?, TriggersEventManipulation?, String?, String?, String?, UInteger?, ByteArray?, String?, String?, TriggersActionTiming?, ByteArray?, ByteArray?, String?, String?, LocalDateTime?, String?, String?, String?, String?, String?> {

    open var triggerCatalog: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var triggerSchema: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var triggerName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var eventManipulation: TriggersEventManipulation?
        set(value): Unit = set(3, value)
        get(): TriggersEventManipulation? = get(3) as TriggersEventManipulation?

    open var eventObjectCatalog: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var eventObjectSchema: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var eventObjectTable: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var actionOrder: UInteger?
        set(value): Unit = set(7, value)
        get(): UInteger? = get(7) as UInteger?

    open var actionCondition: ByteArray?
        set(value): Unit = set(8, value)
        get(): ByteArray? = get(8) as ByteArray?

    open var actionStatement: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var actionOrientation: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var actionTiming: TriggersActionTiming?
        set(value): Unit = set(11, value)
        get(): TriggersActionTiming? = get(11) as TriggersActionTiming?

    open var actionReferenceOldTable: ByteArray?
        set(value): Unit = set(12, value)
        get(): ByteArray? = get(12) as ByteArray?

    open var actionReferenceNewTable: ByteArray?
        set(value): Unit = set(13, value)
        get(): ByteArray? = get(13) as ByteArray?

    open var actionReferenceOldRow: String?
        set(value): Unit = set(14, value)
        get(): String? = get(14) as String?

    open var actionReferenceNewRow: String?
        set(value): Unit = set(15, value)
        get(): String? = get(15) as String?

    open var created: LocalDateTime?
        set(value): Unit = set(16, value)
        get(): LocalDateTime? = get(16) as LocalDateTime?

    open var sqlMode: String?
        set(value): Unit = set(17, value)
        get(): String? = get(17) as String?

    open var definer: String?
        set(value): Unit = set(18, value)
        get(): String? = get(18) as String?

    open var characterSetClient: String?
        set(value): Unit = set(19, value)
        get(): String? = get(19) as String?

    open var collationConnection: String?
        set(value): Unit = set(20, value)
        get(): String? = get(20) as String?

    open var databaseCollation: String?
        set(value): Unit = set(21, value)
        get(): String? = get(21) as String?

    // -------------------------------------------------------------------------
    // Record22 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row22<String?, String?, String?, TriggersEventManipulation?, String?, String?, String?, UInteger?, ByteArray?, String?, String?, TriggersActionTiming?, ByteArray?, ByteArray?, String?, String?, LocalDateTime?, String?, String?, String?, String?, String?> = super.fieldsRow() as Row22<String?, String?, String?, TriggersEventManipulation?, String?, String?, String?, UInteger?, ByteArray?, String?, String?, TriggersActionTiming?, ByteArray?, ByteArray?, String?, String?, LocalDateTime?, String?, String?, String?, String?, String?>
    override fun valuesRow(): Row22<String?, String?, String?, TriggersEventManipulation?, String?, String?, String?, UInteger?, ByteArray?, String?, String?, TriggersActionTiming?, ByteArray?, ByteArray?, String?, String?, LocalDateTime?, String?, String?, String?, String?, String?> = super.valuesRow() as Row22<String?, String?, String?, TriggersEventManipulation?, String?, String?, String?, UInteger?, ByteArray?, String?, String?, TriggersActionTiming?, ByteArray?, ByteArray?, String?, String?, LocalDateTime?, String?, String?, String?, String?, String?>
    override fun field1(): Field<String?> = Triggers.TRIGGERS.TRIGGER_CATALOG
    override fun field2(): Field<String?> = Triggers.TRIGGERS.TRIGGER_SCHEMA
    override fun field3(): Field<String?> = Triggers.TRIGGERS.TRIGGER_NAME
    override fun field4(): Field<TriggersEventManipulation?> = Triggers.TRIGGERS.EVENT_MANIPULATION
    override fun field5(): Field<String?> = Triggers.TRIGGERS.EVENT_OBJECT_CATALOG
    override fun field6(): Field<String?> = Triggers.TRIGGERS.EVENT_OBJECT_SCHEMA
    override fun field7(): Field<String?> = Triggers.TRIGGERS.EVENT_OBJECT_TABLE
    override fun field8(): Field<UInteger?> = Triggers.TRIGGERS.ACTION_ORDER
    override fun field9(): Field<ByteArray?> = Triggers.TRIGGERS.ACTION_CONDITION
    override fun field10(): Field<String?> = Triggers.TRIGGERS.ACTION_STATEMENT
    override fun field11(): Field<String?> = Triggers.TRIGGERS.ACTION_ORIENTATION
    override fun field12(): Field<TriggersActionTiming?> = Triggers.TRIGGERS.ACTION_TIMING
    override fun field13(): Field<ByteArray?> = Triggers.TRIGGERS.ACTION_REFERENCE_OLD_TABLE
    override fun field14(): Field<ByteArray?> = Triggers.TRIGGERS.ACTION_REFERENCE_NEW_TABLE
    override fun field15(): Field<String?> = Triggers.TRIGGERS.ACTION_REFERENCE_OLD_ROW
    override fun field16(): Field<String?> = Triggers.TRIGGERS.ACTION_REFERENCE_NEW_ROW
    override fun field17(): Field<LocalDateTime?> = Triggers.TRIGGERS.CREATED
    override fun field18(): Field<String?> = Triggers.TRIGGERS.SQL_MODE
    override fun field19(): Field<String?> = Triggers.TRIGGERS.DEFINER
    override fun field20(): Field<String?> = Triggers.TRIGGERS.CHARACTER_SET_CLIENT
    override fun field21(): Field<String?> = Triggers.TRIGGERS.COLLATION_CONNECTION
    override fun field22(): Field<String?> = Triggers.TRIGGERS.DATABASE_COLLATION
    override fun component1(): String? = triggerCatalog
    override fun component2(): String? = triggerSchema
    override fun component3(): String? = triggerName
    override fun component4(): TriggersEventManipulation? = eventManipulation
    override fun component5(): String? = eventObjectCatalog
    override fun component6(): String? = eventObjectSchema
    override fun component7(): String? = eventObjectTable
    override fun component8(): UInteger? = actionOrder
    override fun component9(): ByteArray? = actionCondition
    override fun component10(): String? = actionStatement
    override fun component11(): String? = actionOrientation
    override fun component12(): TriggersActionTiming? = actionTiming
    override fun component13(): ByteArray? = actionReferenceOldTable
    override fun component14(): ByteArray? = actionReferenceNewTable
    override fun component15(): String? = actionReferenceOldRow
    override fun component16(): String? = actionReferenceNewRow
    override fun component17(): LocalDateTime? = created
    override fun component18(): String? = sqlMode
    override fun component19(): String? = definer
    override fun component20(): String? = characterSetClient
    override fun component21(): String? = collationConnection
    override fun component22(): String? = databaseCollation
    override fun value1(): String? = triggerCatalog
    override fun value2(): String? = triggerSchema
    override fun value3(): String? = triggerName
    override fun value4(): TriggersEventManipulation? = eventManipulation
    override fun value5(): String? = eventObjectCatalog
    override fun value6(): String? = eventObjectSchema
    override fun value7(): String? = eventObjectTable
    override fun value8(): UInteger? = actionOrder
    override fun value9(): ByteArray? = actionCondition
    override fun value10(): String? = actionStatement
    override fun value11(): String? = actionOrientation
    override fun value12(): TriggersActionTiming? = actionTiming
    override fun value13(): ByteArray? = actionReferenceOldTable
    override fun value14(): ByteArray? = actionReferenceNewTable
    override fun value15(): String? = actionReferenceOldRow
    override fun value16(): String? = actionReferenceNewRow
    override fun value17(): LocalDateTime? = created
    override fun value18(): String? = sqlMode
    override fun value19(): String? = definer
    override fun value20(): String? = characterSetClient
    override fun value21(): String? = collationConnection
    override fun value22(): String? = databaseCollation

    override fun value1(value: String?): TriggersRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): TriggersRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): TriggersRecord {
        set(2, value)
        return this
    }

    override fun value4(value: TriggersEventManipulation?): TriggersRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): TriggersRecord {
        set(4, value)
        return this
    }

    override fun value6(value: String?): TriggersRecord {
        set(5, value)
        return this
    }

    override fun value7(value: String?): TriggersRecord {
        set(6, value)
        return this
    }

    override fun value8(value: UInteger?): TriggersRecord {
        set(7, value)
        return this
    }

    override fun value9(value: ByteArray?): TriggersRecord {
        set(8, value)
        return this
    }

    override fun value10(value: String?): TriggersRecord {
        set(9, value)
        return this
    }

    override fun value11(value: String?): TriggersRecord {
        set(10, value)
        return this
    }

    override fun value12(value: TriggersActionTiming?): TriggersRecord {
        set(11, value)
        return this
    }

    override fun value13(value: ByteArray?): TriggersRecord {
        set(12, value)
        return this
    }

    override fun value14(value: ByteArray?): TriggersRecord {
        set(13, value)
        return this
    }

    override fun value15(value: String?): TriggersRecord {
        set(14, value)
        return this
    }

    override fun value16(value: String?): TriggersRecord {
        set(15, value)
        return this
    }

    override fun value17(value: LocalDateTime?): TriggersRecord {
        set(16, value)
        return this
    }

    override fun value18(value: String?): TriggersRecord {
        set(17, value)
        return this
    }

    override fun value19(value: String?): TriggersRecord {
        set(18, value)
        return this
    }

    override fun value20(value: String?): TriggersRecord {
        set(19, value)
        return this
    }

    override fun value21(value: String?): TriggersRecord {
        set(20, value)
        return this
    }

    override fun value22(value: String?): TriggersRecord {
        set(21, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: TriggersEventManipulation?, value5: String?, value6: String?, value7: String?, value8: UInteger?, value9: ByteArray?, value10: String?, value11: String?, value12: TriggersActionTiming?, value13: ByteArray?, value14: ByteArray?, value15: String?, value16: String?, value17: LocalDateTime?, value18: String?, value19: String?, value20: String?, value21: String?, value22: String?): TriggersRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        this.value14(value14)
        this.value15(value15)
        this.value16(value16)
        this.value17(value17)
        this.value18(value18)
        this.value19(value19)
        this.value20(value20)
        this.value21(value21)
        this.value22(value22)
        return this
    }

    /**
     * Create a detached, initialised TriggersRecord
     */
    constructor(triggerCatalog: String? = null, triggerSchema: String? = null, triggerName: String? = null, eventManipulation: TriggersEventManipulation? = null, eventObjectCatalog: String? = null, eventObjectSchema: String? = null, eventObjectTable: String? = null, actionOrder: UInteger? = null, actionCondition: ByteArray? = null, actionStatement: String? = null, actionOrientation: String? = null, actionTiming: TriggersActionTiming? = null, actionReferenceOldTable: ByteArray? = null, actionReferenceNewTable: ByteArray? = null, actionReferenceOldRow: String? = null, actionReferenceNewRow: String? = null, created: LocalDateTime? = null, sqlMode: String? = null, definer: String? = null, characterSetClient: String? = null, collationConnection: String? = null, databaseCollation: String? = null): this() {
        this.triggerCatalog = triggerCatalog
        this.triggerSchema = triggerSchema
        this.triggerName = triggerName
        this.eventManipulation = eventManipulation
        this.eventObjectCatalog = eventObjectCatalog
        this.eventObjectSchema = eventObjectSchema
        this.eventObjectTable = eventObjectTable
        this.actionOrder = actionOrder
        this.actionCondition = actionCondition
        this.actionStatement = actionStatement
        this.actionOrientation = actionOrientation
        this.actionTiming = actionTiming
        this.actionReferenceOldTable = actionReferenceOldTable
        this.actionReferenceNewTable = actionReferenceNewTable
        this.actionReferenceOldRow = actionReferenceOldRow
        this.actionReferenceNewRow = actionReferenceNewRow
        this.created = created
        this.sqlMode = sqlMode
        this.definer = definer
        this.characterSetClient = characterSetClient
        this.collationConnection = collationConnection
        this.databaseCollation = databaseCollation
        resetChangedOnNotNull()
    }
}
