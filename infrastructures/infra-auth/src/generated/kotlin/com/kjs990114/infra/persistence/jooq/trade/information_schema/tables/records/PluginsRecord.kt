/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.Plugins

import org.jooq.Field
import org.jooq.Record11
import org.jooq.Row11
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PluginsRecord() : TableRecordImpl<PluginsRecord>(Plugins.PLUGINS), Record11<String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?> {

    open var pluginName: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var pluginVersion: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var pluginStatus: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var pluginType: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var pluginTypeVersion: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var pluginLibrary: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var pluginLibraryVersion: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var pluginAuthor: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var pluginDescription: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var pluginLicense: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var loadOption: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row11<String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?> = super.fieldsRow() as Row11<String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?>
    override fun valuesRow(): Row11<String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?> = super.valuesRow() as Row11<String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?>
    override fun field1(): Field<String?> = Plugins.PLUGINS.PLUGIN_NAME
    override fun field2(): Field<String?> = Plugins.PLUGINS.PLUGIN_VERSION
    override fun field3(): Field<String?> = Plugins.PLUGINS.PLUGIN_STATUS
    override fun field4(): Field<String?> = Plugins.PLUGINS.PLUGIN_TYPE
    override fun field5(): Field<String?> = Plugins.PLUGINS.PLUGIN_TYPE_VERSION
    override fun field6(): Field<String?> = Plugins.PLUGINS.PLUGIN_LIBRARY
    override fun field7(): Field<String?> = Plugins.PLUGINS.PLUGIN_LIBRARY_VERSION
    override fun field8(): Field<String?> = Plugins.PLUGINS.PLUGIN_AUTHOR
    override fun field9(): Field<String?> = Plugins.PLUGINS.PLUGIN_DESCRIPTION
    override fun field10(): Field<String?> = Plugins.PLUGINS.PLUGIN_LICENSE
    override fun field11(): Field<String?> = Plugins.PLUGINS.LOAD_OPTION
    override fun component1(): String? = pluginName
    override fun component2(): String? = pluginVersion
    override fun component3(): String? = pluginStatus
    override fun component4(): String? = pluginType
    override fun component5(): String? = pluginTypeVersion
    override fun component6(): String? = pluginLibrary
    override fun component7(): String? = pluginLibraryVersion
    override fun component8(): String? = pluginAuthor
    override fun component9(): String? = pluginDescription
    override fun component10(): String? = pluginLicense
    override fun component11(): String? = loadOption
    override fun value1(): String? = pluginName
    override fun value2(): String? = pluginVersion
    override fun value3(): String? = pluginStatus
    override fun value4(): String? = pluginType
    override fun value5(): String? = pluginTypeVersion
    override fun value6(): String? = pluginLibrary
    override fun value7(): String? = pluginLibraryVersion
    override fun value8(): String? = pluginAuthor
    override fun value9(): String? = pluginDescription
    override fun value10(): String? = pluginLicense
    override fun value11(): String? = loadOption

    override fun value1(value: String?): PluginsRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): PluginsRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): PluginsRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): PluginsRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): PluginsRecord {
        set(4, value)
        return this
    }

    override fun value6(value: String?): PluginsRecord {
        set(5, value)
        return this
    }

    override fun value7(value: String?): PluginsRecord {
        set(6, value)
        return this
    }

    override fun value8(value: String?): PluginsRecord {
        set(7, value)
        return this
    }

    override fun value9(value: String?): PluginsRecord {
        set(8, value)
        return this
    }

    override fun value10(value: String?): PluginsRecord {
        set(9, value)
        return this
    }

    override fun value11(value: String?): PluginsRecord {
        set(10, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: String?, value5: String?, value6: String?, value7: String?, value8: String?, value9: String?, value10: String?, value11: String?): PluginsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        return this
    }

    /**
     * Create a detached, initialised PluginsRecord
     */
    constructor(pluginName: String? = null, pluginVersion: String? = null, pluginStatus: String? = null, pluginType: String? = null, pluginTypeVersion: String? = null, pluginLibrary: String? = null, pluginLibraryVersion: String? = null, pluginAuthor: String? = null, pluginDescription: String? = null, pluginLicense: String? = null, loadOption: String? = null): this() {
        this.pluginName = pluginName
        this.pluginVersion = pluginVersion
        this.pluginStatus = pluginStatus
        this.pluginType = pluginType
        this.pluginTypeVersion = pluginTypeVersion
        this.pluginLibrary = pluginLibrary
        this.pluginLibraryVersion = pluginLibraryVersion
        this.pluginAuthor = pluginAuthor
        this.pluginDescription = pluginDescription
        this.pluginLicense = pluginLicense
        this.loadOption = loadOption
        resetChangedOnNotNull()
    }
}
