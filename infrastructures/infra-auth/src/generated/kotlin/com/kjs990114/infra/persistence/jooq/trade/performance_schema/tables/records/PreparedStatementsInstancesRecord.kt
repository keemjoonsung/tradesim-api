/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.performance_schema.enums.PreparedStatementsInstancesExecutionEngine
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.enums.PreparedStatementsInstancesOwnerObjectType
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.PreparedStatementsInstances

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PreparedStatementsInstancesRecord() : UpdatableRecordImpl<PreparedStatementsInstancesRecord>(PreparedStatementsInstances.PREPARED_STATEMENTS_INSTANCES) {

    open var objectInstanceBegin: ULong?
        set(value): Unit = set(0, value)
        get(): ULong? = get(0) as ULong?

    open var statementId: ULong?
        set(value): Unit = set(1, value)
        get(): ULong? = get(1) as ULong?

    open var statementName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var sqlText: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var ownerThreadId: ULong?
        set(value): Unit = set(4, value)
        get(): ULong? = get(4) as ULong?

    open var ownerEventId: ULong?
        set(value): Unit = set(5, value)
        get(): ULong? = get(5) as ULong?

    open var ownerObjectType: PreparedStatementsInstancesOwnerObjectType?
        set(value): Unit = set(6, value)
        get(): PreparedStatementsInstancesOwnerObjectType? = get(6) as PreparedStatementsInstancesOwnerObjectType?

    open var ownerObjectSchema: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var ownerObjectName: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var executionEngine: PreparedStatementsInstancesExecutionEngine?
        set(value): Unit = set(9, value)
        get(): PreparedStatementsInstancesExecutionEngine? = get(9) as PreparedStatementsInstancesExecutionEngine?

    open var timerPrepare: ULong?
        set(value): Unit = set(10, value)
        get(): ULong? = get(10) as ULong?

    open var countReprepare: ULong?
        set(value): Unit = set(11, value)
        get(): ULong? = get(11) as ULong?

    open var countExecute: ULong?
        set(value): Unit = set(12, value)
        get(): ULong? = get(12) as ULong?

    open var sumTimerExecute: ULong?
        set(value): Unit = set(13, value)
        get(): ULong? = get(13) as ULong?

    open var minTimerExecute: ULong?
        set(value): Unit = set(14, value)
        get(): ULong? = get(14) as ULong?

    open var avgTimerExecute: ULong?
        set(value): Unit = set(15, value)
        get(): ULong? = get(15) as ULong?

    open var maxTimerExecute: ULong?
        set(value): Unit = set(16, value)
        get(): ULong? = get(16) as ULong?

    open var sumLockTime: ULong?
        set(value): Unit = set(17, value)
        get(): ULong? = get(17) as ULong?

    open var sumErrors: ULong?
        set(value): Unit = set(18, value)
        get(): ULong? = get(18) as ULong?

    open var sumWarnings: ULong?
        set(value): Unit = set(19, value)
        get(): ULong? = get(19) as ULong?

    open var sumRowsAffected: ULong?
        set(value): Unit = set(20, value)
        get(): ULong? = get(20) as ULong?

    open var sumRowsSent: ULong?
        set(value): Unit = set(21, value)
        get(): ULong? = get(21) as ULong?

    open var sumRowsExamined: ULong?
        set(value): Unit = set(22, value)
        get(): ULong? = get(22) as ULong?

    open var sumCreatedTmpDiskTables: ULong?
        set(value): Unit = set(23, value)
        get(): ULong? = get(23) as ULong?

    open var sumCreatedTmpTables: ULong?
        set(value): Unit = set(24, value)
        get(): ULong? = get(24) as ULong?

    open var sumSelectFullJoin: ULong?
        set(value): Unit = set(25, value)
        get(): ULong? = get(25) as ULong?

    open var sumSelectFullRangeJoin: ULong?
        set(value): Unit = set(26, value)
        get(): ULong? = get(26) as ULong?

    open var sumSelectRange: ULong?
        set(value): Unit = set(27, value)
        get(): ULong? = get(27) as ULong?

    open var sumSelectRangeCheck: ULong?
        set(value): Unit = set(28, value)
        get(): ULong? = get(28) as ULong?

    open var sumSelectScan: ULong?
        set(value): Unit = set(29, value)
        get(): ULong? = get(29) as ULong?

    open var sumSortMergePasses: ULong?
        set(value): Unit = set(30, value)
        get(): ULong? = get(30) as ULong?

    open var sumSortRange: ULong?
        set(value): Unit = set(31, value)
        get(): ULong? = get(31) as ULong?

    open var sumSortRows: ULong?
        set(value): Unit = set(32, value)
        get(): ULong? = get(32) as ULong?

    open var sumSortScan: ULong?
        set(value): Unit = set(33, value)
        get(): ULong? = get(33) as ULong?

    open var sumNoIndexUsed: ULong?
        set(value): Unit = set(34, value)
        get(): ULong? = get(34) as ULong?

    open var sumNoGoodIndexUsed: ULong?
        set(value): Unit = set(35, value)
        get(): ULong? = get(35) as ULong?

    open var sumCpuTime: ULong?
        set(value): Unit = set(36, value)
        get(): ULong? = get(36) as ULong?

    open var maxControlledMemory: ULong?
        set(value): Unit = set(37, value)
        get(): ULong? = get(37) as ULong?

    open var maxTotalMemory: ULong?
        set(value): Unit = set(38, value)
        get(): ULong? = get(38) as ULong?

    open var countSecondary: ULong?
        set(value): Unit = set(39, value)
        get(): ULong? = get(39) as ULong?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<ULong?> = super.key() as Record1<ULong?>

    /**
     * Create a detached, initialised PreparedStatementsInstancesRecord
     */
    constructor(objectInstanceBegin: ULong? = null, statementId: ULong? = null, statementName: String? = null, sqlText: String? = null, ownerThreadId: ULong? = null, ownerEventId: ULong? = null, ownerObjectType: PreparedStatementsInstancesOwnerObjectType? = null, ownerObjectSchema: String? = null, ownerObjectName: String? = null, executionEngine: PreparedStatementsInstancesExecutionEngine? = null, timerPrepare: ULong? = null, countReprepare: ULong? = null, countExecute: ULong? = null, sumTimerExecute: ULong? = null, minTimerExecute: ULong? = null, avgTimerExecute: ULong? = null, maxTimerExecute: ULong? = null, sumLockTime: ULong? = null, sumErrors: ULong? = null, sumWarnings: ULong? = null, sumRowsAffected: ULong? = null, sumRowsSent: ULong? = null, sumRowsExamined: ULong? = null, sumCreatedTmpDiskTables: ULong? = null, sumCreatedTmpTables: ULong? = null, sumSelectFullJoin: ULong? = null, sumSelectFullRangeJoin: ULong? = null, sumSelectRange: ULong? = null, sumSelectRangeCheck: ULong? = null, sumSelectScan: ULong? = null, sumSortMergePasses: ULong? = null, sumSortRange: ULong? = null, sumSortRows: ULong? = null, sumSortScan: ULong? = null, sumNoIndexUsed: ULong? = null, sumNoGoodIndexUsed: ULong? = null, sumCpuTime: ULong? = null, maxControlledMemory: ULong? = null, maxTotalMemory: ULong? = null, countSecondary: ULong? = null): this() {
        this.objectInstanceBegin = objectInstanceBegin
        this.statementId = statementId
        this.statementName = statementName
        this.sqlText = sqlText
        this.ownerThreadId = ownerThreadId
        this.ownerEventId = ownerEventId
        this.ownerObjectType = ownerObjectType
        this.ownerObjectSchema = ownerObjectSchema
        this.ownerObjectName = ownerObjectName
        this.executionEngine = executionEngine
        this.timerPrepare = timerPrepare
        this.countReprepare = countReprepare
        this.countExecute = countExecute
        this.sumTimerExecute = sumTimerExecute
        this.minTimerExecute = minTimerExecute
        this.avgTimerExecute = avgTimerExecute
        this.maxTimerExecute = maxTimerExecute
        this.sumLockTime = sumLockTime
        this.sumErrors = sumErrors
        this.sumWarnings = sumWarnings
        this.sumRowsAffected = sumRowsAffected
        this.sumRowsSent = sumRowsSent
        this.sumRowsExamined = sumRowsExamined
        this.sumCreatedTmpDiskTables = sumCreatedTmpDiskTables
        this.sumCreatedTmpTables = sumCreatedTmpTables
        this.sumSelectFullJoin = sumSelectFullJoin
        this.sumSelectFullRangeJoin = sumSelectFullRangeJoin
        this.sumSelectRange = sumSelectRange
        this.sumSelectRangeCheck = sumSelectRangeCheck
        this.sumSelectScan = sumSelectScan
        this.sumSortMergePasses = sumSortMergePasses
        this.sumSortRange = sumSortRange
        this.sumSortRows = sumSortRows
        this.sumSortScan = sumSortScan
        this.sumNoIndexUsed = sumNoIndexUsed
        this.sumNoGoodIndexUsed = sumNoGoodIndexUsed
        this.sumCpuTime = sumCpuTime
        this.maxControlledMemory = maxControlledMemory
        this.maxTotalMemory = maxTotalMemory
        this.countSecondary = countSecondary
        resetChangedOnNotNull()
    }
}
