/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.Files

import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class FilesRecord() : TableRecordImpl<FilesRecord>(Files.FILES) {

    open var fileId: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var fileName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var fileType: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var tablespaceName: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var tableCatalog: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var tableSchema: ByteArray?
        set(value): Unit = set(5, value)
        get(): ByteArray? = get(5) as ByteArray?

    open var tableName: ByteArray?
        set(value): Unit = set(6, value)
        get(): ByteArray? = get(6) as ByteArray?

    open var logfileGroupName: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var logfileGroupNumber: Long?
        set(value): Unit = set(8, value)
        get(): Long? = get(8) as Long?

    open var engine: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var fulltextKeys: ByteArray?
        set(value): Unit = set(10, value)
        get(): ByteArray? = get(10) as ByteArray?

    open var deletedRows: ByteArray?
        set(value): Unit = set(11, value)
        get(): ByteArray? = get(11) as ByteArray?

    open var updateCount: ByteArray?
        set(value): Unit = set(12, value)
        get(): ByteArray? = get(12) as ByteArray?

    open var freeExtents: Long?
        set(value): Unit = set(13, value)
        get(): Long? = get(13) as Long?

    open var totalExtents: Long?
        set(value): Unit = set(14, value)
        get(): Long? = get(14) as Long?

    open var extentSize: Long?
        set(value): Unit = set(15, value)
        get(): Long? = get(15) as Long?

    open var initialSize: Long?
        set(value): Unit = set(16, value)
        get(): Long? = get(16) as Long?

    open var maximumSize: Long?
        set(value): Unit = set(17, value)
        get(): Long? = get(17) as Long?

    open var autoextendSize: Long?
        set(value): Unit = set(18, value)
        get(): Long? = get(18) as Long?

    open var creationTime: ByteArray?
        set(value): Unit = set(19, value)
        get(): ByteArray? = get(19) as ByteArray?

    open var lastUpdateTime: ByteArray?
        set(value): Unit = set(20, value)
        get(): ByteArray? = get(20) as ByteArray?

    open var lastAccessTime: ByteArray?
        set(value): Unit = set(21, value)
        get(): ByteArray? = get(21) as ByteArray?

    open var recoverTime: ByteArray?
        set(value): Unit = set(22, value)
        get(): ByteArray? = get(22) as ByteArray?

    open var transactionCounter: ByteArray?
        set(value): Unit = set(23, value)
        get(): ByteArray? = get(23) as ByteArray?

    open var version: Long?
        set(value): Unit = set(24, value)
        get(): Long? = get(24) as Long?

    open var rowFormat: String?
        set(value): Unit = set(25, value)
        get(): String? = get(25) as String?

    open var tableRows: ByteArray?
        set(value): Unit = set(26, value)
        get(): ByteArray? = get(26) as ByteArray?

    open var avgRowLength: ByteArray?
        set(value): Unit = set(27, value)
        get(): ByteArray? = get(27) as ByteArray?

    open var dataLength: ByteArray?
        set(value): Unit = set(28, value)
        get(): ByteArray? = get(28) as ByteArray?

    open var maxDataLength: ByteArray?
        set(value): Unit = set(29, value)
        get(): ByteArray? = get(29) as ByteArray?

    open var indexLength: ByteArray?
        set(value): Unit = set(30, value)
        get(): ByteArray? = get(30) as ByteArray?

    open var dataFree: Long?
        set(value): Unit = set(31, value)
        get(): Long? = get(31) as Long?

    open var createTime: ByteArray?
        set(value): Unit = set(32, value)
        get(): ByteArray? = get(32) as ByteArray?

    open var updateTime: ByteArray?
        set(value): Unit = set(33, value)
        get(): ByteArray? = get(33) as ByteArray?

    open var checkTime: ByteArray?
        set(value): Unit = set(34, value)
        get(): ByteArray? = get(34) as ByteArray?

    open var checksum: ByteArray?
        set(value): Unit = set(35, value)
        get(): ByteArray? = get(35) as ByteArray?

    open var status: String?
        set(value): Unit = set(36, value)
        get(): String? = get(36) as String?

    open var extra: String?
        set(value): Unit = set(37, value)
        get(): String? = get(37) as String?

    /**
     * Create a detached, initialised FilesRecord
     */
    constructor(fileId: Long? = null, fileName: String? = null, fileType: String? = null, tablespaceName: String? = null, tableCatalog: String? = null, tableSchema: ByteArray? = null, tableName: ByteArray? = null, logfileGroupName: String? = null, logfileGroupNumber: Long? = null, engine: String? = null, fulltextKeys: ByteArray? = null, deletedRows: ByteArray? = null, updateCount: ByteArray? = null, freeExtents: Long? = null, totalExtents: Long? = null, extentSize: Long? = null, initialSize: Long? = null, maximumSize: Long? = null, autoextendSize: Long? = null, creationTime: ByteArray? = null, lastUpdateTime: ByteArray? = null, lastAccessTime: ByteArray? = null, recoverTime: ByteArray? = null, transactionCounter: ByteArray? = null, version: Long? = null, rowFormat: String? = null, tableRows: ByteArray? = null, avgRowLength: ByteArray? = null, dataLength: ByteArray? = null, maxDataLength: ByteArray? = null, indexLength: ByteArray? = null, dataFree: Long? = null, createTime: ByteArray? = null, updateTime: ByteArray? = null, checkTime: ByteArray? = null, checksum: ByteArray? = null, status: String? = null, extra: String? = null): this() {
        this.fileId = fileId
        this.fileName = fileName
        this.fileType = fileType
        this.tablespaceName = tablespaceName
        this.tableCatalog = tableCatalog
        this.tableSchema = tableSchema
        this.tableName = tableName
        this.logfileGroupName = logfileGroupName
        this.logfileGroupNumber = logfileGroupNumber
        this.engine = engine
        this.fulltextKeys = fulltextKeys
        this.deletedRows = deletedRows
        this.updateCount = updateCount
        this.freeExtents = freeExtents
        this.totalExtents = totalExtents
        this.extentSize = extentSize
        this.initialSize = initialSize
        this.maximumSize = maximumSize
        this.autoextendSize = autoextendSize
        this.creationTime = creationTime
        this.lastUpdateTime = lastUpdateTime
        this.lastAccessTime = lastAccessTime
        this.recoverTime = recoverTime
        this.transactionCounter = transactionCounter
        this.version = version
        this.rowFormat = rowFormat
        this.tableRows = tableRows
        this.avgRowLength = avgRowLength
        this.dataLength = dataLength
        this.maxDataLength = maxDataLength
        this.indexLength = indexLength
        this.dataFree = dataFree
        this.createTime = createTime
        this.updateTime = updateTime
        this.checkTime = checkTime
        this.checksum = checksum
        this.status = status
        this.extra = extra
        resetChangedOnNotNull()
    }
}
