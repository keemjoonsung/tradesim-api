/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.InnodbCmpReset

import org.jooq.Field
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class InnodbCmpResetRecord() : TableRecordImpl<InnodbCmpResetRecord>(InnodbCmpReset.INNODB_CMP_RESET), Record6<Int?, Int?, Int?, Int?, Int?, Int?> {

    open var pageSize: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var compressOps: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var compressOpsOk: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var compressTime: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var uncompressOps: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var uncompressTime: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<Int?, Int?, Int?, Int?, Int?, Int?> = super.fieldsRow() as Row6<Int?, Int?, Int?, Int?, Int?, Int?>
    override fun valuesRow(): Row6<Int?, Int?, Int?, Int?, Int?, Int?> = super.valuesRow() as Row6<Int?, Int?, Int?, Int?, Int?, Int?>
    override fun field1(): Field<Int?> = InnodbCmpReset.INNODB_CMP_RESET.PAGE_SIZE
    override fun field2(): Field<Int?> = InnodbCmpReset.INNODB_CMP_RESET.COMPRESS_OPS
    override fun field3(): Field<Int?> = InnodbCmpReset.INNODB_CMP_RESET.COMPRESS_OPS_OK
    override fun field4(): Field<Int?> = InnodbCmpReset.INNODB_CMP_RESET.COMPRESS_TIME
    override fun field5(): Field<Int?> = InnodbCmpReset.INNODB_CMP_RESET.UNCOMPRESS_OPS
    override fun field6(): Field<Int?> = InnodbCmpReset.INNODB_CMP_RESET.UNCOMPRESS_TIME
    override fun component1(): Int? = pageSize
    override fun component2(): Int? = compressOps
    override fun component3(): Int? = compressOpsOk
    override fun component4(): Int? = compressTime
    override fun component5(): Int? = uncompressOps
    override fun component6(): Int? = uncompressTime
    override fun value1(): Int? = pageSize
    override fun value2(): Int? = compressOps
    override fun value3(): Int? = compressOpsOk
    override fun value4(): Int? = compressTime
    override fun value5(): Int? = uncompressOps
    override fun value6(): Int? = uncompressTime

    override fun value1(value: Int?): InnodbCmpResetRecord {
        set(0, value)
        return this
    }

    override fun value2(value: Int?): InnodbCmpResetRecord {
        set(1, value)
        return this
    }

    override fun value3(value: Int?): InnodbCmpResetRecord {
        set(2, value)
        return this
    }

    override fun value4(value: Int?): InnodbCmpResetRecord {
        set(3, value)
        return this
    }

    override fun value5(value: Int?): InnodbCmpResetRecord {
        set(4, value)
        return this
    }

    override fun value6(value: Int?): InnodbCmpResetRecord {
        set(5, value)
        return this
    }

    override fun values(value1: Int?, value2: Int?, value3: Int?, value4: Int?, value5: Int?, value6: Int?): InnodbCmpResetRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised InnodbCmpResetRecord
     */
    constructor(pageSize: Int? = null, compressOps: Int? = null, compressOpsOk: Int? = null, compressTime: Int? = null, uncompressOps: Int? = null, uncompressTime: Int? = null): this() {
        this.pageSize = pageSize
        this.compressOps = compressOps
        this.compressOpsOk = compressOpsOk
        this.compressTime = compressTime
        this.uncompressOps = uncompressOps
        this.uncompressTime = uncompressTime
        resetChangedOnNotNull()
    }
}
