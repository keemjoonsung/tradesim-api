/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.performance_schema.enums.PerformanceTimersTimerName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.PerformanceTimers

import org.jooq.Field
import org.jooq.Record4
import org.jooq.Row4
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PerformanceTimersRecord() : TableRecordImpl<PerformanceTimersRecord>(PerformanceTimers.PERFORMANCE_TIMERS), Record4<PerformanceTimersTimerName?, Long?, Long?, Long?> {

    open var timerName: PerformanceTimersTimerName?
        set(value): Unit = set(0, value)
        get(): PerformanceTimersTimerName? = get(0) as PerformanceTimersTimerName?

    open var timerFrequency: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var timerResolution: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var timerOverhead: Long?
        set(value): Unit = set(3, value)
        get(): Long? = get(3) as Long?

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row4<PerformanceTimersTimerName?, Long?, Long?, Long?> = super.fieldsRow() as Row4<PerformanceTimersTimerName?, Long?, Long?, Long?>
    override fun valuesRow(): Row4<PerformanceTimersTimerName?, Long?, Long?, Long?> = super.valuesRow() as Row4<PerformanceTimersTimerName?, Long?, Long?, Long?>
    override fun field1(): Field<PerformanceTimersTimerName?> = PerformanceTimers.PERFORMANCE_TIMERS.TIMER_NAME
    override fun field2(): Field<Long?> = PerformanceTimers.PERFORMANCE_TIMERS.TIMER_FREQUENCY
    override fun field3(): Field<Long?> = PerformanceTimers.PERFORMANCE_TIMERS.TIMER_RESOLUTION
    override fun field4(): Field<Long?> = PerformanceTimers.PERFORMANCE_TIMERS.TIMER_OVERHEAD
    override fun component1(): PerformanceTimersTimerName? = timerName
    override fun component2(): Long? = timerFrequency
    override fun component3(): Long? = timerResolution
    override fun component4(): Long? = timerOverhead
    override fun value1(): PerformanceTimersTimerName? = timerName
    override fun value2(): Long? = timerFrequency
    override fun value3(): Long? = timerResolution
    override fun value4(): Long? = timerOverhead

    override fun value1(value: PerformanceTimersTimerName?): PerformanceTimersRecord {
        set(0, value)
        return this
    }

    override fun value2(value: Long?): PerformanceTimersRecord {
        set(1, value)
        return this
    }

    override fun value3(value: Long?): PerformanceTimersRecord {
        set(2, value)
        return this
    }

    override fun value4(value: Long?): PerformanceTimersRecord {
        set(3, value)
        return this
    }

    override fun values(value1: PerformanceTimersTimerName?, value2: Long?, value3: Long?, value4: Long?): PerformanceTimersRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        return this
    }

    /**
     * Create a detached, initialised PerformanceTimersRecord
     */
    constructor(timerName: PerformanceTimersTimerName? = null, timerFrequency: Long? = null, timerResolution: Long? = null, timerOverhead: Long? = null): this() {
        this.timerName = timerName
        this.timerFrequency = timerFrequency
        this.timerResolution = timerResolution
        this.timerOverhead = timerOverhead
        resetChangedOnNotNull()
    }
}
