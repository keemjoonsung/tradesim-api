/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.SessionAccountConnectAttrs

import org.jooq.Field
import org.jooq.Record2
import org.jooq.Record4
import org.jooq.Row4
import org.jooq.impl.UpdatableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class SessionAccountConnectAttrsRecord() : UpdatableRecordImpl<SessionAccountConnectAttrsRecord>(SessionAccountConnectAttrs.SESSION_ACCOUNT_CONNECT_ATTRS), Record4<ULong?, String?, String?, Int?> {

    open var processlistId: ULong?
        set(value): Unit = set(0, value)
        get(): ULong? = get(0) as ULong?

    open var attrName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var attrValue: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var ordinalPosition: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record2<ULong?, String?> = super.key() as Record2<ULong?, String?>

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row4<ULong?, String?, String?, Int?> = super.fieldsRow() as Row4<ULong?, String?, String?, Int?>
    override fun valuesRow(): Row4<ULong?, String?, String?, Int?> = super.valuesRow() as Row4<ULong?, String?, String?, Int?>
    override fun field1(): Field<ULong?> = SessionAccountConnectAttrs.SESSION_ACCOUNT_CONNECT_ATTRS.PROCESSLIST_ID
    override fun field2(): Field<String?> = SessionAccountConnectAttrs.SESSION_ACCOUNT_CONNECT_ATTRS.ATTR_NAME
    override fun field3(): Field<String?> = SessionAccountConnectAttrs.SESSION_ACCOUNT_CONNECT_ATTRS.ATTR_VALUE
    override fun field4(): Field<Int?> = SessionAccountConnectAttrs.SESSION_ACCOUNT_CONNECT_ATTRS.ORDINAL_POSITION
    override fun component1(): ULong? = processlistId
    override fun component2(): String? = attrName
    override fun component3(): String? = attrValue
    override fun component4(): Int? = ordinalPosition
    override fun value1(): ULong? = processlistId
    override fun value2(): String? = attrName
    override fun value3(): String? = attrValue
    override fun value4(): Int? = ordinalPosition

    override fun value1(value: ULong?): SessionAccountConnectAttrsRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): SessionAccountConnectAttrsRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): SessionAccountConnectAttrsRecord {
        set(2, value)
        return this
    }

    override fun value4(value: Int?): SessionAccountConnectAttrsRecord {
        set(3, value)
        return this
    }

    override fun values(value1: ULong?, value2: String?, value3: String?, value4: Int?): SessionAccountConnectAttrsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        return this
    }

    /**
     * Create a detached, initialised SessionAccountConnectAttrsRecord
     */
    constructor(processlistId: ULong? = null, attrName: String? = null, attrValue: String? = null, ordinalPosition: Int? = null): this() {
        this.processlistId = processlistId
        this.attrName = attrName
        this.attrValue = attrValue
        this.ordinalPosition = ordinalPosition
        resetChangedOnNotNull()
    }
}
