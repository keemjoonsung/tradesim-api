/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.information_schema.enums.ParametersRoutineType
import com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.Parameters

import org.jooq.Field
import org.jooq.Record16
import org.jooq.Row16
import org.jooq.impl.TableRecordImpl
import org.jooq.types.UInteger
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ParametersRecord() : TableRecordImpl<ParametersRecord>(Parameters.PARAMETERS), Record16<String?, String?, String?, ULong?, String?, String?, String?, Long?, Long?, UInteger?, Long?, UInteger?, String?, String?, String?, ParametersRoutineType?> {

    open var specificCatalog: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var specificSchema: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var specificName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var ordinalPosition: ULong?
        set(value): Unit = set(3, value)
        get(): ULong? = get(3) as ULong?

    open var parameterMode: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var parameterName: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var dataType: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var characterMaximumLength: Long?
        set(value): Unit = set(7, value)
        get(): Long? = get(7) as Long?

    open var characterOctetLength: Long?
        set(value): Unit = set(8, value)
        get(): Long? = get(8) as Long?

    open var numericPrecision: UInteger?
        set(value): Unit = set(9, value)
        get(): UInteger? = get(9) as UInteger?

    open var numericScale: Long?
        set(value): Unit = set(10, value)
        get(): Long? = get(10) as Long?

    open var datetimePrecision: UInteger?
        set(value): Unit = set(11, value)
        get(): UInteger? = get(11) as UInteger?

    open var characterSetName: String?
        set(value): Unit = set(12, value)
        get(): String? = get(12) as String?

    open var collationName: String?
        set(value): Unit = set(13, value)
        get(): String? = get(13) as String?

    open var dtdIdentifier: String?
        set(value): Unit = set(14, value)
        get(): String? = get(14) as String?

    open var routineType: ParametersRoutineType?
        set(value): Unit = set(15, value)
        get(): ParametersRoutineType? = get(15) as ParametersRoutineType?

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row16<String?, String?, String?, ULong?, String?, String?, String?, Long?, Long?, UInteger?, Long?, UInteger?, String?, String?, String?, ParametersRoutineType?> = super.fieldsRow() as Row16<String?, String?, String?, ULong?, String?, String?, String?, Long?, Long?, UInteger?, Long?, UInteger?, String?, String?, String?, ParametersRoutineType?>
    override fun valuesRow(): Row16<String?, String?, String?, ULong?, String?, String?, String?, Long?, Long?, UInteger?, Long?, UInteger?, String?, String?, String?, ParametersRoutineType?> = super.valuesRow() as Row16<String?, String?, String?, ULong?, String?, String?, String?, Long?, Long?, UInteger?, Long?, UInteger?, String?, String?, String?, ParametersRoutineType?>
    override fun field1(): Field<String?> = Parameters.PARAMETERS.SPECIFIC_CATALOG
    override fun field2(): Field<String?> = Parameters.PARAMETERS.SPECIFIC_SCHEMA
    override fun field3(): Field<String?> = Parameters.PARAMETERS.SPECIFIC_NAME
    override fun field4(): Field<ULong?> = Parameters.PARAMETERS.ORDINAL_POSITION
    override fun field5(): Field<String?> = Parameters.PARAMETERS.PARAMETER_MODE
    override fun field6(): Field<String?> = Parameters.PARAMETERS.PARAMETER_NAME
    override fun field7(): Field<String?> = Parameters.PARAMETERS.DATA_TYPE
    override fun field8(): Field<Long?> = Parameters.PARAMETERS.CHARACTER_MAXIMUM_LENGTH
    override fun field9(): Field<Long?> = Parameters.PARAMETERS.CHARACTER_OCTET_LENGTH
    override fun field10(): Field<UInteger?> = Parameters.PARAMETERS.NUMERIC_PRECISION
    override fun field11(): Field<Long?> = Parameters.PARAMETERS.NUMERIC_SCALE
    override fun field12(): Field<UInteger?> = Parameters.PARAMETERS.DATETIME_PRECISION
    override fun field13(): Field<String?> = Parameters.PARAMETERS.CHARACTER_SET_NAME
    override fun field14(): Field<String?> = Parameters.PARAMETERS.COLLATION_NAME
    override fun field15(): Field<String?> = Parameters.PARAMETERS.DTD_IDENTIFIER
    override fun field16(): Field<ParametersRoutineType?> = Parameters.PARAMETERS.ROUTINE_TYPE
    override fun component1(): String? = specificCatalog
    override fun component2(): String? = specificSchema
    override fun component3(): String? = specificName
    override fun component4(): ULong? = ordinalPosition
    override fun component5(): String? = parameterMode
    override fun component6(): String? = parameterName
    override fun component7(): String? = dataType
    override fun component8(): Long? = characterMaximumLength
    override fun component9(): Long? = characterOctetLength
    override fun component10(): UInteger? = numericPrecision
    override fun component11(): Long? = numericScale
    override fun component12(): UInteger? = datetimePrecision
    override fun component13(): String? = characterSetName
    override fun component14(): String? = collationName
    override fun component15(): String? = dtdIdentifier
    override fun component16(): ParametersRoutineType? = routineType
    override fun value1(): String? = specificCatalog
    override fun value2(): String? = specificSchema
    override fun value3(): String? = specificName
    override fun value4(): ULong? = ordinalPosition
    override fun value5(): String? = parameterMode
    override fun value6(): String? = parameterName
    override fun value7(): String? = dataType
    override fun value8(): Long? = characterMaximumLength
    override fun value9(): Long? = characterOctetLength
    override fun value10(): UInteger? = numericPrecision
    override fun value11(): Long? = numericScale
    override fun value12(): UInteger? = datetimePrecision
    override fun value13(): String? = characterSetName
    override fun value14(): String? = collationName
    override fun value15(): String? = dtdIdentifier
    override fun value16(): ParametersRoutineType? = routineType

    override fun value1(value: String?): ParametersRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): ParametersRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): ParametersRecord {
        set(2, value)
        return this
    }

    override fun value4(value: ULong?): ParametersRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): ParametersRecord {
        set(4, value)
        return this
    }

    override fun value6(value: String?): ParametersRecord {
        set(5, value)
        return this
    }

    override fun value7(value: String?): ParametersRecord {
        set(6, value)
        return this
    }

    override fun value8(value: Long?): ParametersRecord {
        set(7, value)
        return this
    }

    override fun value9(value: Long?): ParametersRecord {
        set(8, value)
        return this
    }

    override fun value10(value: UInteger?): ParametersRecord {
        set(9, value)
        return this
    }

    override fun value11(value: Long?): ParametersRecord {
        set(10, value)
        return this
    }

    override fun value12(value: UInteger?): ParametersRecord {
        set(11, value)
        return this
    }

    override fun value13(value: String?): ParametersRecord {
        set(12, value)
        return this
    }

    override fun value14(value: String?): ParametersRecord {
        set(13, value)
        return this
    }

    override fun value15(value: String?): ParametersRecord {
        set(14, value)
        return this
    }

    override fun value16(value: ParametersRoutineType?): ParametersRecord {
        set(15, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: ULong?, value5: String?, value6: String?, value7: String?, value8: Long?, value9: Long?, value10: UInteger?, value11: Long?, value12: UInteger?, value13: String?, value14: String?, value15: String?, value16: ParametersRoutineType?): ParametersRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        this.value14(value14)
        this.value15(value15)
        this.value16(value16)
        return this
    }

    /**
     * Create a detached, initialised ParametersRecord
     */
    constructor(specificCatalog: String? = null, specificSchema: String? = null, specificName: String? = null, ordinalPosition: ULong? = null, parameterMode: String? = null, parameterName: String? = null, dataType: String? = null, characterMaximumLength: Long? = null, characterOctetLength: Long? = null, numericPrecision: UInteger? = null, numericScale: Long? = null, datetimePrecision: UInteger? = null, characterSetName: String? = null, collationName: String? = null, dtdIdentifier: String? = null, routineType: ParametersRoutineType? = null): this() {
        this.specificCatalog = specificCatalog
        this.specificSchema = specificSchema
        this.specificName = specificName
        this.ordinalPosition = ordinalPosition
        this.parameterMode = parameterMode
        this.parameterName = parameterName
        this.dataType = dataType
        this.characterMaximumLength = characterMaximumLength
        this.characterOctetLength = characterOctetLength
        this.numericPrecision = numericPrecision
        this.numericScale = numericScale
        this.datetimePrecision = datetimePrecision
        this.characterSetName = characterSetName
        this.collationName = collationName
        this.dtdIdentifier = dtdIdentifier
        this.routineType = routineType
        resetChangedOnNotNull()
    }
}
