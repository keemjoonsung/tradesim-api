/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.ReplicationAsynchronousConnectionFailover

import org.jooq.Field
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.TableRecordImpl
import org.jooq.types.UInteger


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ReplicationAsynchronousConnectionFailoverRecord() : TableRecordImpl<ReplicationAsynchronousConnectionFailoverRecord>(ReplicationAsynchronousConnectionFailover.REPLICATION_ASYNCHRONOUS_CONNECTION_FAILOVER), Record6<String?, String?, Int?, String?, UInteger?, String?> {

    open var channelName: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var host: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var port: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var networkNamespace: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var weight: UInteger?
        set(value): Unit = set(4, value)
        get(): UInteger? = get(4) as UInteger?

    open var managedName: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<String?, String?, Int?, String?, UInteger?, String?> = super.fieldsRow() as Row6<String?, String?, Int?, String?, UInteger?, String?>
    override fun valuesRow(): Row6<String?, String?, Int?, String?, UInteger?, String?> = super.valuesRow() as Row6<String?, String?, Int?, String?, UInteger?, String?>
    override fun field1(): Field<String?> = ReplicationAsynchronousConnectionFailover.REPLICATION_ASYNCHRONOUS_CONNECTION_FAILOVER.CHANNEL_NAME
    override fun field2(): Field<String?> = ReplicationAsynchronousConnectionFailover.REPLICATION_ASYNCHRONOUS_CONNECTION_FAILOVER.HOST
    override fun field3(): Field<Int?> = ReplicationAsynchronousConnectionFailover.REPLICATION_ASYNCHRONOUS_CONNECTION_FAILOVER.PORT
    override fun field4(): Field<String?> = ReplicationAsynchronousConnectionFailover.REPLICATION_ASYNCHRONOUS_CONNECTION_FAILOVER.NETWORK_NAMESPACE
    override fun field5(): Field<UInteger?> = ReplicationAsynchronousConnectionFailover.REPLICATION_ASYNCHRONOUS_CONNECTION_FAILOVER.WEIGHT
    override fun field6(): Field<String?> = ReplicationAsynchronousConnectionFailover.REPLICATION_ASYNCHRONOUS_CONNECTION_FAILOVER.MANAGED_NAME
    override fun component1(): String? = channelName
    override fun component2(): String? = host
    override fun component3(): Int? = port
    override fun component4(): String? = networkNamespace
    override fun component5(): UInteger? = weight
    override fun component6(): String? = managedName
    override fun value1(): String? = channelName
    override fun value2(): String? = host
    override fun value3(): Int? = port
    override fun value4(): String? = networkNamespace
    override fun value5(): UInteger? = weight
    override fun value6(): String? = managedName

    override fun value1(value: String?): ReplicationAsynchronousConnectionFailoverRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): ReplicationAsynchronousConnectionFailoverRecord {
        set(1, value)
        return this
    }

    override fun value3(value: Int?): ReplicationAsynchronousConnectionFailoverRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): ReplicationAsynchronousConnectionFailoverRecord {
        set(3, value)
        return this
    }

    override fun value5(value: UInteger?): ReplicationAsynchronousConnectionFailoverRecord {
        set(4, value)
        return this
    }

    override fun value6(value: String?): ReplicationAsynchronousConnectionFailoverRecord {
        set(5, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: Int?, value4: String?, value5: UInteger?, value6: String?): ReplicationAsynchronousConnectionFailoverRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised
     * ReplicationAsynchronousConnectionFailoverRecord
     */
    constructor(channelName: String? = null, host: String? = null, port: Int? = null, networkNamespace: String? = null, weight: UInteger? = null, managedName: String? = null): this() {
        this.channelName = channelName
        this.host = host
        this.port = port
        this.networkNamespace = networkNamespace
        this.weight = weight
        this.managedName = managedName
        resetChangedOnNotNull()
    }
}
