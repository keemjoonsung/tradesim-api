/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.mysql.tables.references


import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.ColumnsPriv
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.Component
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.Db
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.DefaultRoles
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.EngineCost
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.Func
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.GeneralLog
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.GlobalGrants
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.GtidExecuted
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.HelpCategory
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.HelpKeyword
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.HelpRelation
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.HelpTopic
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.InnodbIndexStats
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.InnodbTableStats
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.NdbBinlogIndex
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.PasswordHistory
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.Plugin
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.ProcsPriv
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.ProxiesPriv
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.ReplicationAsynchronousConnectionFailover
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.ReplicationAsynchronousConnectionFailoverManaged
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.ReplicationGroupConfigurationVersion
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.ReplicationGroupMemberActions
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.RoleEdges
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.ServerCost
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.Servers
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.SlaveMasterInfo
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.SlaveRelayLogInfo
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.SlaveWorkerInfo
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.SlowLog
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.TablesPriv
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.TimeZone
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.TimeZoneLeapSecond
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.TimeZoneName
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.TimeZoneTransition
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.TimeZoneTransitionType
import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.User



/**
 * Column privileges
 */
val COLUMNS_PRIV: ColumnsPriv = ColumnsPriv.COLUMNS_PRIV

/**
 * Components
 */
val COMPONENT: Component = Component.COMPONENT

/**
 * Database privileges
 */
val DB: Db = Db.DB

/**
 * Default roles
 */
val DEFAULT_ROLES: DefaultRoles = DefaultRoles.DEFAULT_ROLES

/**
 * The table <code>mysql.engine_cost</code>.
 */
val ENGINE_COST: EngineCost = EngineCost.ENGINE_COST

/**
 * User defined functions
 */
val FUNC: Func = Func.FUNC

/**
 * General log
 */
val GENERAL_LOG: GeneralLog = GeneralLog.GENERAL_LOG

/**
 * Extended global grants
 */
val GLOBAL_GRANTS: GlobalGrants = GlobalGrants.GLOBAL_GRANTS

/**
 * The table <code>mysql.gtid_executed</code>.
 */
val GTID_EXECUTED: GtidExecuted = GtidExecuted.GTID_EXECUTED

/**
 * help categories
 */
val HELP_CATEGORY: HelpCategory = HelpCategory.HELP_CATEGORY

/**
 * help keywords
 */
val HELP_KEYWORD: HelpKeyword = HelpKeyword.HELP_KEYWORD

/**
 * keyword-topic relation
 */
val HELP_RELATION: HelpRelation = HelpRelation.HELP_RELATION

/**
 * help topics
 */
val HELP_TOPIC: HelpTopic = HelpTopic.HELP_TOPIC

/**
 * The table <code>mysql.innodb_index_stats</code>.
 */
val INNODB_INDEX_STATS: InnodbIndexStats = InnodbIndexStats.INNODB_INDEX_STATS

/**
 * The table <code>mysql.innodb_table_stats</code>.
 */
val INNODB_TABLE_STATS: InnodbTableStats = InnodbTableStats.INNODB_TABLE_STATS

/**
 * The table <code>mysql.ndb_binlog_index</code>.
 */
val NDB_BINLOG_INDEX: NdbBinlogIndex = NdbBinlogIndex.NDB_BINLOG_INDEX

/**
 * Password history for user accounts
 */
val PASSWORD_HISTORY: PasswordHistory = PasswordHistory.PASSWORD_HISTORY

/**
 * MySQL plugins
 */
val PLUGIN: Plugin = Plugin.PLUGIN

/**
 * Procedure privileges
 */
val PROCS_PRIV: ProcsPriv = ProcsPriv.PROCS_PRIV

/**
 * User proxy privileges
 */
val PROXIES_PRIV: ProxiesPriv = ProxiesPriv.PROXIES_PRIV

/**
 * The source configuration details
 */
val REPLICATION_ASYNCHRONOUS_CONNECTION_FAILOVER: ReplicationAsynchronousConnectionFailover = ReplicationAsynchronousConnectionFailover.REPLICATION_ASYNCHRONOUS_CONNECTION_FAILOVER

/**
 * The managed source configuration details
 */
val REPLICATION_ASYNCHRONOUS_CONNECTION_FAILOVER_MANAGED: ReplicationAsynchronousConnectionFailoverManaged = ReplicationAsynchronousConnectionFailoverManaged.REPLICATION_ASYNCHRONOUS_CONNECTION_FAILOVER_MANAGED

/**
 * The group configuration version.
 */
val REPLICATION_GROUP_CONFIGURATION_VERSION: ReplicationGroupConfigurationVersion = ReplicationGroupConfigurationVersion.REPLICATION_GROUP_CONFIGURATION_VERSION

/**
 * The member actions configuration.
 */
val REPLICATION_GROUP_MEMBER_ACTIONS: ReplicationGroupMemberActions = ReplicationGroupMemberActions.REPLICATION_GROUP_MEMBER_ACTIONS

/**
 * Role hierarchy and role grants
 */
val ROLE_EDGES: RoleEdges = RoleEdges.ROLE_EDGES

/**
 * The table <code>mysql.server_cost</code>.
 */
val SERVER_COST: ServerCost = ServerCost.SERVER_COST

/**
 * MySQL Foreign Servers table
 */
val SERVERS: Servers = Servers.SERVERS

/**
 * Master Information
 */
val SLAVE_MASTER_INFO: SlaveMasterInfo = SlaveMasterInfo.SLAVE_MASTER_INFO

/**
 * Relay Log Information
 */
val SLAVE_RELAY_LOG_INFO: SlaveRelayLogInfo = SlaveRelayLogInfo.SLAVE_RELAY_LOG_INFO

/**
 * Worker Information
 */
val SLAVE_WORKER_INFO: SlaveWorkerInfo = SlaveWorkerInfo.SLAVE_WORKER_INFO

/**
 * Slow log
 */
val SLOW_LOG: SlowLog = SlowLog.SLOW_LOG

/**
 * Table privileges
 */
val TABLES_PRIV: TablesPriv = TablesPriv.TABLES_PRIV

/**
 * Time zones
 */
val TIME_ZONE: TimeZone = TimeZone.TIME_ZONE

/**
 * Leap seconds information for time zones
 */
val TIME_ZONE_LEAP_SECOND: TimeZoneLeapSecond = TimeZoneLeapSecond.TIME_ZONE_LEAP_SECOND

/**
 * Time zone names
 */
val TIME_ZONE_NAME: TimeZoneName = TimeZoneName.TIME_ZONE_NAME

/**
 * Time zone transitions
 */
val TIME_ZONE_TRANSITION: TimeZoneTransition = TimeZoneTransition.TIME_ZONE_TRANSITION

/**
 * Time zone transition types
 */
val TIME_ZONE_TRANSITION_TYPE: TimeZoneTransitionType = TimeZoneTransitionType.TIME_ZONE_TRANSITION_TYPE

/**
 * Users and global privileges
 */
val USER: User = User.USER
