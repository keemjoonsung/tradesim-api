/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.StGeometryColumns

import org.jooq.Field
import org.jooq.Record7
import org.jooq.Row7
import org.jooq.impl.TableRecordImpl
import org.jooq.types.UInteger


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class StGeometryColumnsRecord() : TableRecordImpl<StGeometryColumnsRecord>(StGeometryColumns.ST_GEOMETRY_COLUMNS), Record7<String?, String?, String?, String?, String?, UInteger?, String?> {

    open var tableCatalog: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var tableSchema: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var tableName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var columnName: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var srsName: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var srsId: UInteger?
        set(value): Unit = set(5, value)
        get(): UInteger? = get(5) as UInteger?

    open var geometryTypeName: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row7<String?, String?, String?, String?, String?, UInteger?, String?> = super.fieldsRow() as Row7<String?, String?, String?, String?, String?, UInteger?, String?>
    override fun valuesRow(): Row7<String?, String?, String?, String?, String?, UInteger?, String?> = super.valuesRow() as Row7<String?, String?, String?, String?, String?, UInteger?, String?>
    override fun field1(): Field<String?> = StGeometryColumns.ST_GEOMETRY_COLUMNS.TABLE_CATALOG
    override fun field2(): Field<String?> = StGeometryColumns.ST_GEOMETRY_COLUMNS.TABLE_SCHEMA
    override fun field3(): Field<String?> = StGeometryColumns.ST_GEOMETRY_COLUMNS.TABLE_NAME
    override fun field4(): Field<String?> = StGeometryColumns.ST_GEOMETRY_COLUMNS.COLUMN_NAME
    override fun field5(): Field<String?> = StGeometryColumns.ST_GEOMETRY_COLUMNS.SRS_NAME
    override fun field6(): Field<UInteger?> = StGeometryColumns.ST_GEOMETRY_COLUMNS.SRS_ID
    override fun field7(): Field<String?> = StGeometryColumns.ST_GEOMETRY_COLUMNS.GEOMETRY_TYPE_NAME
    override fun component1(): String? = tableCatalog
    override fun component2(): String? = tableSchema
    override fun component3(): String? = tableName
    override fun component4(): String? = columnName
    override fun component5(): String? = srsName
    override fun component6(): UInteger? = srsId
    override fun component7(): String? = geometryTypeName
    override fun value1(): String? = tableCatalog
    override fun value2(): String? = tableSchema
    override fun value3(): String? = tableName
    override fun value4(): String? = columnName
    override fun value5(): String? = srsName
    override fun value6(): UInteger? = srsId
    override fun value7(): String? = geometryTypeName

    override fun value1(value: String?): StGeometryColumnsRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): StGeometryColumnsRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): StGeometryColumnsRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): StGeometryColumnsRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): StGeometryColumnsRecord {
        set(4, value)
        return this
    }

    override fun value6(value: UInteger?): StGeometryColumnsRecord {
        set(5, value)
        return this
    }

    override fun value7(value: String?): StGeometryColumnsRecord {
        set(6, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: String?, value5: String?, value6: UInteger?, value7: String?): StGeometryColumnsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        return this
    }

    /**
     * Create a detached, initialised StGeometryColumnsRecord
     */
    constructor(tableCatalog: String? = null, tableSchema: String? = null, tableName: String? = null, columnName: String? = null, srsName: String? = null, srsId: UInteger? = null, geometryTypeName: String? = null): this() {
        this.tableCatalog = tableCatalog
        this.tableSchema = tableSchema
        this.tableName = tableName
        this.columnName = columnName
        this.srsName = srsName
        this.srsId = srsId
        this.geometryTypeName = geometryTypeName
        resetChangedOnNotNull()
    }
}
