/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.performance_schema


import com.kjs990114.infra.persistence.jooq.trade.DefaultCatalog
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.Accounts
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.BinaryLogTransactionCompressionStats
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.CondInstances
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.DataLockWaits
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.DataLocks
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.ErrorLog
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsErrorsSummaryByAccountByError
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsErrorsSummaryByHostByError
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsErrorsSummaryByThreadByError
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsErrorsSummaryByUserByError
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsErrorsSummaryGlobalByError
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStagesCurrent
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStagesHistory
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStagesHistoryLong
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStagesSummaryByAccountByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStagesSummaryByHostByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStagesSummaryByThreadByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStagesSummaryByUserByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStagesSummaryGlobalByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStatementsCurrent
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStatementsHistogramByDigest
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStatementsHistogramGlobal
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStatementsHistory
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStatementsHistoryLong
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStatementsSummaryByAccountByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStatementsSummaryByDigest
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStatementsSummaryByHostByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStatementsSummaryByProgram
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStatementsSummaryByThreadByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStatementsSummaryByUserByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsStatementsSummaryGlobalByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsTransactionsCurrent
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsTransactionsHistory
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsTransactionsHistoryLong
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsTransactionsSummaryByAccountByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsTransactionsSummaryByHostByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsTransactionsSummaryByThreadByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsTransactionsSummaryByUserByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsTransactionsSummaryGlobalByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsWaitsCurrent
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsWaitsHistory
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsWaitsHistoryLong
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsWaitsSummaryByAccountByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsWaitsSummaryByHostByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsWaitsSummaryByInstance
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsWaitsSummaryByThreadByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsWaitsSummaryByUserByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.EventsWaitsSummaryGlobalByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.FileInstances
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.FileSummaryByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.FileSummaryByInstance
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.GlobalStatus
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.GlobalVariables
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.HostCache
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.Hosts
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.InnodbRedoLogFiles
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.KeyringComponentStatus
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.KeyringKeys
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.LogStatus
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.MemorySummaryByAccountByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.MemorySummaryByHostByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.MemorySummaryByThreadByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.MemorySummaryByUserByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.MemorySummaryGlobalByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.MetadataLocks
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.MutexInstances
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.ObjectsSummaryGlobalByType
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.PerformanceTimers
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.PersistedVariables
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.PreparedStatementsInstances
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.Processlist
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.ReplicationApplierConfiguration
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.ReplicationApplierFilters
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.ReplicationApplierGlobalFilters
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.ReplicationApplierStatus
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.ReplicationApplierStatusByCoordinator
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.ReplicationApplierStatusByWorker
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.ReplicationAsynchronousConnectionFailover
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.ReplicationAsynchronousConnectionFailoverManaged
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.ReplicationConnectionConfiguration
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.ReplicationConnectionStatus
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.ReplicationGroupMemberStats
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.ReplicationGroupMembers
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.RwlockInstances
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.SessionAccountConnectAttrs
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.SessionConnectAttrs
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.SessionStatus
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.SessionVariables
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.SetupActors
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.SetupConsumers
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.SetupInstruments
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.SetupMeters
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.SetupMetrics
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.SetupObjects
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.SetupThreads
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.SocketInstances
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.SocketSummaryByEventName
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.SocketSummaryByInstance
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.StatusByAccount
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.StatusByHost
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.StatusByThread
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.StatusByUser
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.TableHandles
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.TableIoWaitsSummaryByIndexUsage
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.TableIoWaitsSummaryByTable
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.TableLockWaitsSummaryByTable
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.Threads
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.TlsChannelStatus
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.UserDefinedFunctions
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.UserVariablesByThread
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.Users
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.VariablesByThread
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.VariablesInfo

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PerformanceSchema : SchemaImpl("performance_schema", DefaultCatalog.DEFAULT_CATALOG) {
    companion object {

        /**
         * The reference instance of <code>performance_schema</code>
         */
        val PERFORMANCE_SCHEMA: PerformanceSchema = PerformanceSchema()
    }

    /**
     * The table <code>performance_schema.accounts</code>.
     */
    val ACCOUNTS: Accounts get() = Accounts.ACCOUNTS

    /**
     * The table
     * <code>performance_schema.binary_log_transaction_compression_stats</code>.
     */
    val BINARY_LOG_TRANSACTION_COMPRESSION_STATS: BinaryLogTransactionCompressionStats get() = BinaryLogTransactionCompressionStats.BINARY_LOG_TRANSACTION_COMPRESSION_STATS

    /**
     * The table <code>performance_schema.cond_instances</code>.
     */
    val COND_INSTANCES: CondInstances get() = CondInstances.COND_INSTANCES

    /**
     * The table <code>performance_schema.data_lock_waits</code>.
     */
    val DATA_LOCK_WAITS: DataLockWaits get() = DataLockWaits.DATA_LOCK_WAITS

    /**
     * The table <code>performance_schema.data_locks</code>.
     */
    val DATA_LOCKS: DataLocks get() = DataLocks.DATA_LOCKS

    /**
     * The table <code>performance_schema.error_log</code>.
     */
    val ERROR_LOG: ErrorLog get() = ErrorLog.ERROR_LOG

    /**
     * The table
     * <code>performance_schema.events_errors_summary_by_account_by_error</code>.
     */
    val EVENTS_ERRORS_SUMMARY_BY_ACCOUNT_BY_ERROR: EventsErrorsSummaryByAccountByError get() = EventsErrorsSummaryByAccountByError.EVENTS_ERRORS_SUMMARY_BY_ACCOUNT_BY_ERROR

    /**
     * The table
     * <code>performance_schema.events_errors_summary_by_host_by_error</code>.
     */
    val EVENTS_ERRORS_SUMMARY_BY_HOST_BY_ERROR: EventsErrorsSummaryByHostByError get() = EventsErrorsSummaryByHostByError.EVENTS_ERRORS_SUMMARY_BY_HOST_BY_ERROR

    /**
     * The table
     * <code>performance_schema.events_errors_summary_by_thread_by_error</code>.
     */
    val EVENTS_ERRORS_SUMMARY_BY_THREAD_BY_ERROR: EventsErrorsSummaryByThreadByError get() = EventsErrorsSummaryByThreadByError.EVENTS_ERRORS_SUMMARY_BY_THREAD_BY_ERROR

    /**
     * The table
     * <code>performance_schema.events_errors_summary_by_user_by_error</code>.
     */
    val EVENTS_ERRORS_SUMMARY_BY_USER_BY_ERROR: EventsErrorsSummaryByUserByError get() = EventsErrorsSummaryByUserByError.EVENTS_ERRORS_SUMMARY_BY_USER_BY_ERROR

    /**
     * The table
     * <code>performance_schema.events_errors_summary_global_by_error</code>.
     */
    val EVENTS_ERRORS_SUMMARY_GLOBAL_BY_ERROR: EventsErrorsSummaryGlobalByError get() = EventsErrorsSummaryGlobalByError.EVENTS_ERRORS_SUMMARY_GLOBAL_BY_ERROR

    /**
     * The table <code>performance_schema.events_stages_current</code>.
     */
    val EVENTS_STAGES_CURRENT: EventsStagesCurrent get() = EventsStagesCurrent.EVENTS_STAGES_CURRENT

    /**
     * The table <code>performance_schema.events_stages_history</code>.
     */
    val EVENTS_STAGES_HISTORY: EventsStagesHistory get() = EventsStagesHistory.EVENTS_STAGES_HISTORY

    /**
     * The table <code>performance_schema.events_stages_history_long</code>.
     */
    val EVENTS_STAGES_HISTORY_LONG: EventsStagesHistoryLong get() = EventsStagesHistoryLong.EVENTS_STAGES_HISTORY_LONG

    /**
     * The table
     * <code>performance_schema.events_stages_summary_by_account_by_event_name</code>.
     */
    val EVENTS_STAGES_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME: EventsStagesSummaryByAccountByEventName get() = EventsStagesSummaryByAccountByEventName.EVENTS_STAGES_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME

    /**
     * The table
     * <code>performance_schema.events_stages_summary_by_host_by_event_name</code>.
     */
    val EVENTS_STAGES_SUMMARY_BY_HOST_BY_EVENT_NAME: EventsStagesSummaryByHostByEventName get() = EventsStagesSummaryByHostByEventName.EVENTS_STAGES_SUMMARY_BY_HOST_BY_EVENT_NAME

    /**
     * The table
     * <code>performance_schema.events_stages_summary_by_thread_by_event_name</code>.
     */
    val EVENTS_STAGES_SUMMARY_BY_THREAD_BY_EVENT_NAME: EventsStagesSummaryByThreadByEventName get() = EventsStagesSummaryByThreadByEventName.EVENTS_STAGES_SUMMARY_BY_THREAD_BY_EVENT_NAME

    /**
     * The table
     * <code>performance_schema.events_stages_summary_by_user_by_event_name</code>.
     */
    val EVENTS_STAGES_SUMMARY_BY_USER_BY_EVENT_NAME: EventsStagesSummaryByUserByEventName get() = EventsStagesSummaryByUserByEventName.EVENTS_STAGES_SUMMARY_BY_USER_BY_EVENT_NAME

    /**
     * The table
     * <code>performance_schema.events_stages_summary_global_by_event_name</code>.
     */
    val EVENTS_STAGES_SUMMARY_GLOBAL_BY_EVENT_NAME: EventsStagesSummaryGlobalByEventName get() = EventsStagesSummaryGlobalByEventName.EVENTS_STAGES_SUMMARY_GLOBAL_BY_EVENT_NAME

    /**
     * The table <code>performance_schema.events_statements_current</code>.
     */
    val EVENTS_STATEMENTS_CURRENT: EventsStatementsCurrent get() = EventsStatementsCurrent.EVENTS_STATEMENTS_CURRENT

    /**
     * The table
     * <code>performance_schema.events_statements_histogram_by_digest</code>.
     */
    val EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST: EventsStatementsHistogramByDigest get() = EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST

    /**
     * The table
     * <code>performance_schema.events_statements_histogram_global</code>.
     */
    val EVENTS_STATEMENTS_HISTOGRAM_GLOBAL: EventsStatementsHistogramGlobal get() = EventsStatementsHistogramGlobal.EVENTS_STATEMENTS_HISTOGRAM_GLOBAL

    /**
     * The table <code>performance_schema.events_statements_history</code>.
     */
    val EVENTS_STATEMENTS_HISTORY: EventsStatementsHistory get() = EventsStatementsHistory.EVENTS_STATEMENTS_HISTORY

    /**
     * The table <code>performance_schema.events_statements_history_long</code>.
     */
    val EVENTS_STATEMENTS_HISTORY_LONG: EventsStatementsHistoryLong get() = EventsStatementsHistoryLong.EVENTS_STATEMENTS_HISTORY_LONG

    /**
     * The table
     * <code>performance_schema.events_statements_summary_by_account_by_event_name</code>.
     */
    val EVENTS_STATEMENTS_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME: EventsStatementsSummaryByAccountByEventName get() = EventsStatementsSummaryByAccountByEventName.EVENTS_STATEMENTS_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME

    /**
     * The table
     * <code>performance_schema.events_statements_summary_by_digest</code>.
     */
    val EVENTS_STATEMENTS_SUMMARY_BY_DIGEST: EventsStatementsSummaryByDigest get() = EventsStatementsSummaryByDigest.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST

    /**
     * The table
     * <code>performance_schema.events_statements_summary_by_host_by_event_name</code>.
     */
    val EVENTS_STATEMENTS_SUMMARY_BY_HOST_BY_EVENT_NAME: EventsStatementsSummaryByHostByEventName get() = EventsStatementsSummaryByHostByEventName.EVENTS_STATEMENTS_SUMMARY_BY_HOST_BY_EVENT_NAME

    /**
     * The table
     * <code>performance_schema.events_statements_summary_by_program</code>.
     */
    val EVENTS_STATEMENTS_SUMMARY_BY_PROGRAM: EventsStatementsSummaryByProgram get() = EventsStatementsSummaryByProgram.EVENTS_STATEMENTS_SUMMARY_BY_PROGRAM

    /**
     * The table
     * <code>performance_schema.events_statements_summary_by_thread_by_event_name</code>.
     */
    val EVENTS_STATEMENTS_SUMMARY_BY_THREAD_BY_EVENT_NAME: EventsStatementsSummaryByThreadByEventName get() = EventsStatementsSummaryByThreadByEventName.EVENTS_STATEMENTS_SUMMARY_BY_THREAD_BY_EVENT_NAME

    /**
     * The table
     * <code>performance_schema.events_statements_summary_by_user_by_event_name</code>.
     */
    val EVENTS_STATEMENTS_SUMMARY_BY_USER_BY_EVENT_NAME: EventsStatementsSummaryByUserByEventName get() = EventsStatementsSummaryByUserByEventName.EVENTS_STATEMENTS_SUMMARY_BY_USER_BY_EVENT_NAME

    /**
     * The table
     * <code>performance_schema.events_statements_summary_global_by_event_name</code>.
     */
    val EVENTS_STATEMENTS_SUMMARY_GLOBAL_BY_EVENT_NAME: EventsStatementsSummaryGlobalByEventName get() = EventsStatementsSummaryGlobalByEventName.EVENTS_STATEMENTS_SUMMARY_GLOBAL_BY_EVENT_NAME

    /**
     * The table <code>performance_schema.events_transactions_current</code>.
     */
    val EVENTS_TRANSACTIONS_CURRENT: EventsTransactionsCurrent get() = EventsTransactionsCurrent.EVENTS_TRANSACTIONS_CURRENT

    /**
     * The table <code>performance_schema.events_transactions_history</code>.
     */
    val EVENTS_TRANSACTIONS_HISTORY: EventsTransactionsHistory get() = EventsTransactionsHistory.EVENTS_TRANSACTIONS_HISTORY

    /**
     * The table
     * <code>performance_schema.events_transactions_history_long</code>.
     */
    val EVENTS_TRANSACTIONS_HISTORY_LONG: EventsTransactionsHistoryLong get() = EventsTransactionsHistoryLong.EVENTS_TRANSACTIONS_HISTORY_LONG

    /**
     * The table
     * <code>performance_schema.events_transactions_summary_by_account_by_event_name</code>.
     */
    val EVENTS_TRANSACTIONS_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME: EventsTransactionsSummaryByAccountByEventName get() = EventsTransactionsSummaryByAccountByEventName.EVENTS_TRANSACTIONS_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME

    /**
     * The table
     * <code>performance_schema.events_transactions_summary_by_host_by_event_name</code>.
     */
    val EVENTS_TRANSACTIONS_SUMMARY_BY_HOST_BY_EVENT_NAME: EventsTransactionsSummaryByHostByEventName get() = EventsTransactionsSummaryByHostByEventName.EVENTS_TRANSACTIONS_SUMMARY_BY_HOST_BY_EVENT_NAME

    /**
     * The table
     * <code>performance_schema.events_transactions_summary_by_thread_by_event_name</code>.
     */
    val EVENTS_TRANSACTIONS_SUMMARY_BY_THREAD_BY_EVENT_NAME: EventsTransactionsSummaryByThreadByEventName get() = EventsTransactionsSummaryByThreadByEventName.EVENTS_TRANSACTIONS_SUMMARY_BY_THREAD_BY_EVENT_NAME

    /**
     * The table
     * <code>performance_schema.events_transactions_summary_by_user_by_event_name</code>.
     */
    val EVENTS_TRANSACTIONS_SUMMARY_BY_USER_BY_EVENT_NAME: EventsTransactionsSummaryByUserByEventName get() = EventsTransactionsSummaryByUserByEventName.EVENTS_TRANSACTIONS_SUMMARY_BY_USER_BY_EVENT_NAME

    /**
     * The table
     * <code>performance_schema.events_transactions_summary_global_by_event_name</code>.
     */
    val EVENTS_TRANSACTIONS_SUMMARY_GLOBAL_BY_EVENT_NAME: EventsTransactionsSummaryGlobalByEventName get() = EventsTransactionsSummaryGlobalByEventName.EVENTS_TRANSACTIONS_SUMMARY_GLOBAL_BY_EVENT_NAME

    /**
     * The table <code>performance_schema.events_waits_current</code>.
     */
    val EVENTS_WAITS_CURRENT: EventsWaitsCurrent get() = EventsWaitsCurrent.EVENTS_WAITS_CURRENT

    /**
     * The table <code>performance_schema.events_waits_history</code>.
     */
    val EVENTS_WAITS_HISTORY: EventsWaitsHistory get() = EventsWaitsHistory.EVENTS_WAITS_HISTORY

    /**
     * The table <code>performance_schema.events_waits_history_long</code>.
     */
    val EVENTS_WAITS_HISTORY_LONG: EventsWaitsHistoryLong get() = EventsWaitsHistoryLong.EVENTS_WAITS_HISTORY_LONG

    /**
     * The table
     * <code>performance_schema.events_waits_summary_by_account_by_event_name</code>.
     */
    val EVENTS_WAITS_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME: EventsWaitsSummaryByAccountByEventName get() = EventsWaitsSummaryByAccountByEventName.EVENTS_WAITS_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME

    /**
     * The table
     * <code>performance_schema.events_waits_summary_by_host_by_event_name</code>.
     */
    val EVENTS_WAITS_SUMMARY_BY_HOST_BY_EVENT_NAME: EventsWaitsSummaryByHostByEventName get() = EventsWaitsSummaryByHostByEventName.EVENTS_WAITS_SUMMARY_BY_HOST_BY_EVENT_NAME

    /**
     * The table
     * <code>performance_schema.events_waits_summary_by_instance</code>.
     */
    val EVENTS_WAITS_SUMMARY_BY_INSTANCE: EventsWaitsSummaryByInstance get() = EventsWaitsSummaryByInstance.EVENTS_WAITS_SUMMARY_BY_INSTANCE

    /**
     * The table
     * <code>performance_schema.events_waits_summary_by_thread_by_event_name</code>.
     */
    val EVENTS_WAITS_SUMMARY_BY_THREAD_BY_EVENT_NAME: EventsWaitsSummaryByThreadByEventName get() = EventsWaitsSummaryByThreadByEventName.EVENTS_WAITS_SUMMARY_BY_THREAD_BY_EVENT_NAME

    /**
     * The table
     * <code>performance_schema.events_waits_summary_by_user_by_event_name</code>.
     */
    val EVENTS_WAITS_SUMMARY_BY_USER_BY_EVENT_NAME: EventsWaitsSummaryByUserByEventName get() = EventsWaitsSummaryByUserByEventName.EVENTS_WAITS_SUMMARY_BY_USER_BY_EVENT_NAME

    /**
     * The table
     * <code>performance_schema.events_waits_summary_global_by_event_name</code>.
     */
    val EVENTS_WAITS_SUMMARY_GLOBAL_BY_EVENT_NAME: EventsWaitsSummaryGlobalByEventName get() = EventsWaitsSummaryGlobalByEventName.EVENTS_WAITS_SUMMARY_GLOBAL_BY_EVENT_NAME

    /**
     * The table <code>performance_schema.file_instances</code>.
     */
    val FILE_INSTANCES: FileInstances get() = FileInstances.FILE_INSTANCES

    /**
     * The table <code>performance_schema.file_summary_by_event_name</code>.
     */
    val FILE_SUMMARY_BY_EVENT_NAME: FileSummaryByEventName get() = FileSummaryByEventName.FILE_SUMMARY_BY_EVENT_NAME

    /**
     * The table <code>performance_schema.file_summary_by_instance</code>.
     */
    val FILE_SUMMARY_BY_INSTANCE: FileSummaryByInstance get() = FileSummaryByInstance.FILE_SUMMARY_BY_INSTANCE

    /**
     * The table <code>performance_schema.global_status</code>.
     */
    val GLOBAL_STATUS: GlobalStatus get() = GlobalStatus.GLOBAL_STATUS

    /**
     * The table <code>performance_schema.global_variables</code>.
     */
    val GLOBAL_VARIABLES: GlobalVariables get() = GlobalVariables.GLOBAL_VARIABLES

    /**
     * The table <code>performance_schema.host_cache</code>.
     */
    val HOST_CACHE: HostCache get() = HostCache.HOST_CACHE

    /**
     * The table <code>performance_schema.hosts</code>.
     */
    val HOSTS: Hosts get() = Hosts.HOSTS

    /**
     * The table <code>performance_schema.innodb_redo_log_files</code>.
     */
    val INNODB_REDO_LOG_FILES: InnodbRedoLogFiles get() = InnodbRedoLogFiles.INNODB_REDO_LOG_FILES

    /**
     * The table <code>performance_schema.keyring_component_status</code>.
     */
    val KEYRING_COMPONENT_STATUS: KeyringComponentStatus get() = KeyringComponentStatus.KEYRING_COMPONENT_STATUS

    /**
     * The table <code>performance_schema.keyring_keys</code>.
     */
    val KEYRING_KEYS: KeyringKeys get() = KeyringKeys.KEYRING_KEYS

    /**
     * The table <code>performance_schema.log_status</code>.
     */
    val LOG_STATUS: LogStatus get() = LogStatus.LOG_STATUS

    /**
     * The table
     * <code>performance_schema.memory_summary_by_account_by_event_name</code>.
     */
    val MEMORY_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME: MemorySummaryByAccountByEventName get() = MemorySummaryByAccountByEventName.MEMORY_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME

    /**
     * The table
     * <code>performance_schema.memory_summary_by_host_by_event_name</code>.
     */
    val MEMORY_SUMMARY_BY_HOST_BY_EVENT_NAME: MemorySummaryByHostByEventName get() = MemorySummaryByHostByEventName.MEMORY_SUMMARY_BY_HOST_BY_EVENT_NAME

    /**
     * The table
     * <code>performance_schema.memory_summary_by_thread_by_event_name</code>.
     */
    val MEMORY_SUMMARY_BY_THREAD_BY_EVENT_NAME: MemorySummaryByThreadByEventName get() = MemorySummaryByThreadByEventName.MEMORY_SUMMARY_BY_THREAD_BY_EVENT_NAME

    /**
     * The table
     * <code>performance_schema.memory_summary_by_user_by_event_name</code>.
     */
    val MEMORY_SUMMARY_BY_USER_BY_EVENT_NAME: MemorySummaryByUserByEventName get() = MemorySummaryByUserByEventName.MEMORY_SUMMARY_BY_USER_BY_EVENT_NAME

    /**
     * The table
     * <code>performance_schema.memory_summary_global_by_event_name</code>.
     */
    val MEMORY_SUMMARY_GLOBAL_BY_EVENT_NAME: MemorySummaryGlobalByEventName get() = MemorySummaryGlobalByEventName.MEMORY_SUMMARY_GLOBAL_BY_EVENT_NAME

    /**
     * The table <code>performance_schema.metadata_locks</code>.
     */
    val METADATA_LOCKS: MetadataLocks get() = MetadataLocks.METADATA_LOCKS

    /**
     * The table <code>performance_schema.mutex_instances</code>.
     */
    val MUTEX_INSTANCES: MutexInstances get() = MutexInstances.MUTEX_INSTANCES

    /**
     * The table <code>performance_schema.objects_summary_global_by_type</code>.
     */
    val OBJECTS_SUMMARY_GLOBAL_BY_TYPE: ObjectsSummaryGlobalByType get() = ObjectsSummaryGlobalByType.OBJECTS_SUMMARY_GLOBAL_BY_TYPE

    /**
     * The table <code>performance_schema.performance_timers</code>.
     */
    val PERFORMANCE_TIMERS: PerformanceTimers get() = PerformanceTimers.PERFORMANCE_TIMERS

    /**
     * The table <code>performance_schema.persisted_variables</code>.
     */
    val PERSISTED_VARIABLES: PersistedVariables get() = PersistedVariables.PERSISTED_VARIABLES

    /**
     * The table <code>performance_schema.prepared_statements_instances</code>.
     */
    val PREPARED_STATEMENTS_INSTANCES: PreparedStatementsInstances get() = PreparedStatementsInstances.PREPARED_STATEMENTS_INSTANCES

    /**
     * The table <code>performance_schema.processlist</code>.
     */
    val PROCESSLIST: Processlist get() = Processlist.PROCESSLIST

    /**
     * The table
     * <code>performance_schema.replication_applier_configuration</code>.
     */
    val REPLICATION_APPLIER_CONFIGURATION: ReplicationApplierConfiguration get() = ReplicationApplierConfiguration.REPLICATION_APPLIER_CONFIGURATION

    /**
     * The table <code>performance_schema.replication_applier_filters</code>.
     */
    val REPLICATION_APPLIER_FILTERS: ReplicationApplierFilters get() = ReplicationApplierFilters.REPLICATION_APPLIER_FILTERS

    /**
     * The table
     * <code>performance_schema.replication_applier_global_filters</code>.
     */
    val REPLICATION_APPLIER_GLOBAL_FILTERS: ReplicationApplierGlobalFilters get() = ReplicationApplierGlobalFilters.REPLICATION_APPLIER_GLOBAL_FILTERS

    /**
     * The table <code>performance_schema.replication_applier_status</code>.
     */
    val REPLICATION_APPLIER_STATUS: ReplicationApplierStatus get() = ReplicationApplierStatus.REPLICATION_APPLIER_STATUS

    /**
     * The table
     * <code>performance_schema.replication_applier_status_by_coordinator</code>.
     */
    val REPLICATION_APPLIER_STATUS_BY_COORDINATOR: ReplicationApplierStatusByCoordinator get() = ReplicationApplierStatusByCoordinator.REPLICATION_APPLIER_STATUS_BY_COORDINATOR

    /**
     * The table
     * <code>performance_schema.replication_applier_status_by_worker</code>.
     */
    val REPLICATION_APPLIER_STATUS_BY_WORKER: ReplicationApplierStatusByWorker get() = ReplicationApplierStatusByWorker.REPLICATION_APPLIER_STATUS_BY_WORKER

    /**
     * The table
     * <code>performance_schema.replication_asynchronous_connection_failover</code>.
     */
    val REPLICATION_ASYNCHRONOUS_CONNECTION_FAILOVER: ReplicationAsynchronousConnectionFailover get() = ReplicationAsynchronousConnectionFailover.REPLICATION_ASYNCHRONOUS_CONNECTION_FAILOVER

    /**
     * The table
     * <code>performance_schema.replication_asynchronous_connection_failover_managed</code>.
     */
    val REPLICATION_ASYNCHRONOUS_CONNECTION_FAILOVER_MANAGED: ReplicationAsynchronousConnectionFailoverManaged get() = ReplicationAsynchronousConnectionFailoverManaged.REPLICATION_ASYNCHRONOUS_CONNECTION_FAILOVER_MANAGED

    /**
     * The table
     * <code>performance_schema.replication_connection_configuration</code>.
     */
    val REPLICATION_CONNECTION_CONFIGURATION: ReplicationConnectionConfiguration get() = ReplicationConnectionConfiguration.REPLICATION_CONNECTION_CONFIGURATION

    /**
     * The table <code>performance_schema.replication_connection_status</code>.
     */
    val REPLICATION_CONNECTION_STATUS: ReplicationConnectionStatus get() = ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS

    /**
     * The table <code>performance_schema.replication_group_member_stats</code>.
     */
    val REPLICATION_GROUP_MEMBER_STATS: ReplicationGroupMemberStats get() = ReplicationGroupMemberStats.REPLICATION_GROUP_MEMBER_STATS

    /**
     * The table <code>performance_schema.replication_group_members</code>.
     */
    val REPLICATION_GROUP_MEMBERS: ReplicationGroupMembers get() = ReplicationGroupMembers.REPLICATION_GROUP_MEMBERS

    /**
     * The table <code>performance_schema.rwlock_instances</code>.
     */
    val RWLOCK_INSTANCES: RwlockInstances get() = RwlockInstances.RWLOCK_INSTANCES

    /**
     * The table <code>performance_schema.session_account_connect_attrs</code>.
     */
    val SESSION_ACCOUNT_CONNECT_ATTRS: SessionAccountConnectAttrs get() = SessionAccountConnectAttrs.SESSION_ACCOUNT_CONNECT_ATTRS

    /**
     * The table <code>performance_schema.session_connect_attrs</code>.
     */
    val SESSION_CONNECT_ATTRS: SessionConnectAttrs get() = SessionConnectAttrs.SESSION_CONNECT_ATTRS

    /**
     * The table <code>performance_schema.session_status</code>.
     */
    val SESSION_STATUS: SessionStatus get() = SessionStatus.SESSION_STATUS

    /**
     * The table <code>performance_schema.session_variables</code>.
     */
    val SESSION_VARIABLES: SessionVariables get() = SessionVariables.SESSION_VARIABLES

    /**
     * The table <code>performance_schema.setup_actors</code>.
     */
    val SETUP_ACTORS: SetupActors get() = SetupActors.SETUP_ACTORS

    /**
     * The table <code>performance_schema.setup_consumers</code>.
     */
    val SETUP_CONSUMERS: SetupConsumers get() = SetupConsumers.SETUP_CONSUMERS

    /**
     * The table <code>performance_schema.setup_instruments</code>.
     */
    val SETUP_INSTRUMENTS: SetupInstruments get() = SetupInstruments.SETUP_INSTRUMENTS

    /**
     * The table <code>performance_schema.setup_meters</code>.
     */
    val SETUP_METERS: SetupMeters get() = SetupMeters.SETUP_METERS

    /**
     * The table <code>performance_schema.setup_metrics</code>.
     */
    val SETUP_METRICS: SetupMetrics get() = SetupMetrics.SETUP_METRICS

    /**
     * The table <code>performance_schema.setup_objects</code>.
     */
    val SETUP_OBJECTS: SetupObjects get() = SetupObjects.SETUP_OBJECTS

    /**
     * The table <code>performance_schema.setup_threads</code>.
     */
    val SETUP_THREADS: SetupThreads get() = SetupThreads.SETUP_THREADS

    /**
     * The table <code>performance_schema.socket_instances</code>.
     */
    val SOCKET_INSTANCES: SocketInstances get() = SocketInstances.SOCKET_INSTANCES

    /**
     * The table <code>performance_schema.socket_summary_by_event_name</code>.
     */
    val SOCKET_SUMMARY_BY_EVENT_NAME: SocketSummaryByEventName get() = SocketSummaryByEventName.SOCKET_SUMMARY_BY_EVENT_NAME

    /**
     * The table <code>performance_schema.socket_summary_by_instance</code>.
     */
    val SOCKET_SUMMARY_BY_INSTANCE: SocketSummaryByInstance get() = SocketSummaryByInstance.SOCKET_SUMMARY_BY_INSTANCE

    /**
     * The table <code>performance_schema.status_by_account</code>.
     */
    val STATUS_BY_ACCOUNT: StatusByAccount get() = StatusByAccount.STATUS_BY_ACCOUNT

    /**
     * The table <code>performance_schema.status_by_host</code>.
     */
    val STATUS_BY_HOST: StatusByHost get() = StatusByHost.STATUS_BY_HOST

    /**
     * The table <code>performance_schema.status_by_thread</code>.
     */
    val STATUS_BY_THREAD: StatusByThread get() = StatusByThread.STATUS_BY_THREAD

    /**
     * The table <code>performance_schema.status_by_user</code>.
     */
    val STATUS_BY_USER: StatusByUser get() = StatusByUser.STATUS_BY_USER

    /**
     * The table <code>performance_schema.table_handles</code>.
     */
    val TABLE_HANDLES: TableHandles get() = TableHandles.TABLE_HANDLES

    /**
     * The table
     * <code>performance_schema.table_io_waits_summary_by_index_usage</code>.
     */
    val TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE: TableIoWaitsSummaryByIndexUsage get() = TableIoWaitsSummaryByIndexUsage.TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE

    /**
     * The table
     * <code>performance_schema.table_io_waits_summary_by_table</code>.
     */
    val TABLE_IO_WAITS_SUMMARY_BY_TABLE: TableIoWaitsSummaryByTable get() = TableIoWaitsSummaryByTable.TABLE_IO_WAITS_SUMMARY_BY_TABLE

    /**
     * The table
     * <code>performance_schema.table_lock_waits_summary_by_table</code>.
     */
    val TABLE_LOCK_WAITS_SUMMARY_BY_TABLE: TableLockWaitsSummaryByTable get() = TableLockWaitsSummaryByTable.TABLE_LOCK_WAITS_SUMMARY_BY_TABLE

    /**
     * The table <code>performance_schema.threads</code>.
     */
    val THREADS: Threads get() = Threads.THREADS

    /**
     * The table <code>performance_schema.tls_channel_status</code>.
     */
    val TLS_CHANNEL_STATUS: TlsChannelStatus get() = TlsChannelStatus.TLS_CHANNEL_STATUS

    /**
     * The table <code>performance_schema.user_defined_functions</code>.
     */
    val USER_DEFINED_FUNCTIONS: UserDefinedFunctions get() = UserDefinedFunctions.USER_DEFINED_FUNCTIONS

    /**
     * The table <code>performance_schema.user_variables_by_thread</code>.
     */
    val USER_VARIABLES_BY_THREAD: UserVariablesByThread get() = UserVariablesByThread.USER_VARIABLES_BY_THREAD

    /**
     * The table <code>performance_schema.users</code>.
     */
    val USERS: Users get() = Users.USERS

    /**
     * The table <code>performance_schema.variables_by_thread</code>.
     */
    val VARIABLES_BY_THREAD: VariablesByThread get() = VariablesByThread.VARIABLES_BY_THREAD

    /**
     * The table <code>performance_schema.variables_info</code>.
     */
    val VARIABLES_INFO: VariablesInfo get() = VariablesInfo.VARIABLES_INFO

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Accounts.ACCOUNTS,
        BinaryLogTransactionCompressionStats.BINARY_LOG_TRANSACTION_COMPRESSION_STATS,
        CondInstances.COND_INSTANCES,
        DataLockWaits.DATA_LOCK_WAITS,
        DataLocks.DATA_LOCKS,
        ErrorLog.ERROR_LOG,
        EventsErrorsSummaryByAccountByError.EVENTS_ERRORS_SUMMARY_BY_ACCOUNT_BY_ERROR,
        EventsErrorsSummaryByHostByError.EVENTS_ERRORS_SUMMARY_BY_HOST_BY_ERROR,
        EventsErrorsSummaryByThreadByError.EVENTS_ERRORS_SUMMARY_BY_THREAD_BY_ERROR,
        EventsErrorsSummaryByUserByError.EVENTS_ERRORS_SUMMARY_BY_USER_BY_ERROR,
        EventsErrorsSummaryGlobalByError.EVENTS_ERRORS_SUMMARY_GLOBAL_BY_ERROR,
        EventsStagesCurrent.EVENTS_STAGES_CURRENT,
        EventsStagesHistory.EVENTS_STAGES_HISTORY,
        EventsStagesHistoryLong.EVENTS_STAGES_HISTORY_LONG,
        EventsStagesSummaryByAccountByEventName.EVENTS_STAGES_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME,
        EventsStagesSummaryByHostByEventName.EVENTS_STAGES_SUMMARY_BY_HOST_BY_EVENT_NAME,
        EventsStagesSummaryByThreadByEventName.EVENTS_STAGES_SUMMARY_BY_THREAD_BY_EVENT_NAME,
        EventsStagesSummaryByUserByEventName.EVENTS_STAGES_SUMMARY_BY_USER_BY_EVENT_NAME,
        EventsStagesSummaryGlobalByEventName.EVENTS_STAGES_SUMMARY_GLOBAL_BY_EVENT_NAME,
        EventsStatementsCurrent.EVENTS_STATEMENTS_CURRENT,
        EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST,
        EventsStatementsHistogramGlobal.EVENTS_STATEMENTS_HISTOGRAM_GLOBAL,
        EventsStatementsHistory.EVENTS_STATEMENTS_HISTORY,
        EventsStatementsHistoryLong.EVENTS_STATEMENTS_HISTORY_LONG,
        EventsStatementsSummaryByAccountByEventName.EVENTS_STATEMENTS_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME,
        EventsStatementsSummaryByDigest.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST,
        EventsStatementsSummaryByHostByEventName.EVENTS_STATEMENTS_SUMMARY_BY_HOST_BY_EVENT_NAME,
        EventsStatementsSummaryByProgram.EVENTS_STATEMENTS_SUMMARY_BY_PROGRAM,
        EventsStatementsSummaryByThreadByEventName.EVENTS_STATEMENTS_SUMMARY_BY_THREAD_BY_EVENT_NAME,
        EventsStatementsSummaryByUserByEventName.EVENTS_STATEMENTS_SUMMARY_BY_USER_BY_EVENT_NAME,
        EventsStatementsSummaryGlobalByEventName.EVENTS_STATEMENTS_SUMMARY_GLOBAL_BY_EVENT_NAME,
        EventsTransactionsCurrent.EVENTS_TRANSACTIONS_CURRENT,
        EventsTransactionsHistory.EVENTS_TRANSACTIONS_HISTORY,
        EventsTransactionsHistoryLong.EVENTS_TRANSACTIONS_HISTORY_LONG,
        EventsTransactionsSummaryByAccountByEventName.EVENTS_TRANSACTIONS_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME,
        EventsTransactionsSummaryByHostByEventName.EVENTS_TRANSACTIONS_SUMMARY_BY_HOST_BY_EVENT_NAME,
        EventsTransactionsSummaryByThreadByEventName.EVENTS_TRANSACTIONS_SUMMARY_BY_THREAD_BY_EVENT_NAME,
        EventsTransactionsSummaryByUserByEventName.EVENTS_TRANSACTIONS_SUMMARY_BY_USER_BY_EVENT_NAME,
        EventsTransactionsSummaryGlobalByEventName.EVENTS_TRANSACTIONS_SUMMARY_GLOBAL_BY_EVENT_NAME,
        EventsWaitsCurrent.EVENTS_WAITS_CURRENT,
        EventsWaitsHistory.EVENTS_WAITS_HISTORY,
        EventsWaitsHistoryLong.EVENTS_WAITS_HISTORY_LONG,
        EventsWaitsSummaryByAccountByEventName.EVENTS_WAITS_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME,
        EventsWaitsSummaryByHostByEventName.EVENTS_WAITS_SUMMARY_BY_HOST_BY_EVENT_NAME,
        EventsWaitsSummaryByInstance.EVENTS_WAITS_SUMMARY_BY_INSTANCE,
        EventsWaitsSummaryByThreadByEventName.EVENTS_WAITS_SUMMARY_BY_THREAD_BY_EVENT_NAME,
        EventsWaitsSummaryByUserByEventName.EVENTS_WAITS_SUMMARY_BY_USER_BY_EVENT_NAME,
        EventsWaitsSummaryGlobalByEventName.EVENTS_WAITS_SUMMARY_GLOBAL_BY_EVENT_NAME,
        FileInstances.FILE_INSTANCES,
        FileSummaryByEventName.FILE_SUMMARY_BY_EVENT_NAME,
        FileSummaryByInstance.FILE_SUMMARY_BY_INSTANCE,
        GlobalStatus.GLOBAL_STATUS,
        GlobalVariables.GLOBAL_VARIABLES,
        HostCache.HOST_CACHE,
        Hosts.HOSTS,
        InnodbRedoLogFiles.INNODB_REDO_LOG_FILES,
        KeyringComponentStatus.KEYRING_COMPONENT_STATUS,
        KeyringKeys.KEYRING_KEYS,
        LogStatus.LOG_STATUS,
        MemorySummaryByAccountByEventName.MEMORY_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME,
        MemorySummaryByHostByEventName.MEMORY_SUMMARY_BY_HOST_BY_EVENT_NAME,
        MemorySummaryByThreadByEventName.MEMORY_SUMMARY_BY_THREAD_BY_EVENT_NAME,
        MemorySummaryByUserByEventName.MEMORY_SUMMARY_BY_USER_BY_EVENT_NAME,
        MemorySummaryGlobalByEventName.MEMORY_SUMMARY_GLOBAL_BY_EVENT_NAME,
        MetadataLocks.METADATA_LOCKS,
        MutexInstances.MUTEX_INSTANCES,
        ObjectsSummaryGlobalByType.OBJECTS_SUMMARY_GLOBAL_BY_TYPE,
        PerformanceTimers.PERFORMANCE_TIMERS,
        PersistedVariables.PERSISTED_VARIABLES,
        PreparedStatementsInstances.PREPARED_STATEMENTS_INSTANCES,
        Processlist.PROCESSLIST,
        ReplicationApplierConfiguration.REPLICATION_APPLIER_CONFIGURATION,
        ReplicationApplierFilters.REPLICATION_APPLIER_FILTERS,
        ReplicationApplierGlobalFilters.REPLICATION_APPLIER_GLOBAL_FILTERS,
        ReplicationApplierStatus.REPLICATION_APPLIER_STATUS,
        ReplicationApplierStatusByCoordinator.REPLICATION_APPLIER_STATUS_BY_COORDINATOR,
        ReplicationApplierStatusByWorker.REPLICATION_APPLIER_STATUS_BY_WORKER,
        ReplicationAsynchronousConnectionFailover.REPLICATION_ASYNCHRONOUS_CONNECTION_FAILOVER,
        ReplicationAsynchronousConnectionFailoverManaged.REPLICATION_ASYNCHRONOUS_CONNECTION_FAILOVER_MANAGED,
        ReplicationConnectionConfiguration.REPLICATION_CONNECTION_CONFIGURATION,
        ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS,
        ReplicationGroupMemberStats.REPLICATION_GROUP_MEMBER_STATS,
        ReplicationGroupMembers.REPLICATION_GROUP_MEMBERS,
        RwlockInstances.RWLOCK_INSTANCES,
        SessionAccountConnectAttrs.SESSION_ACCOUNT_CONNECT_ATTRS,
        SessionConnectAttrs.SESSION_CONNECT_ATTRS,
        SessionStatus.SESSION_STATUS,
        SessionVariables.SESSION_VARIABLES,
        SetupActors.SETUP_ACTORS,
        SetupConsumers.SETUP_CONSUMERS,
        SetupInstruments.SETUP_INSTRUMENTS,
        SetupMeters.SETUP_METERS,
        SetupMetrics.SETUP_METRICS,
        SetupObjects.SETUP_OBJECTS,
        SetupThreads.SETUP_THREADS,
        SocketInstances.SOCKET_INSTANCES,
        SocketSummaryByEventName.SOCKET_SUMMARY_BY_EVENT_NAME,
        SocketSummaryByInstance.SOCKET_SUMMARY_BY_INSTANCE,
        StatusByAccount.STATUS_BY_ACCOUNT,
        StatusByHost.STATUS_BY_HOST,
        StatusByThread.STATUS_BY_THREAD,
        StatusByUser.STATUS_BY_USER,
        TableHandles.TABLE_HANDLES,
        TableIoWaitsSummaryByIndexUsage.TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE,
        TableIoWaitsSummaryByTable.TABLE_IO_WAITS_SUMMARY_BY_TABLE,
        TableLockWaitsSummaryByTable.TABLE_LOCK_WAITS_SUMMARY_BY_TABLE,
        Threads.THREADS,
        TlsChannelStatus.TLS_CHANNEL_STATUS,
        UserDefinedFunctions.USER_DEFINED_FUNCTIONS,
        UserVariablesByThread.USER_VARIABLES_BY_THREAD,
        Users.USERS,
        VariablesByThread.VARIABLES_BY_THREAD,
        VariablesInfo.VARIABLES_INFO
    )
}
