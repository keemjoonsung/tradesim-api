/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.MemorySummaryByAccountByEventName

import org.jooq.Field
import org.jooq.Record13
import org.jooq.Row13
import org.jooq.impl.TableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class MemorySummaryByAccountByEventNameRecord() : TableRecordImpl<MemorySummaryByAccountByEventNameRecord>(MemorySummaryByAccountByEventName.MEMORY_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME), Record13<String?, String?, String?, ULong?, ULong?, ULong?, ULong?, Long?, Long?, Long?, Long?, Long?, Long?> {

    open var user: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var host: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var eventName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var countAlloc: ULong?
        set(value): Unit = set(3, value)
        get(): ULong? = get(3) as ULong?

    open var countFree: ULong?
        set(value): Unit = set(4, value)
        get(): ULong? = get(4) as ULong?

    open var sumNumberOfBytesAlloc: ULong?
        set(value): Unit = set(5, value)
        get(): ULong? = get(5) as ULong?

    open var sumNumberOfBytesFree: ULong?
        set(value): Unit = set(6, value)
        get(): ULong? = get(6) as ULong?

    open var lowCountUsed: Long?
        set(value): Unit = set(7, value)
        get(): Long? = get(7) as Long?

    open var currentCountUsed: Long?
        set(value): Unit = set(8, value)
        get(): Long? = get(8) as Long?

    open var highCountUsed: Long?
        set(value): Unit = set(9, value)
        get(): Long? = get(9) as Long?

    open var lowNumberOfBytesUsed: Long?
        set(value): Unit = set(10, value)
        get(): Long? = get(10) as Long?

    open var currentNumberOfBytesUsed: Long?
        set(value): Unit = set(11, value)
        get(): Long? = get(11) as Long?

    open var highNumberOfBytesUsed: Long?
        set(value): Unit = set(12, value)
        get(): Long? = get(12) as Long?

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row13<String?, String?, String?, ULong?, ULong?, ULong?, ULong?, Long?, Long?, Long?, Long?, Long?, Long?> = super.fieldsRow() as Row13<String?, String?, String?, ULong?, ULong?, ULong?, ULong?, Long?, Long?, Long?, Long?, Long?, Long?>
    override fun valuesRow(): Row13<String?, String?, String?, ULong?, ULong?, ULong?, ULong?, Long?, Long?, Long?, Long?, Long?, Long?> = super.valuesRow() as Row13<String?, String?, String?, ULong?, ULong?, ULong?, ULong?, Long?, Long?, Long?, Long?, Long?, Long?>
    override fun field1(): Field<String?> = MemorySummaryByAccountByEventName.MEMORY_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME.USER
    override fun field2(): Field<String?> = MemorySummaryByAccountByEventName.MEMORY_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME.HOST
    override fun field3(): Field<String?> = MemorySummaryByAccountByEventName.MEMORY_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME.EVENT_NAME
    override fun field4(): Field<ULong?> = MemorySummaryByAccountByEventName.MEMORY_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME.COUNT_ALLOC
    override fun field5(): Field<ULong?> = MemorySummaryByAccountByEventName.MEMORY_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME.COUNT_FREE
    override fun field6(): Field<ULong?> = MemorySummaryByAccountByEventName.MEMORY_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME.SUM_NUMBER_OF_BYTES_ALLOC
    override fun field7(): Field<ULong?> = MemorySummaryByAccountByEventName.MEMORY_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME.SUM_NUMBER_OF_BYTES_FREE
    override fun field8(): Field<Long?> = MemorySummaryByAccountByEventName.MEMORY_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME.LOW_COUNT_USED
    override fun field9(): Field<Long?> = MemorySummaryByAccountByEventName.MEMORY_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME.CURRENT_COUNT_USED
    override fun field10(): Field<Long?> = MemorySummaryByAccountByEventName.MEMORY_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME.HIGH_COUNT_USED
    override fun field11(): Field<Long?> = MemorySummaryByAccountByEventName.MEMORY_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME.LOW_NUMBER_OF_BYTES_USED
    override fun field12(): Field<Long?> = MemorySummaryByAccountByEventName.MEMORY_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME.CURRENT_NUMBER_OF_BYTES_USED
    override fun field13(): Field<Long?> = MemorySummaryByAccountByEventName.MEMORY_SUMMARY_BY_ACCOUNT_BY_EVENT_NAME.HIGH_NUMBER_OF_BYTES_USED
    override fun component1(): String? = user
    override fun component2(): String? = host
    override fun component3(): String? = eventName
    override fun component4(): ULong? = countAlloc
    override fun component5(): ULong? = countFree
    override fun component6(): ULong? = sumNumberOfBytesAlloc
    override fun component7(): ULong? = sumNumberOfBytesFree
    override fun component8(): Long? = lowCountUsed
    override fun component9(): Long? = currentCountUsed
    override fun component10(): Long? = highCountUsed
    override fun component11(): Long? = lowNumberOfBytesUsed
    override fun component12(): Long? = currentNumberOfBytesUsed
    override fun component13(): Long? = highNumberOfBytesUsed
    override fun value1(): String? = user
    override fun value2(): String? = host
    override fun value3(): String? = eventName
    override fun value4(): ULong? = countAlloc
    override fun value5(): ULong? = countFree
    override fun value6(): ULong? = sumNumberOfBytesAlloc
    override fun value7(): ULong? = sumNumberOfBytesFree
    override fun value8(): Long? = lowCountUsed
    override fun value9(): Long? = currentCountUsed
    override fun value10(): Long? = highCountUsed
    override fun value11(): Long? = lowNumberOfBytesUsed
    override fun value12(): Long? = currentNumberOfBytesUsed
    override fun value13(): Long? = highNumberOfBytesUsed

    override fun value1(value: String?): MemorySummaryByAccountByEventNameRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): MemorySummaryByAccountByEventNameRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): MemorySummaryByAccountByEventNameRecord {
        set(2, value)
        return this
    }

    override fun value4(value: ULong?): MemorySummaryByAccountByEventNameRecord {
        set(3, value)
        return this
    }

    override fun value5(value: ULong?): MemorySummaryByAccountByEventNameRecord {
        set(4, value)
        return this
    }

    override fun value6(value: ULong?): MemorySummaryByAccountByEventNameRecord {
        set(5, value)
        return this
    }

    override fun value7(value: ULong?): MemorySummaryByAccountByEventNameRecord {
        set(6, value)
        return this
    }

    override fun value8(value: Long?): MemorySummaryByAccountByEventNameRecord {
        set(7, value)
        return this
    }

    override fun value9(value: Long?): MemorySummaryByAccountByEventNameRecord {
        set(8, value)
        return this
    }

    override fun value10(value: Long?): MemorySummaryByAccountByEventNameRecord {
        set(9, value)
        return this
    }

    override fun value11(value: Long?): MemorySummaryByAccountByEventNameRecord {
        set(10, value)
        return this
    }

    override fun value12(value: Long?): MemorySummaryByAccountByEventNameRecord {
        set(11, value)
        return this
    }

    override fun value13(value: Long?): MemorySummaryByAccountByEventNameRecord {
        set(12, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: ULong?, value5: ULong?, value6: ULong?, value7: ULong?, value8: Long?, value9: Long?, value10: Long?, value11: Long?, value12: Long?, value13: Long?): MemorySummaryByAccountByEventNameRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        return this
    }

    /**
     * Create a detached, initialised MemorySummaryByAccountByEventNameRecord
     */
    constructor(user: String? = null, host: String? = null, eventName: String? = null, countAlloc: ULong? = null, countFree: ULong? = null, sumNumberOfBytesAlloc: ULong? = null, sumNumberOfBytesFree: ULong? = null, lowCountUsed: Long? = null, currentCountUsed: Long? = null, highCountUsed: Long? = null, lowNumberOfBytesUsed: Long? = null, currentNumberOfBytesUsed: Long? = null, highNumberOfBytesUsed: Long? = null): this() {
        this.user = user
        this.host = host
        this.eventName = eventName
        this.countAlloc = countAlloc
        this.countFree = countFree
        this.sumNumberOfBytesAlloc = sumNumberOfBytesAlloc
        this.sumNumberOfBytesFree = sumNumberOfBytesFree
        this.lowCountUsed = lowCountUsed
        this.currentCountUsed = currentCountUsed
        this.highCountUsed = highCountUsed
        this.lowNumberOfBytesUsed = lowNumberOfBytesUsed
        this.currentNumberOfBytesUsed = currentNumberOfBytesUsed
        this.highNumberOfBytesUsed = highNumberOfBytesUsed
        resetChangedOnNotNull()
    }
}
