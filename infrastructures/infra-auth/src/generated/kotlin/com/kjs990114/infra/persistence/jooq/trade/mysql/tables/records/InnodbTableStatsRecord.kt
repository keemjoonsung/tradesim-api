/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.mysql.tables.records


import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.InnodbTableStats

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record2
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.UpdatableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class InnodbTableStatsRecord() : UpdatableRecordImpl<InnodbTableStatsRecord>(InnodbTableStats.INNODB_TABLE_STATS), Record6<String?, String?, LocalDateTime?, ULong?, ULong?, ULong?> {

    open var databaseName: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var tableName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var lastUpdate: LocalDateTime?
        set(value): Unit = set(2, value)
        get(): LocalDateTime? = get(2) as LocalDateTime?

    open var nRows: ULong?
        set(value): Unit = set(3, value)
        get(): ULong? = get(3) as ULong?

    open var clusteredIndexSize: ULong?
        set(value): Unit = set(4, value)
        get(): ULong? = get(4) as ULong?

    open var sumOfOtherIndexSizes: ULong?
        set(value): Unit = set(5, value)
        get(): ULong? = get(5) as ULong?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record2<String?, String?> = super.key() as Record2<String?, String?>

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<String?, String?, LocalDateTime?, ULong?, ULong?, ULong?> = super.fieldsRow() as Row6<String?, String?, LocalDateTime?, ULong?, ULong?, ULong?>
    override fun valuesRow(): Row6<String?, String?, LocalDateTime?, ULong?, ULong?, ULong?> = super.valuesRow() as Row6<String?, String?, LocalDateTime?, ULong?, ULong?, ULong?>
    override fun field1(): Field<String?> = InnodbTableStats.INNODB_TABLE_STATS.DATABASE_NAME
    override fun field2(): Field<String?> = InnodbTableStats.INNODB_TABLE_STATS.TABLE_NAME
    override fun field3(): Field<LocalDateTime?> = InnodbTableStats.INNODB_TABLE_STATS.LAST_UPDATE
    override fun field4(): Field<ULong?> = InnodbTableStats.INNODB_TABLE_STATS.N_ROWS
    override fun field5(): Field<ULong?> = InnodbTableStats.INNODB_TABLE_STATS.CLUSTERED_INDEX_SIZE
    override fun field6(): Field<ULong?> = InnodbTableStats.INNODB_TABLE_STATS.SUM_OF_OTHER_INDEX_SIZES
    override fun component1(): String? = databaseName
    override fun component2(): String? = tableName
    override fun component3(): LocalDateTime? = lastUpdate
    override fun component4(): ULong? = nRows
    override fun component5(): ULong? = clusteredIndexSize
    override fun component6(): ULong? = sumOfOtherIndexSizes
    override fun value1(): String? = databaseName
    override fun value2(): String? = tableName
    override fun value3(): LocalDateTime? = lastUpdate
    override fun value4(): ULong? = nRows
    override fun value5(): ULong? = clusteredIndexSize
    override fun value6(): ULong? = sumOfOtherIndexSizes

    override fun value1(value: String?): InnodbTableStatsRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): InnodbTableStatsRecord {
        set(1, value)
        return this
    }

    override fun value3(value: LocalDateTime?): InnodbTableStatsRecord {
        set(2, value)
        return this
    }

    override fun value4(value: ULong?): InnodbTableStatsRecord {
        set(3, value)
        return this
    }

    override fun value5(value: ULong?): InnodbTableStatsRecord {
        set(4, value)
        return this
    }

    override fun value6(value: ULong?): InnodbTableStatsRecord {
        set(5, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: LocalDateTime?, value4: ULong?, value5: ULong?, value6: ULong?): InnodbTableStatsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised InnodbTableStatsRecord
     */
    constructor(databaseName: String? = null, tableName: String? = null, lastUpdate: LocalDateTime? = null, nRows: ULong? = null, clusteredIndexSize: ULong? = null, sumOfOtherIndexSizes: ULong? = null): this() {
        this.databaseName = databaseName
        this.tableName = tableName
        this.lastUpdate = lastUpdate
        this.nRows = nRows
        this.clusteredIndexSize = clusteredIndexSize
        this.sumOfOtherIndexSizes = sumOfOtherIndexSizes
        resetChangedOnNotNull()
    }
}
