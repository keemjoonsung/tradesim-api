/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.performance_schema.enums.ReplicationApplierFiltersConfiguredBy
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.ReplicationApplierFilters

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.TableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ReplicationApplierFiltersRecord() : TableRecordImpl<ReplicationApplierFiltersRecord>(ReplicationApplierFilters.REPLICATION_APPLIER_FILTERS), Record6<String?, String?, String?, ReplicationApplierFiltersConfiguredBy?, LocalDateTime?, ULong?> {

    open var channelName: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var filterName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var filterRule: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var configuredBy: ReplicationApplierFiltersConfiguredBy?
        set(value): Unit = set(3, value)
        get(): ReplicationApplierFiltersConfiguredBy? = get(3) as ReplicationApplierFiltersConfiguredBy?

    open var activeSince: LocalDateTime?
        set(value): Unit = set(4, value)
        get(): LocalDateTime? = get(4) as LocalDateTime?

    open var counter: ULong?
        set(value): Unit = set(5, value)
        get(): ULong? = get(5) as ULong?

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<String?, String?, String?, ReplicationApplierFiltersConfiguredBy?, LocalDateTime?, ULong?> = super.fieldsRow() as Row6<String?, String?, String?, ReplicationApplierFiltersConfiguredBy?, LocalDateTime?, ULong?>
    override fun valuesRow(): Row6<String?, String?, String?, ReplicationApplierFiltersConfiguredBy?, LocalDateTime?, ULong?> = super.valuesRow() as Row6<String?, String?, String?, ReplicationApplierFiltersConfiguredBy?, LocalDateTime?, ULong?>
    override fun field1(): Field<String?> = ReplicationApplierFilters.REPLICATION_APPLIER_FILTERS.CHANNEL_NAME
    override fun field2(): Field<String?> = ReplicationApplierFilters.REPLICATION_APPLIER_FILTERS.FILTER_NAME
    override fun field3(): Field<String?> = ReplicationApplierFilters.REPLICATION_APPLIER_FILTERS.FILTER_RULE
    override fun field4(): Field<ReplicationApplierFiltersConfiguredBy?> = ReplicationApplierFilters.REPLICATION_APPLIER_FILTERS.CONFIGURED_BY
    override fun field5(): Field<LocalDateTime?> = ReplicationApplierFilters.REPLICATION_APPLIER_FILTERS.ACTIVE_SINCE
    override fun field6(): Field<ULong?> = ReplicationApplierFilters.REPLICATION_APPLIER_FILTERS.COUNTER
    override fun component1(): String? = channelName
    override fun component2(): String? = filterName
    override fun component3(): String? = filterRule
    override fun component4(): ReplicationApplierFiltersConfiguredBy? = configuredBy
    override fun component5(): LocalDateTime? = activeSince
    override fun component6(): ULong? = counter
    override fun value1(): String? = channelName
    override fun value2(): String? = filterName
    override fun value3(): String? = filterRule
    override fun value4(): ReplicationApplierFiltersConfiguredBy? = configuredBy
    override fun value5(): LocalDateTime? = activeSince
    override fun value6(): ULong? = counter

    override fun value1(value: String?): ReplicationApplierFiltersRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): ReplicationApplierFiltersRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): ReplicationApplierFiltersRecord {
        set(2, value)
        return this
    }

    override fun value4(value: ReplicationApplierFiltersConfiguredBy?): ReplicationApplierFiltersRecord {
        set(3, value)
        return this
    }

    override fun value5(value: LocalDateTime?): ReplicationApplierFiltersRecord {
        set(4, value)
        return this
    }

    override fun value6(value: ULong?): ReplicationApplierFiltersRecord {
        set(5, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: ReplicationApplierFiltersConfiguredBy?, value5: LocalDateTime?, value6: ULong?): ReplicationApplierFiltersRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised ReplicationApplierFiltersRecord
     */
    constructor(channelName: String? = null, filterName: String? = null, filterRule: String? = null, configuredBy: ReplicationApplierFiltersConfiguredBy? = null, activeSince: LocalDateTime? = null, counter: ULong? = null): this() {
        this.channelName = channelName
        this.filterName = filterName
        this.filterRule = filterRule
        this.configuredBy = configuredBy
        this.activeSince = activeSince
        this.counter = counter
        resetChangedOnNotNull()
    }
}
