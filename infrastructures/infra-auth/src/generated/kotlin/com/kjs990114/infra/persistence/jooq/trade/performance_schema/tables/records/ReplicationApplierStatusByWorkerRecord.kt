/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.performance_schema.enums.ReplicationApplierStatusByWorkerServiceState
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.ReplicationApplierStatusByWorker

import java.time.LocalDateTime

import org.jooq.Record2
import org.jooq.impl.UpdatableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ReplicationApplierStatusByWorkerRecord() : UpdatableRecordImpl<ReplicationApplierStatusByWorkerRecord>(ReplicationApplierStatusByWorker.REPLICATION_APPLIER_STATUS_BY_WORKER) {

    open var channelName: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var workerId: ULong?
        set(value): Unit = set(1, value)
        get(): ULong? = get(1) as ULong?

    open var threadId: ULong?
        set(value): Unit = set(2, value)
        get(): ULong? = get(2) as ULong?

    open var serviceState: ReplicationApplierStatusByWorkerServiceState?
        set(value): Unit = set(3, value)
        get(): ReplicationApplierStatusByWorkerServiceState? = get(3) as ReplicationApplierStatusByWorkerServiceState?

    open var lastErrorNumber: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var lastErrorMessage: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var lastErrorTimestamp: LocalDateTime?
        set(value): Unit = set(6, value)
        get(): LocalDateTime? = get(6) as LocalDateTime?

    open var lastAppliedTransaction: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var lastAppliedTransactionOriginalCommitTimestamp: LocalDateTime?
        set(value): Unit = set(8, value)
        get(): LocalDateTime? = get(8) as LocalDateTime?

    open var lastAppliedTransactionImmediateCommitTimestamp: LocalDateTime?
        set(value): Unit = set(9, value)
        get(): LocalDateTime? = get(9) as LocalDateTime?

    open var lastAppliedTransactionStartApplyTimestamp: LocalDateTime?
        set(value): Unit = set(10, value)
        get(): LocalDateTime? = get(10) as LocalDateTime?

    open var lastAppliedTransactionEndApplyTimestamp: LocalDateTime?
        set(value): Unit = set(11, value)
        get(): LocalDateTime? = get(11) as LocalDateTime?

    open var applyingTransaction: String?
        set(value): Unit = set(12, value)
        get(): String? = get(12) as String?

    open var applyingTransactionOriginalCommitTimestamp: LocalDateTime?
        set(value): Unit = set(13, value)
        get(): LocalDateTime? = get(13) as LocalDateTime?

    open var applyingTransactionImmediateCommitTimestamp: LocalDateTime?
        set(value): Unit = set(14, value)
        get(): LocalDateTime? = get(14) as LocalDateTime?

    open var applyingTransactionStartApplyTimestamp: LocalDateTime?
        set(value): Unit = set(15, value)
        get(): LocalDateTime? = get(15) as LocalDateTime?

    open var lastAppliedTransactionRetriesCount: ULong?
        set(value): Unit = set(16, value)
        get(): ULong? = get(16) as ULong?

    open var lastAppliedTransactionLastTransientErrorNumber: Int?
        set(value): Unit = set(17, value)
        get(): Int? = get(17) as Int?

    open var lastAppliedTransactionLastTransientErrorMessage: String?
        set(value): Unit = set(18, value)
        get(): String? = get(18) as String?

    open var lastAppliedTransactionLastTransientErrorTimestamp: LocalDateTime?
        set(value): Unit = set(19, value)
        get(): LocalDateTime? = get(19) as LocalDateTime?

    open var applyingTransactionRetriesCount: ULong?
        set(value): Unit = set(20, value)
        get(): ULong? = get(20) as ULong?

    open var applyingTransactionLastTransientErrorNumber: Int?
        set(value): Unit = set(21, value)
        get(): Int? = get(21) as Int?

    open var applyingTransactionLastTransientErrorMessage: String?
        set(value): Unit = set(22, value)
        get(): String? = get(22) as String?

    open var applyingTransactionLastTransientErrorTimestamp: LocalDateTime?
        set(value): Unit = set(23, value)
        get(): LocalDateTime? = get(23) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record2<String?, ULong?> = super.key() as Record2<String?, ULong?>

    /**
     * Create a detached, initialised ReplicationApplierStatusByWorkerRecord
     */
    constructor(channelName: String? = null, workerId: ULong? = null, threadId: ULong? = null, serviceState: ReplicationApplierStatusByWorkerServiceState? = null, lastErrorNumber: Int? = null, lastErrorMessage: String? = null, lastErrorTimestamp: LocalDateTime? = null, lastAppliedTransaction: String? = null, lastAppliedTransactionOriginalCommitTimestamp: LocalDateTime? = null, lastAppliedTransactionImmediateCommitTimestamp: LocalDateTime? = null, lastAppliedTransactionStartApplyTimestamp: LocalDateTime? = null, lastAppliedTransactionEndApplyTimestamp: LocalDateTime? = null, applyingTransaction: String? = null, applyingTransactionOriginalCommitTimestamp: LocalDateTime? = null, applyingTransactionImmediateCommitTimestamp: LocalDateTime? = null, applyingTransactionStartApplyTimestamp: LocalDateTime? = null, lastAppliedTransactionRetriesCount: ULong? = null, lastAppliedTransactionLastTransientErrorNumber: Int? = null, lastAppliedTransactionLastTransientErrorMessage: String? = null, lastAppliedTransactionLastTransientErrorTimestamp: LocalDateTime? = null, applyingTransactionRetriesCount: ULong? = null, applyingTransactionLastTransientErrorNumber: Int? = null, applyingTransactionLastTransientErrorMessage: String? = null, applyingTransactionLastTransientErrorTimestamp: LocalDateTime? = null): this() {
        this.channelName = channelName
        this.workerId = workerId
        this.threadId = threadId
        this.serviceState = serviceState
        this.lastErrorNumber = lastErrorNumber
        this.lastErrorMessage = lastErrorMessage
        this.lastErrorTimestamp = lastErrorTimestamp
        this.lastAppliedTransaction = lastAppliedTransaction
        this.lastAppliedTransactionOriginalCommitTimestamp = lastAppliedTransactionOriginalCommitTimestamp
        this.lastAppliedTransactionImmediateCommitTimestamp = lastAppliedTransactionImmediateCommitTimestamp
        this.lastAppliedTransactionStartApplyTimestamp = lastAppliedTransactionStartApplyTimestamp
        this.lastAppliedTransactionEndApplyTimestamp = lastAppliedTransactionEndApplyTimestamp
        this.applyingTransaction = applyingTransaction
        this.applyingTransactionOriginalCommitTimestamp = applyingTransactionOriginalCommitTimestamp
        this.applyingTransactionImmediateCommitTimestamp = applyingTransactionImmediateCommitTimestamp
        this.applyingTransactionStartApplyTimestamp = applyingTransactionStartApplyTimestamp
        this.lastAppliedTransactionRetriesCount = lastAppliedTransactionRetriesCount
        this.lastAppliedTransactionLastTransientErrorNumber = lastAppliedTransactionLastTransientErrorNumber
        this.lastAppliedTransactionLastTransientErrorMessage = lastAppliedTransactionLastTransientErrorMessage
        this.lastAppliedTransactionLastTransientErrorTimestamp = lastAppliedTransactionLastTransientErrorTimestamp
        this.applyingTransactionRetriesCount = applyingTransactionRetriesCount
        this.applyingTransactionLastTransientErrorNumber = applyingTransactionLastTransientErrorNumber
        this.applyingTransactionLastTransientErrorMessage = applyingTransactionLastTransientErrorMessage
        this.applyingTransactionLastTransientErrorTimestamp = applyingTransactionLastTransientErrorTimestamp
        resetChangedOnNotNull()
    }
}
