/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.sys.routines


import com.kjs990114.infra.persistence.jooq.trade.sys.Sys

import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * 
 * Description
 * -----------
 * 
 * Shows all currently enabled Performance Schema configuration.
 * 
 * Parameters
 * -----------
 * 
 * in_show_instruments (BOOLEAN):
 *   Whether to print enabled instruments (can print many items)
 * 
 * in_show_threads (BOOLEAN):
 *   Whether to print enabled threads
 * 
 * Example
 * -----------
 * 
 * mysql&gt; CALL sys.ps_setup_show_enabled(TRUE, TRUE);
 * +----------------------------+
 * | performance_schema_enabled |
 * +----------------------------+
 * |                          1 |
 * +----------------------------+
 * 1 row in set (0.00 sec)
 * 
 * +---------------+
 * | enabled_users |
 * +---------------+
 * | '%'@'%'       |
 * +---------------+
 * 1 row in set (0.01 sec)
 * 
 * +-------------+---------+---------+-------+
 * | object_type | objects | enabled | timed |
 * +-------------+---------+---------+-------+
 * | EVENT       | %.%     | YES     | YES   |
 * | FUNCTION    | %.%     | YES     | YES   |
 * | PROCEDURE   | %.%     | YES     | YES   |
 * | TABLE       | %.%     | YES     | YES   |
 * | TRIGGER     | %.%     | YES     | YES   |
 * +-------------+---------+---------+-------+
 * 5 rows in set (0.01 sec)
 * 
 * +---------------------------+
 * | enabled_consumers         |
 * +---------------------------+
 * | events_statements_current |
 * | global_instrumentation    |
 * | thread_instrumentation    |
 * | statements_digest         |
 * +---------------------------+
 * 4 rows in set (0.05 sec)
 * 
 * +---------------------------------+-------------+
 * | enabled_threads                 | thread_type |
 * +---------------------------------+-------------+
 * | sql/main                        | BACKGROUND  |
 * | sql/thread_timer_notifier       | BACKGROUND  |
 * | innodb/io_ibuf_thread           | BACKGROUND  |
 * | innodb/io_log_thread            | BACKGROUND  |
 * | innodb/io_read_thread           | BACKGROUND  |
 * | innodb/io_read_thread           | BACKGROUND  |
 * | innodb/io_write_thread          | BACKGROUND  |
 * | innodb/io_write_thread          | BACKGROUND  |
 * | innodb/page_cleaner_thread      | BACKGROUND  |
 * | innodb/srv_lock_timeout_thread  | BACKGROUND  |
 * | innodb/srv_error_monitor_thread | BACKGROUND  |
 * | innodb/srv_monitor_thread       | BACKGROUND  |
 * | innodb/srv_master_thread        | BACKGROUND  |
 * | innodb/srv_purge_thread         | BACKGROUND  |
 * | innodb/srv_worker_thread        | BACKGROUND  |
 * | innodb/srv_worker_thread        | BACKGROUND  |
 * | innodb/srv_worker_thread        | BACKGROUND  |
 * | innodb/buf_dump_thread          | BACKGROUND  |
 * | innodb/dict_stats_thread        | BACKGROUND  |
 * | sql/signal_handler              | BACKGROUND  |
 * | sql/compress_gtid_table         | FOREGROUND  |
 * | root@localhost                  | FOREGROUND  |
 * +---------------------------------+-------------+
 * 22 rows in set (0.01 sec)
 * 
 * +-------------------------------------+-------+
 * | enabled_instruments                 | timed |
 * +-------------------------------------+-------+
 * | wait/io/file/sql/map                | YES   |
 * | wait/io/file/sql/binlog             | YES   |
 * ...
 * | statement/com/Error                 | YES   |
 * | statement/com/                      | YES   |
 * | idle                                | YES   |
 * +-------------------------------------+-------+
 * 210 rows in set (0.08 sec)
 * 
 * Query OK, 0 rows affected (0.89 sec)

 */
@Suppress("UNCHECKED_CAST")
open class PsSetupShowEnabled : AbstractRoutine<java.lang.Void>("ps_setup_show_enabled", Sys.SYS) {
    companion object {

        /**
         * The parameter
         * <code>sys.ps_setup_show_enabled.in_show_instruments</code>.
         */
        val IN_SHOW_INSTRUMENTS: Parameter<Byte?> = Internal.createParameter("in_show_instruments", SQLDataType.TINYINT, false, false)

        /**
         * The parameter <code>sys.ps_setup_show_enabled.in_show_threads</code>.
         */
        val IN_SHOW_THREADS: Parameter<Byte?> = Internal.createParameter("in_show_threads", SQLDataType.TINYINT, false, false)
    }

    init {
        addInParameter(PsSetupShowEnabled.IN_SHOW_INSTRUMENTS)
        addInParameter(PsSetupShowEnabled.IN_SHOW_THREADS)
    }

    /**
     * Set the <code>in_show_instruments</code> parameter IN value to the
     * routine
     */
    fun setInShowInstruments(value: Byte?): Unit = setValue(PsSetupShowEnabled.IN_SHOW_INSTRUMENTS, value)

    /**
     * Set the <code>in_show_threads</code> parameter IN value to the routine
     */
    fun setInShowThreads(value: Byte?): Unit = setValue(PsSetupShowEnabled.IN_SHOW_THREADS, value)
}
