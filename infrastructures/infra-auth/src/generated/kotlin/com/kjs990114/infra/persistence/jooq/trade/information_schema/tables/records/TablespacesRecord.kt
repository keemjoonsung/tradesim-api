/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.Tablespaces

import org.jooq.Field
import org.jooq.Record9
import org.jooq.Row9
import org.jooq.impl.TableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class TablespacesRecord() : TableRecordImpl<TablespacesRecord>(Tablespaces.TABLESPACES), Record9<String?, String?, String?, String?, ULong?, ULong?, ULong?, ULong?, String?> {

    open var tablespaceName: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var engine: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var tablespaceType: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var logfileGroupName: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var extentSize: ULong?
        set(value): Unit = set(4, value)
        get(): ULong? = get(4) as ULong?

    open var autoextendSize: ULong?
        set(value): Unit = set(5, value)
        get(): ULong? = get(5) as ULong?

    open var maximumSize: ULong?
        set(value): Unit = set(6, value)
        get(): ULong? = get(6) as ULong?

    open var nodegroupId: ULong?
        set(value): Unit = set(7, value)
        get(): ULong? = get(7) as ULong?

    open var tablespaceComment: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row9<String?, String?, String?, String?, ULong?, ULong?, ULong?, ULong?, String?> = super.fieldsRow() as Row9<String?, String?, String?, String?, ULong?, ULong?, ULong?, ULong?, String?>
    override fun valuesRow(): Row9<String?, String?, String?, String?, ULong?, ULong?, ULong?, ULong?, String?> = super.valuesRow() as Row9<String?, String?, String?, String?, ULong?, ULong?, ULong?, ULong?, String?>
    override fun field1(): Field<String?> = Tablespaces.TABLESPACES.TABLESPACE_NAME
    override fun field2(): Field<String?> = Tablespaces.TABLESPACES.ENGINE
    override fun field3(): Field<String?> = Tablespaces.TABLESPACES.TABLESPACE_TYPE
    override fun field4(): Field<String?> = Tablespaces.TABLESPACES.LOGFILE_GROUP_NAME
    override fun field5(): Field<ULong?> = Tablespaces.TABLESPACES.EXTENT_SIZE
    override fun field6(): Field<ULong?> = Tablespaces.TABLESPACES.AUTOEXTEND_SIZE
    override fun field7(): Field<ULong?> = Tablespaces.TABLESPACES.MAXIMUM_SIZE
    override fun field8(): Field<ULong?> = Tablespaces.TABLESPACES.NODEGROUP_ID
    override fun field9(): Field<String?> = Tablespaces.TABLESPACES.TABLESPACE_COMMENT
    override fun component1(): String? = tablespaceName
    override fun component2(): String? = engine
    override fun component3(): String? = tablespaceType
    override fun component4(): String? = logfileGroupName
    override fun component5(): ULong? = extentSize
    override fun component6(): ULong? = autoextendSize
    override fun component7(): ULong? = maximumSize
    override fun component8(): ULong? = nodegroupId
    override fun component9(): String? = tablespaceComment
    override fun value1(): String? = tablespaceName
    override fun value2(): String? = engine
    override fun value3(): String? = tablespaceType
    override fun value4(): String? = logfileGroupName
    override fun value5(): ULong? = extentSize
    override fun value6(): ULong? = autoextendSize
    override fun value7(): ULong? = maximumSize
    override fun value8(): ULong? = nodegroupId
    override fun value9(): String? = tablespaceComment

    override fun value1(value: String?): TablespacesRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): TablespacesRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): TablespacesRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): TablespacesRecord {
        set(3, value)
        return this
    }

    override fun value5(value: ULong?): TablespacesRecord {
        set(4, value)
        return this
    }

    override fun value6(value: ULong?): TablespacesRecord {
        set(5, value)
        return this
    }

    override fun value7(value: ULong?): TablespacesRecord {
        set(6, value)
        return this
    }

    override fun value8(value: ULong?): TablespacesRecord {
        set(7, value)
        return this
    }

    override fun value9(value: String?): TablespacesRecord {
        set(8, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: String?, value5: ULong?, value6: ULong?, value7: ULong?, value8: ULong?, value9: String?): TablespacesRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        return this
    }

    /**
     * Create a detached, initialised TablespacesRecord
     */
    constructor(tablespaceName: String? = null, engine: String? = null, tablespaceType: String? = null, logfileGroupName: String? = null, extentSize: ULong? = null, autoextendSize: ULong? = null, maximumSize: ULong? = null, nodegroupId: ULong? = null, tablespaceComment: String? = null): this() {
        this.tablespaceName = tablespaceName
        this.engine = engine
        this.tablespaceType = tablespaceType
        this.logfileGroupName = logfileGroupName
        this.extentSize = extentSize
        this.autoextendSize = autoextendSize
        this.maximumSize = maximumSize
        this.nodegroupId = nodegroupId
        this.tablespaceComment = tablespaceComment
        resetChangedOnNotNull()
    }
}
