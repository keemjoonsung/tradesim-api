/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.auth


import com.kjs990114.infra.persistence.jooq.trade.DefaultCatalog
import com.kjs990114.infra.persistence.jooq.trade.auth.tables.User
import com.kjs990114.infra.persistence.jooq.trade.auth.tables.UserToken

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Auth : SchemaImpl("auth", DefaultCatalog.DEFAULT_CATALOG) {
    companion object {

        /**
         * The reference instance of <code>auth</code>
         */
        val AUTH: Auth = Auth()
    }

    /**
     * The table <code>auth.user</code>.
     */
    val USER: User get() = User.USER

    /**
     * The table <code>auth.user_token</code>.
     */
    val USER_TOKEN: UserToken get() = UserToken.USER_TOKEN

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        User.USER,
        UserToken.USER_TOKEN
    )
}
