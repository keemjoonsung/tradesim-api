/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.InnodbTrx

import java.time.LocalDateTime

import org.jooq.impl.TableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class InnodbTrxRecord() : TableRecordImpl<InnodbTrxRecord>(InnodbTrx.INNODB_TRX) {

    open var trxId: ULong?
        set(value): Unit = set(0, value)
        get(): ULong? = get(0) as ULong?

    open var trxState: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var trxStarted: LocalDateTime?
        set(value): Unit = set(2, value)
        get(): LocalDateTime? = get(2) as LocalDateTime?

    open var trxRequestedLockId: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var trxWaitStarted: LocalDateTime?
        set(value): Unit = set(4, value)
        get(): LocalDateTime? = get(4) as LocalDateTime?

    open var trxWeight: ULong?
        set(value): Unit = set(5, value)
        get(): ULong? = get(5) as ULong?

    open var trxMysqlThreadId: ULong?
        set(value): Unit = set(6, value)
        get(): ULong? = get(6) as ULong?

    open var trxQuery: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var trxOperationState: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var trxTablesInUse: ULong?
        set(value): Unit = set(9, value)
        get(): ULong? = get(9) as ULong?

    open var trxTablesLocked: ULong?
        set(value): Unit = set(10, value)
        get(): ULong? = get(10) as ULong?

    open var trxLockStructs: ULong?
        set(value): Unit = set(11, value)
        get(): ULong? = get(11) as ULong?

    open var trxLockMemoryBytes: ULong?
        set(value): Unit = set(12, value)
        get(): ULong? = get(12) as ULong?

    open var trxRowsLocked: ULong?
        set(value): Unit = set(13, value)
        get(): ULong? = get(13) as ULong?

    open var trxRowsModified: ULong?
        set(value): Unit = set(14, value)
        get(): ULong? = get(14) as ULong?

    open var trxConcurrencyTickets: ULong?
        set(value): Unit = set(15, value)
        get(): ULong? = get(15) as ULong?

    open var trxIsolationLevel: String?
        set(value): Unit = set(16, value)
        get(): String? = get(16) as String?

    open var trxUniqueChecks: Int?
        set(value): Unit = set(17, value)
        get(): Int? = get(17) as Int?

    open var trxForeignKeyChecks: Int?
        set(value): Unit = set(18, value)
        get(): Int? = get(18) as Int?

    open var trxLastForeignKeyError: String?
        set(value): Unit = set(19, value)
        get(): String? = get(19) as String?

    open var trxAdaptiveHashLatched: Int?
        set(value): Unit = set(20, value)
        get(): Int? = get(20) as Int?

    open var trxAdaptiveHashTimeout: ULong?
        set(value): Unit = set(21, value)
        get(): ULong? = get(21) as ULong?

    open var trxIsReadOnly: Int?
        set(value): Unit = set(22, value)
        get(): Int? = get(22) as Int?

    open var trxAutocommitNonLocking: Int?
        set(value): Unit = set(23, value)
        get(): Int? = get(23) as Int?

    open var trxScheduleWeight: ULong?
        set(value): Unit = set(24, value)
        get(): ULong? = get(24) as ULong?

    /**
     * Create a detached, initialised InnodbTrxRecord
     */
    constructor(trxId: ULong? = null, trxState: String? = null, trxStarted: LocalDateTime? = null, trxRequestedLockId: String? = null, trxWaitStarted: LocalDateTime? = null, trxWeight: ULong? = null, trxMysqlThreadId: ULong? = null, trxQuery: String? = null, trxOperationState: String? = null, trxTablesInUse: ULong? = null, trxTablesLocked: ULong? = null, trxLockStructs: ULong? = null, trxLockMemoryBytes: ULong? = null, trxRowsLocked: ULong? = null, trxRowsModified: ULong? = null, trxConcurrencyTickets: ULong? = null, trxIsolationLevel: String? = null, trxUniqueChecks: Int? = null, trxForeignKeyChecks: Int? = null, trxLastForeignKeyError: String? = null, trxAdaptiveHashLatched: Int? = null, trxAdaptiveHashTimeout: ULong? = null, trxIsReadOnly: Int? = null, trxAutocommitNonLocking: Int? = null, trxScheduleWeight: ULong? = null): this() {
        this.trxId = trxId
        this.trxState = trxState
        this.trxStarted = trxStarted
        this.trxRequestedLockId = trxRequestedLockId
        this.trxWaitStarted = trxWaitStarted
        this.trxWeight = trxWeight
        this.trxMysqlThreadId = trxMysqlThreadId
        this.trxQuery = trxQuery
        this.trxOperationState = trxOperationState
        this.trxTablesInUse = trxTablesInUse
        this.trxTablesLocked = trxTablesLocked
        this.trxLockStructs = trxLockStructs
        this.trxLockMemoryBytes = trxLockMemoryBytes
        this.trxRowsLocked = trxRowsLocked
        this.trxRowsModified = trxRowsModified
        this.trxConcurrencyTickets = trxConcurrencyTickets
        this.trxIsolationLevel = trxIsolationLevel
        this.trxUniqueChecks = trxUniqueChecks
        this.trxForeignKeyChecks = trxForeignKeyChecks
        this.trxLastForeignKeyError = trxLastForeignKeyError
        this.trxAdaptiveHashLatched = trxAdaptiveHashLatched
        this.trxAdaptiveHashTimeout = trxAdaptiveHashTimeout
        this.trxIsReadOnly = trxIsReadOnly
        this.trxAutocommitNonLocking = trxAutocommitNonLocking
        this.trxScheduleWeight = trxScheduleWeight
        resetChangedOnNotNull()
    }
}
