/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.performance_schema.enums.SetupInstrumentsEnabled
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.enums.SetupInstrumentsTimed
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.SetupInstruments

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record7
import org.jooq.Row7
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class SetupInstrumentsRecord() : UpdatableRecordImpl<SetupInstrumentsRecord>(SetupInstruments.SETUP_INSTRUMENTS), Record7<String?, SetupInstrumentsEnabled?, SetupInstrumentsTimed?, String?, String?, Int?, String?> {

    open var name: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var enabled: SetupInstrumentsEnabled?
        set(value): Unit = set(1, value)
        get(): SetupInstrumentsEnabled? = get(1) as SetupInstrumentsEnabled?

    open var timed: SetupInstrumentsTimed?
        set(value): Unit = set(2, value)
        get(): SetupInstrumentsTimed? = get(2) as SetupInstrumentsTimed?

    open var properties: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var flags: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var volatility: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    open var documentation: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row7<String?, SetupInstrumentsEnabled?, SetupInstrumentsTimed?, String?, String?, Int?, String?> = super.fieldsRow() as Row7<String?, SetupInstrumentsEnabled?, SetupInstrumentsTimed?, String?, String?, Int?, String?>
    override fun valuesRow(): Row7<String?, SetupInstrumentsEnabled?, SetupInstrumentsTimed?, String?, String?, Int?, String?> = super.valuesRow() as Row7<String?, SetupInstrumentsEnabled?, SetupInstrumentsTimed?, String?, String?, Int?, String?>
    override fun field1(): Field<String?> = SetupInstruments.SETUP_INSTRUMENTS.NAME
    override fun field2(): Field<SetupInstrumentsEnabled?> = SetupInstruments.SETUP_INSTRUMENTS.ENABLED
    override fun field3(): Field<SetupInstrumentsTimed?> = SetupInstruments.SETUP_INSTRUMENTS.TIMED
    override fun field4(): Field<String?> = SetupInstruments.SETUP_INSTRUMENTS.PROPERTIES
    override fun field5(): Field<String?> = SetupInstruments.SETUP_INSTRUMENTS.FLAGS
    override fun field6(): Field<Int?> = SetupInstruments.SETUP_INSTRUMENTS.VOLATILITY
    override fun field7(): Field<String?> = SetupInstruments.SETUP_INSTRUMENTS.DOCUMENTATION
    override fun component1(): String? = name
    override fun component2(): SetupInstrumentsEnabled? = enabled
    override fun component3(): SetupInstrumentsTimed? = timed
    override fun component4(): String? = properties
    override fun component5(): String? = flags
    override fun component6(): Int? = volatility
    override fun component7(): String? = documentation
    override fun value1(): String? = name
    override fun value2(): SetupInstrumentsEnabled? = enabled
    override fun value3(): SetupInstrumentsTimed? = timed
    override fun value4(): String? = properties
    override fun value5(): String? = flags
    override fun value6(): Int? = volatility
    override fun value7(): String? = documentation

    override fun value1(value: String?): SetupInstrumentsRecord {
        set(0, value)
        return this
    }

    override fun value2(value: SetupInstrumentsEnabled?): SetupInstrumentsRecord {
        set(1, value)
        return this
    }

    override fun value3(value: SetupInstrumentsTimed?): SetupInstrumentsRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): SetupInstrumentsRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): SetupInstrumentsRecord {
        set(4, value)
        return this
    }

    override fun value6(value: Int?): SetupInstrumentsRecord {
        set(5, value)
        return this
    }

    override fun value7(value: String?): SetupInstrumentsRecord {
        set(6, value)
        return this
    }

    override fun values(value1: String?, value2: SetupInstrumentsEnabled?, value3: SetupInstrumentsTimed?, value4: String?, value5: String?, value6: Int?, value7: String?): SetupInstrumentsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        return this
    }

    /**
     * Create a detached, initialised SetupInstrumentsRecord
     */
    constructor(name: String? = null, enabled: SetupInstrumentsEnabled? = null, timed: SetupInstrumentsTimed? = null, properties: String? = null, flags: String? = null, volatility: Int? = null, documentation: String? = null): this() {
        this.name = name
        this.enabled = enabled
        this.timed = timed
        this.properties = properties
        this.flags = flags
        this.volatility = volatility
        this.documentation = documentation
        resetChangedOnNotNull()
    }
}
