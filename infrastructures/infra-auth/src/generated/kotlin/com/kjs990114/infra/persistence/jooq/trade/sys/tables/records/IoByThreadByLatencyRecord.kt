/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.sys.tables.records


import com.kjs990114.infra.persistence.jooq.trade.sys.tables.IoByThreadByLatency

import java.math.BigInteger

import org.jooq.Field
import org.jooq.Record8
import org.jooq.Row8
import org.jooq.impl.TableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class IoByThreadByLatencyRecord() : TableRecordImpl<IoByThreadByLatencyRecord>(IoByThreadByLatency.IO_BY_THREAD_BY_LATENCY), Record8<String?, BigInteger?, String?, String?, String?, String?, ULong?, ULong?> {

    open var user: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var total: BigInteger?
        set(value): Unit = set(1, value)
        get(): BigInteger? = get(1) as BigInteger?

    open var totalLatency: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var minLatency: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var avgLatency: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var maxLatency: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var threadId: ULong?
        set(value): Unit = set(6, value)
        get(): ULong? = get(6) as ULong?

    open var processlistId: ULong?
        set(value): Unit = set(7, value)
        get(): ULong? = get(7) as ULong?

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row8<String?, BigInteger?, String?, String?, String?, String?, ULong?, ULong?> = super.fieldsRow() as Row8<String?, BigInteger?, String?, String?, String?, String?, ULong?, ULong?>
    override fun valuesRow(): Row8<String?, BigInteger?, String?, String?, String?, String?, ULong?, ULong?> = super.valuesRow() as Row8<String?, BigInteger?, String?, String?, String?, String?, ULong?, ULong?>
    override fun field1(): Field<String?> = IoByThreadByLatency.IO_BY_THREAD_BY_LATENCY.USER
    override fun field2(): Field<BigInteger?> = IoByThreadByLatency.IO_BY_THREAD_BY_LATENCY.TOTAL
    override fun field3(): Field<String?> = IoByThreadByLatency.IO_BY_THREAD_BY_LATENCY.TOTAL_LATENCY
    override fun field4(): Field<String?> = IoByThreadByLatency.IO_BY_THREAD_BY_LATENCY.MIN_LATENCY
    override fun field5(): Field<String?> = IoByThreadByLatency.IO_BY_THREAD_BY_LATENCY.AVG_LATENCY
    override fun field6(): Field<String?> = IoByThreadByLatency.IO_BY_THREAD_BY_LATENCY.MAX_LATENCY
    override fun field7(): Field<ULong?> = IoByThreadByLatency.IO_BY_THREAD_BY_LATENCY.THREAD_ID
    override fun field8(): Field<ULong?> = IoByThreadByLatency.IO_BY_THREAD_BY_LATENCY.PROCESSLIST_ID
    override fun component1(): String? = user
    override fun component2(): BigInteger? = total
    override fun component3(): String? = totalLatency
    override fun component4(): String? = minLatency
    override fun component5(): String? = avgLatency
    override fun component6(): String? = maxLatency
    override fun component7(): ULong? = threadId
    override fun component8(): ULong? = processlistId
    override fun value1(): String? = user
    override fun value2(): BigInteger? = total
    override fun value3(): String? = totalLatency
    override fun value4(): String? = minLatency
    override fun value5(): String? = avgLatency
    override fun value6(): String? = maxLatency
    override fun value7(): ULong? = threadId
    override fun value8(): ULong? = processlistId

    override fun value1(value: String?): IoByThreadByLatencyRecord {
        set(0, value)
        return this
    }

    override fun value2(value: BigInteger?): IoByThreadByLatencyRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): IoByThreadByLatencyRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): IoByThreadByLatencyRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): IoByThreadByLatencyRecord {
        set(4, value)
        return this
    }

    override fun value6(value: String?): IoByThreadByLatencyRecord {
        set(5, value)
        return this
    }

    override fun value7(value: ULong?): IoByThreadByLatencyRecord {
        set(6, value)
        return this
    }

    override fun value8(value: ULong?): IoByThreadByLatencyRecord {
        set(7, value)
        return this
    }

    override fun values(value1: String?, value2: BigInteger?, value3: String?, value4: String?, value5: String?, value6: String?, value7: ULong?, value8: ULong?): IoByThreadByLatencyRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        return this
    }

    /**
     * Create a detached, initialised IoByThreadByLatencyRecord
     */
    constructor(user: String? = null, total: BigInteger? = null, totalLatency: String? = null, minLatency: String? = null, avgLatency: String? = null, maxLatency: String? = null, threadId: ULong? = null, processlistId: ULong? = null): this() {
        this.user = user
        this.total = total
        this.totalLatency = totalLatency
        this.minLatency = minLatency
        this.avgLatency = avgLatency
        this.maxLatency = maxLatency
        this.threadId = threadId
        this.processlistId = processlistId
        resetChangedOnNotNull()
    }
}
