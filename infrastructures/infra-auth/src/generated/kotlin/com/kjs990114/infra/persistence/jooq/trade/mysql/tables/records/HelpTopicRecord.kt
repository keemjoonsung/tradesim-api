/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.mysql.tables.records


import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.HelpTopic

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.UpdatableRecordImpl
import org.jooq.types.UInteger
import org.jooq.types.UShort


/**
 * help topics
 */
@Suppress("UNCHECKED_CAST")
open class HelpTopicRecord() : UpdatableRecordImpl<HelpTopicRecord>(HelpTopic.HELP_TOPIC), Record6<UInteger?, String?, UShort?, String?, String?, String?> {

    open var helpTopicId: UInteger?
        set(value): Unit = set(0, value)
        get(): UInteger? = get(0) as UInteger?

    open var name: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var helpCategoryId: UShort?
        set(value): Unit = set(2, value)
        get(): UShort? = get(2) as UShort?

    open var description: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var example: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var url: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UInteger?> = super.key() as Record1<UInteger?>

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<UInteger?, String?, UShort?, String?, String?, String?> = super.fieldsRow() as Row6<UInteger?, String?, UShort?, String?, String?, String?>
    override fun valuesRow(): Row6<UInteger?, String?, UShort?, String?, String?, String?> = super.valuesRow() as Row6<UInteger?, String?, UShort?, String?, String?, String?>
    override fun field1(): Field<UInteger?> = HelpTopic.HELP_TOPIC.HELP_TOPIC_ID
    override fun field2(): Field<String?> = HelpTopic.HELP_TOPIC.NAME
    override fun field3(): Field<UShort?> = HelpTopic.HELP_TOPIC.HELP_CATEGORY_ID
    override fun field4(): Field<String?> = HelpTopic.HELP_TOPIC.DESCRIPTION
    override fun field5(): Field<String?> = HelpTopic.HELP_TOPIC.EXAMPLE
    override fun field6(): Field<String?> = HelpTopic.HELP_TOPIC.URL
    override fun component1(): UInteger? = helpTopicId
    override fun component2(): String? = name
    override fun component3(): UShort? = helpCategoryId
    override fun component4(): String? = description
    override fun component5(): String? = example
    override fun component6(): String? = url
    override fun value1(): UInteger? = helpTopicId
    override fun value2(): String? = name
    override fun value3(): UShort? = helpCategoryId
    override fun value4(): String? = description
    override fun value5(): String? = example
    override fun value6(): String? = url

    override fun value1(value: UInteger?): HelpTopicRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): HelpTopicRecord {
        set(1, value)
        return this
    }

    override fun value3(value: UShort?): HelpTopicRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): HelpTopicRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): HelpTopicRecord {
        set(4, value)
        return this
    }

    override fun value6(value: String?): HelpTopicRecord {
        set(5, value)
        return this
    }

    override fun values(value1: UInteger?, value2: String?, value3: UShort?, value4: String?, value5: String?, value6: String?): HelpTopicRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised HelpTopicRecord
     */
    constructor(helpTopicId: UInteger? = null, name: String? = null, helpCategoryId: UShort? = null, description: String? = null, example: String? = null, url: String? = null): this() {
        this.helpTopicId = helpTopicId
        this.name = name
        this.helpCategoryId = helpCategoryId
        this.description = description
        this.example = example
        this.url = url
        resetChangedOnNotNull()
    }
}
