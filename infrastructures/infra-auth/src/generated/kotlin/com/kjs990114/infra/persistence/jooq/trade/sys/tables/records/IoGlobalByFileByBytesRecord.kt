/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.sys.tables.records


import com.kjs990114.infra.persistence.jooq.trade.sys.tables.IoGlobalByFileByBytes

import java.math.BigDecimal

import org.jooq.Field
import org.jooq.Record9
import org.jooq.Row9
import org.jooq.impl.TableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class IoGlobalByFileByBytesRecord() : TableRecordImpl<IoGlobalByFileByBytesRecord>(IoGlobalByFileByBytes.IO_GLOBAL_BY_FILE_BY_BYTES), Record9<String?, ULong?, String?, String?, ULong?, String?, String?, String?, BigDecimal?> {

    open var file: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var countRead: ULong?
        set(value): Unit = set(1, value)
        get(): ULong? = get(1) as ULong?

    open var totalRead: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var avgRead: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var countWrite: ULong?
        set(value): Unit = set(4, value)
        get(): ULong? = get(4) as ULong?

    open var totalWritten: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var avgWrite: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var total: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var writePct: BigDecimal?
        set(value): Unit = set(8, value)
        get(): BigDecimal? = get(8) as BigDecimal?

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row9<String?, ULong?, String?, String?, ULong?, String?, String?, String?, BigDecimal?> = super.fieldsRow() as Row9<String?, ULong?, String?, String?, ULong?, String?, String?, String?, BigDecimal?>
    override fun valuesRow(): Row9<String?, ULong?, String?, String?, ULong?, String?, String?, String?, BigDecimal?> = super.valuesRow() as Row9<String?, ULong?, String?, String?, ULong?, String?, String?, String?, BigDecimal?>
    override fun field1(): Field<String?> = IoGlobalByFileByBytes.IO_GLOBAL_BY_FILE_BY_BYTES.FILE
    override fun field2(): Field<ULong?> = IoGlobalByFileByBytes.IO_GLOBAL_BY_FILE_BY_BYTES.COUNT_READ
    override fun field3(): Field<String?> = IoGlobalByFileByBytes.IO_GLOBAL_BY_FILE_BY_BYTES.TOTAL_READ
    override fun field4(): Field<String?> = IoGlobalByFileByBytes.IO_GLOBAL_BY_FILE_BY_BYTES.AVG_READ
    override fun field5(): Field<ULong?> = IoGlobalByFileByBytes.IO_GLOBAL_BY_FILE_BY_BYTES.COUNT_WRITE
    override fun field6(): Field<String?> = IoGlobalByFileByBytes.IO_GLOBAL_BY_FILE_BY_BYTES.TOTAL_WRITTEN
    override fun field7(): Field<String?> = IoGlobalByFileByBytes.IO_GLOBAL_BY_FILE_BY_BYTES.AVG_WRITE
    override fun field8(): Field<String?> = IoGlobalByFileByBytes.IO_GLOBAL_BY_FILE_BY_BYTES.TOTAL
    override fun field9(): Field<BigDecimal?> = IoGlobalByFileByBytes.IO_GLOBAL_BY_FILE_BY_BYTES.WRITE_PCT
    override fun component1(): String? = file
    override fun component2(): ULong? = countRead
    override fun component3(): String? = totalRead
    override fun component4(): String? = avgRead
    override fun component5(): ULong? = countWrite
    override fun component6(): String? = totalWritten
    override fun component7(): String? = avgWrite
    override fun component8(): String? = total
    override fun component9(): BigDecimal? = writePct
    override fun value1(): String? = file
    override fun value2(): ULong? = countRead
    override fun value3(): String? = totalRead
    override fun value4(): String? = avgRead
    override fun value5(): ULong? = countWrite
    override fun value6(): String? = totalWritten
    override fun value7(): String? = avgWrite
    override fun value8(): String? = total
    override fun value9(): BigDecimal? = writePct

    override fun value1(value: String?): IoGlobalByFileByBytesRecord {
        set(0, value)
        return this
    }

    override fun value2(value: ULong?): IoGlobalByFileByBytesRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): IoGlobalByFileByBytesRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): IoGlobalByFileByBytesRecord {
        set(3, value)
        return this
    }

    override fun value5(value: ULong?): IoGlobalByFileByBytesRecord {
        set(4, value)
        return this
    }

    override fun value6(value: String?): IoGlobalByFileByBytesRecord {
        set(5, value)
        return this
    }

    override fun value7(value: String?): IoGlobalByFileByBytesRecord {
        set(6, value)
        return this
    }

    override fun value8(value: String?): IoGlobalByFileByBytesRecord {
        set(7, value)
        return this
    }

    override fun value9(value: BigDecimal?): IoGlobalByFileByBytesRecord {
        set(8, value)
        return this
    }

    override fun values(value1: String?, value2: ULong?, value3: String?, value4: String?, value5: ULong?, value6: String?, value7: String?, value8: String?, value9: BigDecimal?): IoGlobalByFileByBytesRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        return this
    }

    /**
     * Create a detached, initialised IoGlobalByFileByBytesRecord
     */
    constructor(file: String? = null, countRead: ULong? = null, totalRead: String? = null, avgRead: String? = null, countWrite: ULong? = null, totalWritten: String? = null, avgWrite: String? = null, total: String? = null, writePct: BigDecimal? = null): this() {
        this.file = file
        this.countRead = countRead
        this.totalRead = totalRead
        this.avgRead = avgRead
        this.countWrite = countWrite
        this.totalWritten = totalWritten
        this.avgWrite = avgWrite
        this.total = total
        this.writePct = writePct
        resetChangedOnNotNull()
    }
}
