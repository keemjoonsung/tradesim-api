/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.performance_schema.enums.VariablesInfoVariableSource
import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.VariablesInfo

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record8
import org.jooq.Row8
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class VariablesInfoRecord() : TableRecordImpl<VariablesInfoRecord>(VariablesInfo.VARIABLES_INFO), Record8<String?, VariablesInfoVariableSource?, String?, String?, String?, LocalDateTime?, String?, String?> {

    open var variableName: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var variableSource: VariablesInfoVariableSource?
        set(value): Unit = set(1, value)
        get(): VariablesInfoVariableSource? = get(1) as VariablesInfoVariableSource?

    open var variablePath: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var minValue: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var maxValue: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var setTime: LocalDateTime?
        set(value): Unit = set(5, value)
        get(): LocalDateTime? = get(5) as LocalDateTime?

    open var setUser: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var setHost: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row8<String?, VariablesInfoVariableSource?, String?, String?, String?, LocalDateTime?, String?, String?> = super.fieldsRow() as Row8<String?, VariablesInfoVariableSource?, String?, String?, String?, LocalDateTime?, String?, String?>
    override fun valuesRow(): Row8<String?, VariablesInfoVariableSource?, String?, String?, String?, LocalDateTime?, String?, String?> = super.valuesRow() as Row8<String?, VariablesInfoVariableSource?, String?, String?, String?, LocalDateTime?, String?, String?>
    override fun field1(): Field<String?> = VariablesInfo.VARIABLES_INFO.VARIABLE_NAME
    override fun field2(): Field<VariablesInfoVariableSource?> = VariablesInfo.VARIABLES_INFO.VARIABLE_SOURCE
    override fun field3(): Field<String?> = VariablesInfo.VARIABLES_INFO.VARIABLE_PATH
    override fun field4(): Field<String?> = VariablesInfo.VARIABLES_INFO.MIN_VALUE
    override fun field5(): Field<String?> = VariablesInfo.VARIABLES_INFO.MAX_VALUE
    override fun field6(): Field<LocalDateTime?> = VariablesInfo.VARIABLES_INFO.SET_TIME
    override fun field7(): Field<String?> = VariablesInfo.VARIABLES_INFO.SET_USER
    override fun field8(): Field<String?> = VariablesInfo.VARIABLES_INFO.SET_HOST
    override fun component1(): String? = variableName
    override fun component2(): VariablesInfoVariableSource? = variableSource
    override fun component3(): String? = variablePath
    override fun component4(): String? = minValue
    override fun component5(): String? = maxValue
    override fun component6(): LocalDateTime? = setTime
    override fun component7(): String? = setUser
    override fun component8(): String? = setHost
    override fun value1(): String? = variableName
    override fun value2(): VariablesInfoVariableSource? = variableSource
    override fun value3(): String? = variablePath
    override fun value4(): String? = minValue
    override fun value5(): String? = maxValue
    override fun value6(): LocalDateTime? = setTime
    override fun value7(): String? = setUser
    override fun value8(): String? = setHost

    override fun value1(value: String?): VariablesInfoRecord {
        set(0, value)
        return this
    }

    override fun value2(value: VariablesInfoVariableSource?): VariablesInfoRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): VariablesInfoRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): VariablesInfoRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): VariablesInfoRecord {
        set(4, value)
        return this
    }

    override fun value6(value: LocalDateTime?): VariablesInfoRecord {
        set(5, value)
        return this
    }

    override fun value7(value: String?): VariablesInfoRecord {
        set(6, value)
        return this
    }

    override fun value8(value: String?): VariablesInfoRecord {
        set(7, value)
        return this
    }

    override fun values(value1: String?, value2: VariablesInfoVariableSource?, value3: String?, value4: String?, value5: String?, value6: LocalDateTime?, value7: String?, value8: String?): VariablesInfoRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        return this
    }

    /**
     * Create a detached, initialised VariablesInfoRecord
     */
    constructor(variableName: String? = null, variableSource: VariablesInfoVariableSource? = null, variablePath: String? = null, minValue: String? = null, maxValue: String? = null, setTime: LocalDateTime? = null, setUser: String? = null, setHost: String? = null): this() {
        this.variableName = variableName
        this.variableSource = variableSource
        this.variablePath = variablePath
        this.minValue = minValue
        this.maxValue = maxValue
        this.setTime = setTime
        this.setUser = setUser
        this.setHost = setHost
        resetChangedOnNotNull()
    }
}
