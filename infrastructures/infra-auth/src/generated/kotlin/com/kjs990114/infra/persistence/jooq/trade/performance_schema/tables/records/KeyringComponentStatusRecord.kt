/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.KeyringComponentStatus

import org.jooq.Field
import org.jooq.Record2
import org.jooq.Row2
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class KeyringComponentStatusRecord() : TableRecordImpl<KeyringComponentStatusRecord>(KeyringComponentStatus.KEYRING_COMPONENT_STATUS), Record2<String?, String?> {

    open var statusKey: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var statusValue: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row2<String?, String?> = super.fieldsRow() as Row2<String?, String?>
    override fun valuesRow(): Row2<String?, String?> = super.valuesRow() as Row2<String?, String?>
    override fun field1(): Field<String?> = KeyringComponentStatus.KEYRING_COMPONENT_STATUS.STATUS_KEY
    override fun field2(): Field<String?> = KeyringComponentStatus.KEYRING_COMPONENT_STATUS.STATUS_VALUE
    override fun component1(): String? = statusKey
    override fun component2(): String? = statusValue
    override fun value1(): String? = statusKey
    override fun value2(): String? = statusValue

    override fun value1(value: String?): KeyringComponentStatusRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): KeyringComponentStatusRecord {
        set(1, value)
        return this
    }

    override fun values(value1: String?, value2: String?): KeyringComponentStatusRecord {
        this.value1(value1)
        this.value2(value2)
        return this
    }

    /**
     * Create a detached, initialised KeyringComponentStatusRecord
     */
    constructor(statusKey: String? = null, statusValue: String? = null): this() {
        this.statusKey = statusKey
        this.statusValue = statusValue
        resetChangedOnNotNull()
    }
}
