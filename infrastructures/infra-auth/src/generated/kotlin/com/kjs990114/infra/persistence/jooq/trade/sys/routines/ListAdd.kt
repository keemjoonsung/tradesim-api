/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.sys.routines


import com.kjs990114.infra.persistence.jooq.trade.sys.Sys

import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * 
 * Description
 * -----------
 * 
 * Takes a list, and a value to add to the list, and returns the resulting list.
 * 
 * Useful for altering certain session variables, like sql_mode or
 * optimizer_switch for instance.
 * 
 * Parameters
 * -----------
 * 
 * in_list (TEXT):
 *   The comma separated list to add a value to
 * 
 * in_add_value (TEXT):
 *   The value to add to the input list
 * 
 * Returns
 * -----------
 * 
 * TEXT
 * 
 * Example
 * --------
 * 
 * mysql&gt; select @@sql_mode;
 * 
 * -----------------------------------------------------------------------------------+
 * | @@sql_mode                                                                 
 *       |
 * 
 * -----------------------------------------------------------------------------------+
 * |
 * ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION
 * |
 * 
 * -----------------------------------------------------------------------------------+
 * 1 row in set (0.00 sec)
 * 
 * mysql&gt; set sql_mode = sys.list_add(@@sql_mode, 'ANSI_QUOTES');
 * Query OK, 0 rows affected (0.06 sec)
 * 
 * mysql&gt; select @@sql_mode;
 * 
 * -----------------------------------------------------------------------------------------------+
 * | @@sql_mode                                                                 
 *                   |
 * 
 * -----------------------------------------------------------------------------------------------+
 * |
 * ANSI_QUOTES,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION
 * |
 * 
 * -----------------------------------------------------------------------------------------------+
 * 1 row in set (0.00 sec)
 * 
 * 
 */
@Suppress("UNCHECKED_CAST")
open class ListAdd : AbstractRoutine<String>("list_add", Sys.SYS, SQLDataType.CLOB) {
    companion object {

        /**
         * The parameter <code>sys.list_add.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<String?> = Internal.createParameter("RETURN_VALUE", SQLDataType.CLOB, false, false)

        /**
         * The parameter <code>sys.list_add.in_list</code>.
         */
        val IN_LIST: Parameter<String?> = Internal.createParameter("in_list", SQLDataType.CLOB, false, false)

        /**
         * The parameter <code>sys.list_add.in_add_value</code>.
         */
        val IN_ADD_VALUE: Parameter<String?> = Internal.createParameter("in_add_value", SQLDataType.CLOB, false, false)
    }

    init {
        returnParameter = ListAdd.RETURN_VALUE
        addInParameter(ListAdd.IN_LIST)
        addInParameter(ListAdd.IN_ADD_VALUE)
    }

    /**
     * Set the <code>in_list</code> parameter IN value to the routine
     */
    fun setInList(value: String?): Unit = setValue(ListAdd.IN_LIST, value)

    /**
     * Set the <code>in_list</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun setInList(field: Field<String?>): ListAdd {
        setField(ListAdd.IN_LIST, field)
        return this
    }

    /**
     * Set the <code>in_add_value</code> parameter IN value to the routine
     */
    fun setInAddValue(value: String?): Unit = setValue(ListAdd.IN_ADD_VALUE, value)

    /**
     * Set the <code>in_add_value</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    fun setInAddValue(field: Field<String?>): ListAdd {
        setField(ListAdd.IN_ADD_VALUE, field)
        return this
    }
}
