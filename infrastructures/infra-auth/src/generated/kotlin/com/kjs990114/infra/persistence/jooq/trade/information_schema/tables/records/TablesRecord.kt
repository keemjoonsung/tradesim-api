/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.information_schema.enums.TablesRowFormat
import com.kjs990114.infra.persistence.jooq.trade.information_schema.enums.TablesTableType
import com.kjs990114.infra.persistence.jooq.trade.information_schema.tables.Tables

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record21
import org.jooq.Row21
import org.jooq.impl.TableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class TablesRecord() : TableRecordImpl<TablesRecord>(Tables.TABLES), Record21<String?, String?, String?, TablesTableType?, String?, Int?, TablesRowFormat?, ULong?, ULong?, ULong?, ULong?, ULong?, ULong?, ULong?, LocalDateTime?, LocalDateTime?, LocalDateTime?, String?, Long?, String?, String?> {

    open var tableCatalog: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var tableSchema: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var tableName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var tableType: TablesTableType?
        set(value): Unit = set(3, value)
        get(): TablesTableType? = get(3) as TablesTableType?

    open var engine: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var version: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    open var rowFormat: TablesRowFormat?
        set(value): Unit = set(6, value)
        get(): TablesRowFormat? = get(6) as TablesRowFormat?

    open var tableRows: ULong?
        set(value): Unit = set(7, value)
        get(): ULong? = get(7) as ULong?

    open var avgRowLength: ULong?
        set(value): Unit = set(8, value)
        get(): ULong? = get(8) as ULong?

    open var dataLength: ULong?
        set(value): Unit = set(9, value)
        get(): ULong? = get(9) as ULong?

    open var maxDataLength: ULong?
        set(value): Unit = set(10, value)
        get(): ULong? = get(10) as ULong?

    open var indexLength: ULong?
        set(value): Unit = set(11, value)
        get(): ULong? = get(11) as ULong?

    open var dataFree: ULong?
        set(value): Unit = set(12, value)
        get(): ULong? = get(12) as ULong?

    open var autoIncrement: ULong?
        set(value): Unit = set(13, value)
        get(): ULong? = get(13) as ULong?

    open var createTime: LocalDateTime?
        set(value): Unit = set(14, value)
        get(): LocalDateTime? = get(14) as LocalDateTime?

    open var updateTime: LocalDateTime?
        set(value): Unit = set(15, value)
        get(): LocalDateTime? = get(15) as LocalDateTime?

    open var checkTime: LocalDateTime?
        set(value): Unit = set(16, value)
        get(): LocalDateTime? = get(16) as LocalDateTime?

    open var tableCollation: String?
        set(value): Unit = set(17, value)
        get(): String? = get(17) as String?

    open var checksum: Long?
        set(value): Unit = set(18, value)
        get(): Long? = get(18) as Long?

    open var createOptions: String?
        set(value): Unit = set(19, value)
        get(): String? = get(19) as String?

    open var tableComment: String?
        set(value): Unit = set(20, value)
        get(): String? = get(20) as String?

    // -------------------------------------------------------------------------
    // Record21 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row21<String?, String?, String?, TablesTableType?, String?, Int?, TablesRowFormat?, ULong?, ULong?, ULong?, ULong?, ULong?, ULong?, ULong?, LocalDateTime?, LocalDateTime?, LocalDateTime?, String?, Long?, String?, String?> = super.fieldsRow() as Row21<String?, String?, String?, TablesTableType?, String?, Int?, TablesRowFormat?, ULong?, ULong?, ULong?, ULong?, ULong?, ULong?, ULong?, LocalDateTime?, LocalDateTime?, LocalDateTime?, String?, Long?, String?, String?>
    override fun valuesRow(): Row21<String?, String?, String?, TablesTableType?, String?, Int?, TablesRowFormat?, ULong?, ULong?, ULong?, ULong?, ULong?, ULong?, ULong?, LocalDateTime?, LocalDateTime?, LocalDateTime?, String?, Long?, String?, String?> = super.valuesRow() as Row21<String?, String?, String?, TablesTableType?, String?, Int?, TablesRowFormat?, ULong?, ULong?, ULong?, ULong?, ULong?, ULong?, ULong?, LocalDateTime?, LocalDateTime?, LocalDateTime?, String?, Long?, String?, String?>
    override fun field1(): Field<String?> = Tables.TABLES.TABLE_CATALOG
    override fun field2(): Field<String?> = Tables.TABLES.TABLE_SCHEMA
    override fun field3(): Field<String?> = Tables.TABLES.TABLE_NAME
    override fun field4(): Field<TablesTableType?> = Tables.TABLES.TABLE_TYPE
    override fun field5(): Field<String?> = Tables.TABLES.ENGINE
    override fun field6(): Field<Int?> = Tables.TABLES.VERSION
    override fun field7(): Field<TablesRowFormat?> = Tables.TABLES.ROW_FORMAT
    override fun field8(): Field<ULong?> = Tables.TABLES.TABLE_ROWS
    override fun field9(): Field<ULong?> = Tables.TABLES.AVG_ROW_LENGTH
    override fun field10(): Field<ULong?> = Tables.TABLES.DATA_LENGTH
    override fun field11(): Field<ULong?> = Tables.TABLES.MAX_DATA_LENGTH
    override fun field12(): Field<ULong?> = Tables.TABLES.INDEX_LENGTH
    override fun field13(): Field<ULong?> = Tables.TABLES.DATA_FREE
    override fun field14(): Field<ULong?> = Tables.TABLES.AUTO_INCREMENT
    override fun field15(): Field<LocalDateTime?> = Tables.TABLES.CREATE_TIME
    override fun field16(): Field<LocalDateTime?> = Tables.TABLES.UPDATE_TIME
    override fun field17(): Field<LocalDateTime?> = Tables.TABLES.CHECK_TIME
    override fun field18(): Field<String?> = Tables.TABLES.TABLE_COLLATION
    override fun field19(): Field<Long?> = Tables.TABLES.CHECKSUM
    override fun field20(): Field<String?> = Tables.TABLES.CREATE_OPTIONS
    override fun field21(): Field<String?> = Tables.TABLES.TABLE_COMMENT
    override fun component1(): String? = tableCatalog
    override fun component2(): String? = tableSchema
    override fun component3(): String? = tableName
    override fun component4(): TablesTableType? = tableType
    override fun component5(): String? = engine
    override fun component6(): Int? = version
    override fun component7(): TablesRowFormat? = rowFormat
    override fun component8(): ULong? = tableRows
    override fun component9(): ULong? = avgRowLength
    override fun component10(): ULong? = dataLength
    override fun component11(): ULong? = maxDataLength
    override fun component12(): ULong? = indexLength
    override fun component13(): ULong? = dataFree
    override fun component14(): ULong? = autoIncrement
    override fun component15(): LocalDateTime? = createTime
    override fun component16(): LocalDateTime? = updateTime
    override fun component17(): LocalDateTime? = checkTime
    override fun component18(): String? = tableCollation
    override fun component19(): Long? = checksum
    override fun component20(): String? = createOptions
    override fun component21(): String? = tableComment
    override fun value1(): String? = tableCatalog
    override fun value2(): String? = tableSchema
    override fun value3(): String? = tableName
    override fun value4(): TablesTableType? = tableType
    override fun value5(): String? = engine
    override fun value6(): Int? = version
    override fun value7(): TablesRowFormat? = rowFormat
    override fun value8(): ULong? = tableRows
    override fun value9(): ULong? = avgRowLength
    override fun value10(): ULong? = dataLength
    override fun value11(): ULong? = maxDataLength
    override fun value12(): ULong? = indexLength
    override fun value13(): ULong? = dataFree
    override fun value14(): ULong? = autoIncrement
    override fun value15(): LocalDateTime? = createTime
    override fun value16(): LocalDateTime? = updateTime
    override fun value17(): LocalDateTime? = checkTime
    override fun value18(): String? = tableCollation
    override fun value19(): Long? = checksum
    override fun value20(): String? = createOptions
    override fun value21(): String? = tableComment

    override fun value1(value: String?): TablesRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): TablesRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): TablesRecord {
        set(2, value)
        return this
    }

    override fun value4(value: TablesTableType?): TablesRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): TablesRecord {
        set(4, value)
        return this
    }

    override fun value6(value: Int?): TablesRecord {
        set(5, value)
        return this
    }

    override fun value7(value: TablesRowFormat?): TablesRecord {
        set(6, value)
        return this
    }

    override fun value8(value: ULong?): TablesRecord {
        set(7, value)
        return this
    }

    override fun value9(value: ULong?): TablesRecord {
        set(8, value)
        return this
    }

    override fun value10(value: ULong?): TablesRecord {
        set(9, value)
        return this
    }

    override fun value11(value: ULong?): TablesRecord {
        set(10, value)
        return this
    }

    override fun value12(value: ULong?): TablesRecord {
        set(11, value)
        return this
    }

    override fun value13(value: ULong?): TablesRecord {
        set(12, value)
        return this
    }

    override fun value14(value: ULong?): TablesRecord {
        set(13, value)
        return this
    }

    override fun value15(value: LocalDateTime?): TablesRecord {
        set(14, value)
        return this
    }

    override fun value16(value: LocalDateTime?): TablesRecord {
        set(15, value)
        return this
    }

    override fun value17(value: LocalDateTime?): TablesRecord {
        set(16, value)
        return this
    }

    override fun value18(value: String?): TablesRecord {
        set(17, value)
        return this
    }

    override fun value19(value: Long?): TablesRecord {
        set(18, value)
        return this
    }

    override fun value20(value: String?): TablesRecord {
        set(19, value)
        return this
    }

    override fun value21(value: String?): TablesRecord {
        set(20, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?, value4: TablesTableType?, value5: String?, value6: Int?, value7: TablesRowFormat?, value8: ULong?, value9: ULong?, value10: ULong?, value11: ULong?, value12: ULong?, value13: ULong?, value14: ULong?, value15: LocalDateTime?, value16: LocalDateTime?, value17: LocalDateTime?, value18: String?, value19: Long?, value20: String?, value21: String?): TablesRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        this.value14(value14)
        this.value15(value15)
        this.value16(value16)
        this.value17(value17)
        this.value18(value18)
        this.value19(value19)
        this.value20(value20)
        this.value21(value21)
        return this
    }

    /**
     * Create a detached, initialised TablesRecord
     */
    constructor(tableCatalog: String? = null, tableSchema: String? = null, tableName: String? = null, tableType: TablesTableType? = null, engine: String? = null, version: Int? = null, rowFormat: TablesRowFormat? = null, tableRows: ULong? = null, avgRowLength: ULong? = null, dataLength: ULong? = null, maxDataLength: ULong? = null, indexLength: ULong? = null, dataFree: ULong? = null, autoIncrement: ULong? = null, createTime: LocalDateTime? = null, updateTime: LocalDateTime? = null, checkTime: LocalDateTime? = null, tableCollation: String? = null, checksum: Long? = null, createOptions: String? = null, tableComment: String? = null): this() {
        this.tableCatalog = tableCatalog
        this.tableSchema = tableSchema
        this.tableName = tableName
        this.tableType = tableType
        this.engine = engine
        this.version = version
        this.rowFormat = rowFormat
        this.tableRows = tableRows
        this.avgRowLength = avgRowLength
        this.dataLength = dataLength
        this.maxDataLength = maxDataLength
        this.indexLength = indexLength
        this.dataFree = dataFree
        this.autoIncrement = autoIncrement
        this.createTime = createTime
        this.updateTime = updateTime
        this.checkTime = checkTime
        this.tableCollation = tableCollation
        this.checksum = checksum
        this.createOptions = createOptions
        this.tableComment = tableComment
        resetChangedOnNotNull()
    }
}
