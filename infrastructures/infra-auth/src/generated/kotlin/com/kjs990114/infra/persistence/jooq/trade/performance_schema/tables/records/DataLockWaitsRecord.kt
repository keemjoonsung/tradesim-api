/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.records


import com.kjs990114.infra.persistence.jooq.trade.performance_schema.tables.DataLockWaits

import org.jooq.Field
import org.jooq.Record11
import org.jooq.Row11
import org.jooq.impl.TableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class DataLockWaitsRecord() : TableRecordImpl<DataLockWaitsRecord>(DataLockWaits.DATA_LOCK_WAITS), Record11<String?, String?, ULong?, ULong?, ULong?, ULong?, String?, ULong?, ULong?, ULong?, ULong?> {

    open var engine: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var requestingEngineLockId: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var requestingEngineTransactionId: ULong?
        set(value): Unit = set(2, value)
        get(): ULong? = get(2) as ULong?

    open var requestingThreadId: ULong?
        set(value): Unit = set(3, value)
        get(): ULong? = get(3) as ULong?

    open var requestingEventId: ULong?
        set(value): Unit = set(4, value)
        get(): ULong? = get(4) as ULong?

    open var requestingObjectInstanceBegin: ULong?
        set(value): Unit = set(5, value)
        get(): ULong? = get(5) as ULong?

    open var blockingEngineLockId: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var blockingEngineTransactionId: ULong?
        set(value): Unit = set(7, value)
        get(): ULong? = get(7) as ULong?

    open var blockingThreadId: ULong?
        set(value): Unit = set(8, value)
        get(): ULong? = get(8) as ULong?

    open var blockingEventId: ULong?
        set(value): Unit = set(9, value)
        get(): ULong? = get(9) as ULong?

    open var blockingObjectInstanceBegin: ULong?
        set(value): Unit = set(10, value)
        get(): ULong? = get(10) as ULong?

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row11<String?, String?, ULong?, ULong?, ULong?, ULong?, String?, ULong?, ULong?, ULong?, ULong?> = super.fieldsRow() as Row11<String?, String?, ULong?, ULong?, ULong?, ULong?, String?, ULong?, ULong?, ULong?, ULong?>
    override fun valuesRow(): Row11<String?, String?, ULong?, ULong?, ULong?, ULong?, String?, ULong?, ULong?, ULong?, ULong?> = super.valuesRow() as Row11<String?, String?, ULong?, ULong?, ULong?, ULong?, String?, ULong?, ULong?, ULong?, ULong?>
    override fun field1(): Field<String?> = DataLockWaits.DATA_LOCK_WAITS.ENGINE
    override fun field2(): Field<String?> = DataLockWaits.DATA_LOCK_WAITS.REQUESTING_ENGINE_LOCK_ID
    override fun field3(): Field<ULong?> = DataLockWaits.DATA_LOCK_WAITS.REQUESTING_ENGINE_TRANSACTION_ID
    override fun field4(): Field<ULong?> = DataLockWaits.DATA_LOCK_WAITS.REQUESTING_THREAD_ID
    override fun field5(): Field<ULong?> = DataLockWaits.DATA_LOCK_WAITS.REQUESTING_EVENT_ID
    override fun field6(): Field<ULong?> = DataLockWaits.DATA_LOCK_WAITS.REQUESTING_OBJECT_INSTANCE_BEGIN
    override fun field7(): Field<String?> = DataLockWaits.DATA_LOCK_WAITS.BLOCKING_ENGINE_LOCK_ID
    override fun field8(): Field<ULong?> = DataLockWaits.DATA_LOCK_WAITS.BLOCKING_ENGINE_TRANSACTION_ID
    override fun field9(): Field<ULong?> = DataLockWaits.DATA_LOCK_WAITS.BLOCKING_THREAD_ID
    override fun field10(): Field<ULong?> = DataLockWaits.DATA_LOCK_WAITS.BLOCKING_EVENT_ID
    override fun field11(): Field<ULong?> = DataLockWaits.DATA_LOCK_WAITS.BLOCKING_OBJECT_INSTANCE_BEGIN
    override fun component1(): String? = engine
    override fun component2(): String? = requestingEngineLockId
    override fun component3(): ULong? = requestingEngineTransactionId
    override fun component4(): ULong? = requestingThreadId
    override fun component5(): ULong? = requestingEventId
    override fun component6(): ULong? = requestingObjectInstanceBegin
    override fun component7(): String? = blockingEngineLockId
    override fun component8(): ULong? = blockingEngineTransactionId
    override fun component9(): ULong? = blockingThreadId
    override fun component10(): ULong? = blockingEventId
    override fun component11(): ULong? = blockingObjectInstanceBegin
    override fun value1(): String? = engine
    override fun value2(): String? = requestingEngineLockId
    override fun value3(): ULong? = requestingEngineTransactionId
    override fun value4(): ULong? = requestingThreadId
    override fun value5(): ULong? = requestingEventId
    override fun value6(): ULong? = requestingObjectInstanceBegin
    override fun value7(): String? = blockingEngineLockId
    override fun value8(): ULong? = blockingEngineTransactionId
    override fun value9(): ULong? = blockingThreadId
    override fun value10(): ULong? = blockingEventId
    override fun value11(): ULong? = blockingObjectInstanceBegin

    override fun value1(value: String?): DataLockWaitsRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): DataLockWaitsRecord {
        set(1, value)
        return this
    }

    override fun value3(value: ULong?): DataLockWaitsRecord {
        set(2, value)
        return this
    }

    override fun value4(value: ULong?): DataLockWaitsRecord {
        set(3, value)
        return this
    }

    override fun value5(value: ULong?): DataLockWaitsRecord {
        set(4, value)
        return this
    }

    override fun value6(value: ULong?): DataLockWaitsRecord {
        set(5, value)
        return this
    }

    override fun value7(value: String?): DataLockWaitsRecord {
        set(6, value)
        return this
    }

    override fun value8(value: ULong?): DataLockWaitsRecord {
        set(7, value)
        return this
    }

    override fun value9(value: ULong?): DataLockWaitsRecord {
        set(8, value)
        return this
    }

    override fun value10(value: ULong?): DataLockWaitsRecord {
        set(9, value)
        return this
    }

    override fun value11(value: ULong?): DataLockWaitsRecord {
        set(10, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: ULong?, value4: ULong?, value5: ULong?, value6: ULong?, value7: String?, value8: ULong?, value9: ULong?, value10: ULong?, value11: ULong?): DataLockWaitsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        return this
    }

    /**
     * Create a detached, initialised DataLockWaitsRecord
     */
    constructor(engine: String? = null, requestingEngineLockId: String? = null, requestingEngineTransactionId: ULong? = null, requestingThreadId: ULong? = null, requestingEventId: ULong? = null, requestingObjectInstanceBegin: ULong? = null, blockingEngineLockId: String? = null, blockingEngineTransactionId: ULong? = null, blockingThreadId: ULong? = null, blockingEventId: ULong? = null, blockingObjectInstanceBegin: ULong? = null): this() {
        this.engine = engine
        this.requestingEngineLockId = requestingEngineLockId
        this.requestingEngineTransactionId = requestingEngineTransactionId
        this.requestingThreadId = requestingThreadId
        this.requestingEventId = requestingEventId
        this.requestingObjectInstanceBegin = requestingObjectInstanceBegin
        this.blockingEngineLockId = blockingEngineLockId
        this.blockingEngineTransactionId = blockingEngineTransactionId
        this.blockingThreadId = blockingThreadId
        this.blockingEventId = blockingEventId
        this.blockingObjectInstanceBegin = blockingObjectInstanceBegin
        resetChangedOnNotNull()
    }
}
