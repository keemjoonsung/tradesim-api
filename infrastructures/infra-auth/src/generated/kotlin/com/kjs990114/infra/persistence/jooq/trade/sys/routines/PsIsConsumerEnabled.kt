/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.sys.routines


import com.kjs990114.infra.persistence.jooq.trade.sys.Sys

import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * 
 * Description
 * -----------
 * 
 * Determines whether a consumer is enabled (taking the consumer hierarchy into
 * consideration)
 * within the Performance Schema.
 * 
 * An exception with errno 3047 is thrown if an unknown consumer name is passed
 * to the function.
 * A consumer name of NULL returns NULL.
 * 
 * Parameters
 * -----------
 * 
 * in_consumer VARCHAR(64): 
 *   The name of the consumer to check.
 * 
 * Returns
 * -----------
 * 
 * ENUM('YES', 'NO')
 * 
 * Example
 * -----------
 * 
 * mysql&gt; SELECT sys.ps_is_consumer_enabled('events_stages_history');
 * +-----------------------------------------------------+
 * | sys.ps_is_consumer_enabled('events_stages_history') |
 * +-----------------------------------------------------+
 * | NO                                                  |
 * +-----------------------------------------------------+
 * 1 row in set (0.00 sec)

 */
@Suppress("UNCHECKED_CAST")
open class PsIsConsumerEnabled : AbstractRoutine<String>("ps_is_consumer_enabled", Sys.SYS, SQLDataType.VARCHAR(3)) {
    companion object {

        /**
         * The parameter <code>sys.ps_is_consumer_enabled.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<String?> = Internal.createParameter("RETURN_VALUE", SQLDataType.VARCHAR(3), false, false)

        /**
         * The parameter <code>sys.ps_is_consumer_enabled.in_consumer</code>.
         */
        val IN_CONSUMER: Parameter<String?> = Internal.createParameter("in_consumer", SQLDataType.VARCHAR(64), false, false)
    }

    init {
        returnParameter = PsIsConsumerEnabled.RETURN_VALUE
        addInParameter(PsIsConsumerEnabled.IN_CONSUMER)
    }

    /**
     * Set the <code>in_consumer</code> parameter IN value to the routine
     */
    fun setInConsumer(value: String?): Unit = setValue(PsIsConsumerEnabled.IN_CONSUMER, value)

    /**
     * Set the <code>in_consumer</code> parameter to the function to be used
     * with a {@link org.jooq.Select} statement
     */
    fun setInConsumer(field: Field<String?>): PsIsConsumerEnabled {
        setField(PsIsConsumerEnabled.IN_CONSUMER, field)
        return this
    }
}
