/*
 * This file is generated by jOOQ.
 */
package com.kjs990114.infra.persistence.jooq.trade.mysql.tables.records


import com.kjs990114.infra.persistence.jooq.trade.mysql.tables.GtidExecuted

import org.jooq.Field
import org.jooq.Record2
import org.jooq.Record3
import org.jooq.Row3
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class GtidExecutedRecord() : UpdatableRecordImpl<GtidExecutedRecord>(GtidExecuted.GTID_EXECUTED), Record3<String?, Long?, Long?> {

    open var sourceUuid: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var intervalStart: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var intervalEnd: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record2<String?, Long?> = super.key() as Record2<String?, Long?>

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row3<String?, Long?, Long?> = super.fieldsRow() as Row3<String?, Long?, Long?>
    override fun valuesRow(): Row3<String?, Long?, Long?> = super.valuesRow() as Row3<String?, Long?, Long?>
    override fun field1(): Field<String?> = GtidExecuted.GTID_EXECUTED.SOURCE_UUID
    override fun field2(): Field<Long?> = GtidExecuted.GTID_EXECUTED.INTERVAL_START
    override fun field3(): Field<Long?> = GtidExecuted.GTID_EXECUTED.INTERVAL_END
    override fun component1(): String? = sourceUuid
    override fun component2(): Long? = intervalStart
    override fun component3(): Long? = intervalEnd
    override fun value1(): String? = sourceUuid
    override fun value2(): Long? = intervalStart
    override fun value3(): Long? = intervalEnd

    override fun value1(value: String?): GtidExecutedRecord {
        set(0, value)
        return this
    }

    override fun value2(value: Long?): GtidExecutedRecord {
        set(1, value)
        return this
    }

    override fun value3(value: Long?): GtidExecutedRecord {
        set(2, value)
        return this
    }

    override fun values(value1: String?, value2: Long?, value3: Long?): GtidExecutedRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        return this
    }

    /**
     * Create a detached, initialised GtidExecutedRecord
     */
    constructor(sourceUuid: String? = null, intervalStart: Long? = null, intervalEnd: Long? = null): this() {
        this.sourceUuid = sourceUuid
        this.intervalStart = intervalStart
        this.intervalEnd = intervalEnd
        resetChangedOnNotNull()
    }
}
